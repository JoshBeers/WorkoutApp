{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _Routine = require(\"../Classes/Routine\");\n\nvar SQLite = _interopRequireWildcard(require(\"expo-sqlite\"));\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _DummyParse = require(\"../DummyData/DummyParse\");\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _Styles = require(\"../Themes/Styles\");\n\nvar _reactNativeCheckBox = _interopRequireDefault(require(\"react-native-check-box\"));\n\nvar _jsxFileName = \"D:\\\\school\\\\softdev projects\\\\WorkoutApp\\\\Screens\\\\CreateRoutineScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar CreateRoutineScreen = function (_Component) {\n  (0, _inherits2.default)(CreateRoutineScreen, _Component);\n\n  var _super = _createSuper(CreateRoutineScreen);\n\n  function CreateRoutineScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CreateRoutineScreen);\n    _this = _super.call(this);\n    _this.state = {\n      routineName: '',\n      allExercises: [],\n      isDone: false,\n      isChecked: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CreateRoutineScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      (0, _Exercise.getAllExercises)(function (result) {\n        _this2.setState({\n          allExercises: result\n        }, function () {\n          console.log(this.state);\n        });\n      });\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      var _this3 = this;\n\n      var selectedExercises = [];\n\n      for (var i = 0; i < this.state.allExercises.length; i++) {\n        if (this.state.allExercises[i].isSelected) {\n          selectedExercises.push(this.state.allExercises[i]);\n        }\n      }\n\n      var tempRoutine = new _Routine.Routine(0, this.state.routineName, 0, selectedExercises);\n      console.log(tempRoutine.name);\n      (0, _Routine.addNewRoutine)(tempRoutine, function (result) {\n        console.log(result);\n\n        _this3.setState({\n          isDone: true\n        });\n      });\n    }\n  }, {\n    key: \"modalClick\",\n    value: function modalClick() {\n      this.setState({\n        routineName: '',\n        selectedExercises: [],\n        isDone: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: _Styles.listStyle.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Modal, {\n        animationType: 'slide',\n        visible: this.state.isDone,\n        transparent: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.modalStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.modalText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, \"Nice!\"), _react.default.createElement(_reactNative.Image, {\n        source: require('../img/muscles.png'),\n        style: {\n          width: 200,\n          height: 150,\n          margin: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }), _react.default.createElement(_reactNative.Button, {\n        title: \"Return\",\n        color: _Colors.default.positive,\n        onPress: function onPress() {\n          return _this4.props.navigation.navigate('home');\n        },\n        style: {\n          alignSelf: 'center',\n          marginTop: 20,\n          marginBottom: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, \"RETURN\"))))), _react.default.createElement(_reactNative.Text, {\n        style: _Styles.listStyle.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, \"Create Routine\"), _react.default.createElement(_reactNative.View, {\n        style: styles.textField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        placeholder: \"NAME\",\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            routineName: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: {\n          height: 470\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        data: this.state.allExercises,\n        extraData: this.state.checked,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _react.default.createElement(_reactNativeElements.Card, {\n            containerStyle: styles.card,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }\n          }, _react.default.createElement(_reactNative.View, {\n            style: styles.checkRow,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }\n          }, _react.default.createElement(_reactNativeCheckBox.default, {\n            style: {\n              flex: 1,\n              padding: 10\n            },\n            onClick: function onClick() {\n              item.isSelected = !item.isSelected;\n\n              _this4.setState({\n                isChecked: !_this4.state.isChecked\n              });\n\n              console.log(_this4.state.allExercises[_this4.state.allExercises.indexOf(item)].isSelected);\n            },\n            isChecked: _this4.state.isChecked,\n            rightText: item.name,\n            rightTextStyle: styles.text,\n            uncheckedCheckBoxColor: _Colors.default.negative,\n            checkedCheckBoxColor: _Colors.default.positive,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }\n          })));\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.exerciseID.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.buttonView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        title: \"Finish\",\n        color: _Colors.default.btn,\n        onPress: function onPress() {\n          return _this4.finish();\n        },\n        disabled: this.state.routineName.length === 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      }, \"FINISH\"))));\n    }\n  }]);\n  return CreateRoutineScreen;\n}(_react.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  card: {\n    marginTop: 10,\n    marginBottom: 10,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center',\n    width: 370,\n    height: 75\n  },\n  text: {\n    color: _Colors.default.text,\n    fontSize: 20,\n    marginLeft: 10\n  },\n  buttonView: {\n    width: 100,\n    marginTop: 20,\n    alignSelf: 'center'\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: _Colors.default.text\n  },\n  textField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 40,\n    width: 300,\n    marginTop: 20,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  },\n  checkRow: {\n    flexDirection: 'row',\n    margin: 5\n  },\n  checkLabel: {\n    color: _Colors.default.text,\n    marginTop: 7\n  },\n  modalStyle: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.card,\n    alignItems: 'center',\n    marginTop: 100,\n    height: 400\n  },\n  modalText: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginTop: 40,\n    color: _Colors.default.text\n  }\n});\n\nmodule.exports = CreateRoutineScreen;","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/Screens/CreateRoutineScreen.js"],"names":["CreateRoutineScreen","state","routineName","allExercises","isDone","isChecked","result","setState","console","log","selectedExercises","i","length","isSelected","push","tempRoutine","Routine","name","listStyle","screen","styles","modalStyle","modalText","require","width","height","margin","Colors","positive","props","navigation","navigate","alignSelf","marginTop","marginBottom","buttonText","titleText","textField","text","checked","item","card","checkRow","flex","padding","indexOf","negative","exerciseID","toString","buttonView","btn","finish","Component","StyleSheet","create","backgroundColor","borderWidth","color","fontSize","marginLeft","fontWeight","textFieldBackground","borderColor","flexDirection","checkLabel","alignItems","module","exports"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {StyleSheet, TextInput, Text, View, Button, FlatList, TouchableOpacity, Modal, Image} from 'react-native';\r\nimport {Card} from 'react-native-elements';\r\nimport {Routine} from \"../Classes/Routine\";\r\nimport * as SQLite from \"expo-sqlite\";\r\nimport {createNewExerciseFromExercise, Exercise, ExerciseWithinRoutine, getAllExercises} from \"../Classes/Exercise\";\r\nimport {dumDumExercise} from \"../DummyData/DummyParse\";\r\nimport Colors from \"../Themes/Colors\";\r\nimport {listStyle} from \"../Themes/Styles\";\r\nimport CheckBox from 'react-native-check-box';\r\nimport {Routines, addNewRoutine} from \"../Classes/Routine\";\r\n\r\nclass CreateRoutineScreen extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            routineName: '',\r\n            allExercises: [],\r\n            isDone: false,\r\n            isChecked : false\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        getAllExercises((result)=>{\r\n\r\n            this.setState({\r\n                allExercises: result\r\n            }, function (){\r\n                console.log(this.state)\r\n            })\r\n        })\r\n    }\r\n\r\n    /*\r\n    // Fills the exercise array with exercise objects and whether or not they are selected\r\n    fillArray() {\r\n        let tempExercise = [];\r\n        let tempArray = [];\r\n\r\n        getAllExercises(function(result){\r\n            tempArray = result;\r\n        })\r\n        for (let i = 0; i < tempArray.length; i++) {\r\n            let tempExer = tempArray[i];\r\n            console.log(tempExer.name);\r\n            tempExercise.push({'exerciseObj': tempExer, 'isSelected': false});\r\n        }\r\n        return tempExercise;\r\n    }\r\n\r\n     */\r\n\r\n    finish(){\r\n        let selectedExercises = []\r\n        for(let i = 0; i<this.state.allExercises.length;i++){\r\n            if(this.state.allExercises[i].isSelected){\r\n                selectedExercises.push(this.state.allExercises[i])\r\n            }\r\n        }\r\n\r\n        let tempRoutine = new Routine(0, this.state.routineName, 0, selectedExercises);\r\n        console.log(tempRoutine.name);\r\n        addNewRoutine(tempRoutine, (result) =>{\r\n            console.log(result);\r\n            this.setState({isDone: true});\r\n        })\r\n\r\n    }\r\n\r\n    modalClick(){\r\n        this.setState({\r\n            routineName: '',\r\n            selectedExercises: [],\r\n            isDone: false,\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <View style={listStyle.screen}>\r\n                <View>\r\n                    <Modal\r\n                        animationType={'slide'}\r\n                        visible={this.state.isDone}\r\n                        transparent={true}\r\n                    >\r\n                        <View style = {styles.modalStyle}>\r\n                            <Text style={styles.modalText}>Nice!</Text>\r\n                            <Image source={require('../img/muscles.png')}\r\n                                   style={{\r\n                                       width: 200,\r\n                                       height: 150,\r\n                                       margin: 50,\r\n                                   }}/>\r\n                            <Button\r\n                                title=\"Return\"\r\n                                color={Colors.positive}\r\n                                onPress={() => this.props.navigation.navigate('home')}\r\n                                style={{\r\n                                    alignSelf: 'center',\r\n                                    marginTop: 20,\r\n                                    marginBottom: 40,\r\n                                }}>\r\n                                <Text style={styles.buttonText}>RETURN</Text>\r\n                            </Button>\r\n                        </View>\r\n                    </Modal>\r\n                </View>\r\n                <Text style={listStyle.titleText}>Create Routine</Text>\r\n                <View style={styles.textField}>\r\n                    <TextInput\r\n                        placeholder=\"NAME\"\r\n                        onChangeText={(text) => this.setState({routineName: text})}\r\n                    />\r\n                </View>\r\n                <View style = {{height: 470}}>\r\n                    <FlatList\r\n                    data={this.state.allExercises}\r\n                    extraData={this.state.checked}\r\n                    renderItem={({item}) =>(\r\n                            <Card containerStyle={styles.card}>\r\n                                <View style={styles.checkRow}>\r\n                                    <CheckBox\r\n                                        style={{flex: 1, padding: 10}}\r\n                                        onClick={()=>{\r\n                                            item.isSelected = (!item.isSelected)\r\n                                            this.setState({\r\n                                                isChecked: !this.state.isChecked\r\n                                            })\r\n                                            console.log(this.state.allExercises[this.state.allExercises.indexOf(item)].isSelected)\r\n                                        }}\r\n                                        isChecked={this.state.isChecked}\r\n                                        rightText={item.name}\r\n                                        rightTextStyle={styles.text}\r\n                                        uncheckedCheckBoxColor={Colors.negative}\r\n                                        checkedCheckBoxColor={Colors.positive}\r\n                                        />\r\n\r\n                                </View>\r\n                            </Card>\r\n                    )}\r\n                    keyExtractor={item => item.exerciseID.toString()}\r\n                />\r\n                </View>\r\n                <View style={styles.buttonView}>\r\n                    <Button\r\n                        title='Finish'\r\n                        color={Colors.btn}\r\n                        onPress={() => this.finish()}\r\n                        disabled={this.state.routineName.length === 0}>\r\n                        <Text style={styles.buttonText}>FINISH</Text>\r\n                    </Button>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        backgroundColor: Colors.card,\r\n        borderWidth: 0,\r\n        alignSelf: 'center',\r\n        width: 370,\r\n        height: 75,\r\n    },\r\n    text: {\r\n        color: Colors.text,\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n    },\r\n    buttonView: {\r\n        width: 100,\r\n        marginTop: 20,\r\n        alignSelf: 'center'\r\n    },\r\n    buttonText: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n        color: Colors.text,\r\n    },\r\n    textField: {\r\n        alignSelf: 'center',\r\n        backgroundColor: Colors.textFieldBackground,\r\n        color: Colors.card,\r\n        height: 40,\r\n        width: 300,\r\n        marginTop: 20,\r\n        marginBottom: 5,\r\n        borderWidth: 2,\r\n        borderColor: Colors.card,\r\n    },\r\n    checkRow:{\r\n        flexDirection: 'row',\r\n        margin: 5\r\n    },\r\n    checkLabel: {\r\n        color: Colors.text,\r\n        marginTop: 7,\r\n    },\r\n    modalStyle: {\r\n        alignSelf: 'center',\r\n        backgroundColor: Colors.card,\r\n        alignItems: 'center',\r\n        marginTop: 100,\r\n        height: 400,\r\n    },\r\n    modalText: {\r\n        fontWeight: 'bold',\r\n        fontSize: 30,\r\n        marginTop: 40,\r\n        color: Colors.text,\r\n    },\r\n})\r\n\r\nmodule.exports = CreateRoutineScreen;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}