{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar d3Scale = _interopRequireWildcard(require(\"d3-scale\"));\n\nvar array = _interopRequireWildcard(require(\"d3-array\"));\n\nvar _reactNativeSvg = _interopRequireWildcard(require(\"react-native-svg\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar XAxis = function (_PureComponent) {\n  (0, _inherits2.default)(XAxis, _PureComponent);\n\n  var _super = _createSuper(XAxis);\n\n  function XAxis() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, XAxis);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"state\", {\n      width: 0,\n      height: 0\n    });\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(XAxis, [{\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n\n      if (width !== this.state.width) {\n        this.setState({\n          width: width,\n          height: height\n        });\n      }\n    }\n  }, {\n    key: \"_getX\",\n    value: function _getX(domain) {\n      var _this$props = this.props,\n          scale = _this$props.scale,\n          spacingInner = _this$props.spacingInner,\n          spacingOuter = _this$props.spacingOuter,\n          _this$props$contentIn = _this$props.contentInset,\n          _this$props$contentIn2 = _this$props$contentIn.left,\n          left = _this$props$contentIn2 === void 0 ? 0 : _this$props$contentIn2,\n          _this$props$contentIn3 = _this$props$contentIn.right,\n          right = _this$props$contentIn3 === void 0 ? 0 : _this$props$contentIn3;\n      var width = this.state.width;\n      var x = scale().domain(domain).range([left, width - right]);\n\n      if (scale === d3Scale.scaleBand) {\n        x.paddingInner([spacingInner]).paddingOuter([spacingOuter]);\n        return function (value) {\n          return x(value) + x.bandwidth() / 2;\n        };\n      }\n\n      return x;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          scale = _this$props2.scale,\n          data = _this$props2.data,\n          xAccessor = _this$props2.xAccessor,\n          formatLabel = _this$props2.formatLabel,\n          numberOfTicks = _this$props2.numberOfTicks,\n          svg = _this$props2.svg,\n          children = _this$props2.children,\n          min = _this$props2.min,\n          max = _this$props2.max;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n\n      if (data.length === 0) {\n        return _react.default.createElement(_reactNative.View, {\n          style: style\n        });\n      }\n\n      var values = data.map(function (item, index) {\n        return xAccessor({\n          item: item,\n          index: index\n        });\n      });\n      var extent = array.extent(values);\n      var domain = scale === d3Scale.scaleBand ? values : [min || extent[0], max || extent[1]];\n\n      var x = this._getX(domain);\n\n      var ticks = numberOfTicks ? x.ticks(numberOfTicks) : values;\n      var extraProps = {\n        x: x,\n        ticks: ticks,\n        width: width,\n        height: height,\n        formatLabel: formatLabel\n      };\n      return _react.default.createElement(_reactNative.View, {\n        style: style\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flexGrow: 1\n        },\n        onLayout: function onLayout(event) {\n          return _this2._onLayout(event);\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          opacity: 0,\n          fontSize: svg.fontSize,\n          fontFamily: svg.fontFamily,\n          fontWeight: svg.fontWeight\n        }\n      }, formatLabel(ticks[0], 0)), height > 0 && width > 0 && _react.default.createElement(_reactNativeSvg.default, {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          height: height,\n          width: width\n        }\n      }, _react.default.createElement(_reactNativeSvg.G, null, _react.default.Children.map(children, function (child) {\n        return _react.default.cloneElement(child, extraProps);\n      }), width > 0 && ticks.map(function (value, index) {\n        var _ref = data[index] || {},\n            _ref$svg = _ref.svg,\n            valueSvg = _ref$svg === void 0 ? {} : _ref$svg;\n\n        return _react.default.createElement(_reactNativeSvg.Text, _extends({\n          textAnchor: 'middle',\n          originX: x(value),\n          alignmentBaseline: 'hanging'\n        }, svg, valueSvg, {\n          key: index,\n          x: x(value)\n        }), formatLabel(value, index));\n      })))));\n    }\n  }]);\n  return XAxis;\n}(_react.PureComponent);\n\nXAxis.propTypes = {\n  data: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object])).isRequired,\n  spacingInner: _propTypes.default.number,\n  spacingOuter: _propTypes.default.number,\n  formatLabel: _propTypes.default.func,\n  contentInset: _propTypes.default.shape({\n    left: _propTypes.default.number,\n    right: _propTypes.default.number\n  }),\n  scale: _propTypes.default.func,\n  numberOfTicks: _propTypes.default.number,\n  xAccessor: _propTypes.default.func,\n  svg: _propTypes.default.object,\n  min: _propTypes.default.any,\n  max: _propTypes.default.any\n};\nXAxis.defaultProps = {\n  spacingInner: 0.05,\n  spacingOuter: 0.05,\n  contentInset: {},\n  svg: {},\n  xAccessor: function xAccessor(_ref2) {\n    var index = _ref2.index;\n    return index;\n  },\n  scale: d3Scale.scaleLinear,\n  formatLabel: function formatLabel(value) {\n    return value;\n  }\n};\nvar _default = XAxis;\nexports.default = _default;","map":{"version":3,"sources":["x-axis.js"],"names":["width","height","nativeEvent","layout","contentInset","left","right","x","scale","d3Scale","value","max","data","style","values","xAccessor","item","index","extent","array","domain","min","ticks","numberOfTicks","extraProps","formatLabel","flexGrow","event","opacity","fontSize","svg","fontFamily","fontWeight","position","top","child","React","valueSvg","XAxis","PropTypes","spacingInner","spacingOuter","number","any"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text, View } from 'react-native'\nimport * as d3Scale from 'd3-scale'\nimport * as array from 'd3-array'\nimport Svg, { G, Text as SVGText } from 'react-native-svg'\n\nclass XAxis extends PureComponent {\n    state = {\n        width: 0,\n        height: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { width, height },\n            },\n        } = event\n\n        if (width !== this.state.width) {\n            this.setState({ width, height })\n        }\n    }\n\n    _getX(domain) {\n        const {\n            scale,\n            spacingInner,\n            spacingOuter,\n            contentInset: { left = 0, right = 0 },\n        } = this.props\n\n        const { width } = this.state\n\n        const x = scale()\n            .domain(domain)\n            .range([left, width - right])\n\n        if (scale === d3Scale.scaleBand) {\n            x.paddingInner([spacingInner]).paddingOuter([spacingOuter])\n\n            //add half a bar to center label\n            return (value) => x(value) + x.bandwidth() / 2\n        }\n\n        return x\n    }\n\n    render() {\n        const { style, scale, data, xAccessor, formatLabel, numberOfTicks, svg, children, min, max } = this.props\n\n        const { height, width } = this.state\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const values = data.map((item, index) => xAccessor({ item, index }))\n        const extent = array.extent(values)\n        const domain = scale === d3Scale.scaleBand ? values : [min || extent[0], max || extent[1]]\n\n        const x = this._getX(domain)\n        const ticks = numberOfTicks ? x.ticks(numberOfTicks) : values\n\n        const extraProps = {\n            x,\n            ticks,\n            width,\n            height,\n            formatLabel,\n        }\n\n        return (\n            <View style={style}>\n                <View style={{ flexGrow: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {/*invisible text to allow for parent resizing*/}\n                    <Text\n                        style={{\n                            opacity: 0,\n                            fontSize: svg.fontSize,\n                            fontFamily: svg.fontFamily,\n                            fontWeight: svg.fontWeight,\n                        }}\n                    >\n                        {formatLabel(ticks[0], 0)}\n                    </Text>\n                    {height > 0 && width > 0 && (\n                        <Svg\n                            style={{\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                height,\n                                width,\n                            }}\n                        >\n                            <G>\n                                {React.Children.map(children, (child) => {\n                                    return React.cloneElement(child, extraProps)\n                                })}\n                                {// don't render labels if width isn't measured yet,\n                                // causes rendering issues\n                                width > 0 &&\n                                    ticks.map((value, index) => {\n                                        const { svg: valueSvg = {} } = data[index] || {}\n\n                                        return (\n                                            <SVGText\n                                                textAnchor={'middle'}\n                                                originX={x(value)}\n                                                alignmentBaseline={'hanging'}\n                                                {...svg}\n                                                {...valueSvg}\n                                                key={index}\n                                                x={x(value)}\n                                            >\n                                                {formatLabel(value, index)}\n                                            </SVGText>\n                                        )\n                                    })}\n                            </G>\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nXAxis.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.object])).isRequired,\n    spacingInner: PropTypes.number,\n    spacingOuter: PropTypes.number,\n    formatLabel: PropTypes.func,\n    contentInset: PropTypes.shape({\n        left: PropTypes.number,\n        right: PropTypes.number,\n    }),\n    scale: PropTypes.func,\n    numberOfTicks: PropTypes.number,\n    xAccessor: PropTypes.func,\n    svg: PropTypes.object,\n    min: PropTypes.any,\n    max: PropTypes.any,\n}\n\nXAxis.defaultProps = {\n    spacingInner: 0.05,\n    spacingOuter: 0.05,\n    contentInset: {},\n    svg: {},\n    xAccessor: ({ index }) => index,\n    scale: d3Scale.scaleLinear,\n    formatLabel: (value) => value,\n}\n\nexport default XAxis\n"]},"metadata":{},"sourceType":"script"}