{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = BottomTabBar;\nexports.getTabBarHeight = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _BottomTabItem = _interopRequireDefault(require(\"./BottomTabItem\"));\n\nvar _BottomTabBarHeightCallbackContext = _interopRequireDefault(require(\"../utils/BottomTabBarHeightCallbackContext\"));\n\nvar _useWindowDimensions = _interopRequireDefault(require(\"../utils/useWindowDimensions\"));\n\nvar _useIsKeyboardShown = _interopRequireDefault(require(\"../utils/useIsKeyboardShown\"));\n\nvar _jsxFileName = \"D:\\\\Dell\\\\Documents\\\\SCHOOL SHIT\\\\FALL 2020\\\\Software Dev Project\\\\WorkoutApp\\\\node_modules\\\\@react-navigation\\\\bottom-tabs\\\\src\\\\views\\\\BottomTabBar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = _reactNative.Platform.OS !== 'web';\n\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n      layout = _ref.layout,\n      dimensions = _ref.dimensions,\n      _ref$adaptive = _ref.adaptive,\n      adaptive = _ref$adaptive === void 0 ? true : _ref$adaptive,\n      labelPosition = _ref.labelPosition,\n      tabStyle = _ref.tabStyle;\n\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    var flattenedStyle = _reactNative.StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - _reactNative.Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\n\nvar getTabBarHeight = function getTabBarHeight(_ref2) {\n  var _StyleSheet$flatten;\n\n  var dimensions = _ref2.dimensions,\n      insets = _ref2.insets,\n      style = _ref2.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref2, [\"dimensions\", \"insets\", \"style\"]);\n  var customHeight = (_StyleSheet$flatten = _reactNative.StyleSheet.flatten(style)) == null ? void 0 : _StyleSheet$flatten.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n\n  if (_reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexports.getTabBarHeight = getTabBarHeight;\n\nfunction BottomTabBar(_ref3) {\n  var _safeAreaInsets$top,\n      _safeAreaInsets$right,\n      _safeAreaInsets$botto,\n      _safeAreaInsets$left,\n      _this = this;\n\n  var state = _ref3.state,\n      navigation = _ref3.navigation,\n      descriptors = _ref3.descriptors,\n      activeBackgroundColor = _ref3.activeBackgroundColor,\n      activeTintColor = _ref3.activeTintColor,\n      adaptive = _ref3.adaptive,\n      allowFontScaling = _ref3.allowFontScaling,\n      inactiveBackgroundColor = _ref3.inactiveBackgroundColor,\n      inactiveTintColor = _ref3.inactiveTintColor,\n      _ref3$keyboardHidesTa = _ref3.keyboardHidesTabBar,\n      keyboardHidesTabBar = _ref3$keyboardHidesTa === void 0 ? false : _ref3$keyboardHidesTa,\n      labelPosition = _ref3.labelPosition,\n      labelStyle = _ref3.labelStyle,\n      iconStyle = _ref3.iconStyle,\n      safeAreaInsets = _ref3.safeAreaInsets,\n      showLabel = _ref3.showLabel,\n      style = _ref3.style,\n      tabStyle = _ref3.tabStyle;\n\n  var _useTheme = (0, _native.useTheme)(),\n      colors = _useTheme.colors;\n\n  var buildLink = (0, _native.useLinkBuilder)();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var dimensions = (0, _useWindowDimensions.default)();\n  var isKeyboardShown = (0, _useIsKeyboardShown.default)();\n\n  var onHeightChange = _react.default.useContext(_BottomTabBarHeightCallbackContext.default);\n\n  var shouldShowTabBar = focusedOptions.tabBarVisible !== false && !(keyboardHidesTabBar && isKeyboardShown);\n\n  var visibilityAnimationConfigRef = _react.default.useRef(focusedOptions.tabBarVisibilityAnimationConfig);\n\n  _react.default.useEffect(function () {\n    visibilityAnimationConfigRef.current = focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  var _React$useState = _react.default.useState(!shouldShowTabBar),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isTabBarHidden = _React$useState2[0],\n      setIsTabBarHidden = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(function () {\n    return new _reactNative.Animated.Value(shouldShowTabBar ? 1 : 0);\n  }),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 1),\n      visible = _React$useState4[0];\n\n  _react.default.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n\n      var animation = (visibilityAnimationConfig == null ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) == null ? void 0 : _visibilityAnimationC.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig == null ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) == null ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n\n      setIsTabBarHidden(true);\n\n      var _animation = (visibilityAnimationConfig == null ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) == null ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n\n      _animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig == null ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) == null ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  var _React$useState5 = _react.default.useState({\n    height: 0,\n    width: dimensions.width\n  }),\n      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n      layout = _React$useState6[0],\n      setLayout = _React$useState6[1];\n\n  var handleLayout = function handleLayout(e) {\n    var _StyleSheet$flatten2;\n\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout.height,\n        width = _e$nativeEvent$layout.width;\n    var topBorderWidth = (_StyleSheet$flatten2 = _reactNative.StyleSheet.flatten([styles.tabBar, style])) == null ? void 0 : _StyleSheet$flatten2.borderTopWidth;\n    onHeightChange == null ? void 0 : onHeightChange(height + paddingBottom + (typeof topBorderWidth === 'number' ? topBorderWidth : 0));\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n\n  var routes = state.routes;\n  var defaultInsets = (0, _reactNativeSafeAreaContext.useSafeArea)();\n  var insets = {\n    top: (_safeAreaInsets$top = safeAreaInsets == null ? void 0 : safeAreaInsets.top) != null ? _safeAreaInsets$top : defaultInsets.top,\n    right: (_safeAreaInsets$right = safeAreaInsets == null ? void 0 : safeAreaInsets.right) != null ? _safeAreaInsets$right : defaultInsets.right,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets == null ? void 0 : safeAreaInsets.bottom) != null ? _safeAreaInsets$botto : defaultInsets.bottom,\n    left: (_safeAreaInsets$left = safeAreaInsets == null ? void 0 : safeAreaInsets.left) != null ? _safeAreaInsets$left : defaultInsets.left\n  };\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle,\n    style: style\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle\n  });\n  return _react.default.createElement(_reactNative.Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + _reactNative.StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, style],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.content,\n    onLayout: handleLayout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, routes.map(function (route, index) {\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, _native.CommonActions.navigate(route.name)), {}, {\n          target: state.key\n        }));\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' ? label + \", tab, \" + (index + 1) + \" of \" + routes.length : undefined;\n    return _react.default.createElement(_native.NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_native.NavigationRouteContext.Provider, {\n      value: route,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, _react.default.createElement(_BottomTabItem.default, {\n      route: route,\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: allowFontScaling,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      activeBackgroundColor: activeBackgroundColor,\n      inactiveBackgroundColor: inactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon,\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: showLabel,\n      labelStyle: labelStyle,\n      iconStyle: iconStyle,\n      style: tabStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    })));\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["D:/Dell/Documents/SCHOOL SHIT/FALL 2020/Software Dev Project/WorkoutApp/node_modules/@react-navigation/bottom-tabs/src/views/BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","state","layout","dimensions","adaptive","labelPosition","tabStyle","width","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","routes","length","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","style","rest","customHeight","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","descriptors","activeBackgroundColor","activeTintColor","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelStyle","iconStyle","safeAreaInsets","showLabel","colors","buildLink","focusedRoute","index","focusedDescriptor","key","focusedOptions","options","isKeyboardShown","onHeightChange","React","useContext","BottomTabBarHeightCallbackContext","shouldShowTabBar","tabBarVisible","visibilityAnimationConfigRef","useRef","tabBarVisibilityAnimationConfig","useEffect","current","useState","isTabBarHidden","setIsTabBarHidden","Animated","Value","visible","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","config","start","finished","hide","setLayout","handleLayout","e","nativeEvent","topBorderWidth","styles","tabBar","borderTopWidth","defaultInsets","top","right","left","tabBarHeight","hasHorizontalLabels","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","content","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","params","tabBarTestID","tabBarButton","tabBarIcon","tabBarBadge","tabBarBadgeStyle","create","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  TabNavigationState,\n  ParamListBase,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea, EdgeInsets } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps, LabelPosition } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n  tabStyle: StyleProp<ViewStyle>;\n  labelPosition: LabelPosition | undefined;\n  adaptive: boolean | undefined;\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  layout,\n  dimensions,\n  adaptive = true,\n  labelPosition,\n  tabStyle,\n}: Options) => {\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({ dimensions, ...rest });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const topBorderWidth =\n      // @ts-ignore\n      StyleSheet.flatten([styles.tabBar, style])?.borderTopWidth;\n\n    onHeightChange?.(\n      height +\n        paddingBottom +\n        (typeof topBorderWidth === 'number' ? topBorderWidth : 0)\n    );\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    insets,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n    style,\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n  });\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}