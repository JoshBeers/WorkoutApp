{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIsKeyboardShown;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction useIsKeyboardShown() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isKeyboardShown = _React$useState2[0],\n      setIsKeyboardShown = _React$useState2[1];\n\n  React.useEffect(function () {\n    var handleKeyboardShow = function handleKeyboardShow() {\n      return setIsKeyboardShown(true);\n    };\n\n    var handleKeyboardHide = function handleKeyboardHide() {\n      return setIsKeyboardShown(false);\n    };\n\n    if (_reactNative.Platform.OS === 'ios') {\n      _reactNative.Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n\n      _reactNative.Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      _reactNative.Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n\n      _reactNative.Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return function () {\n      if (_reactNative.Platform.OS === 'ios') {\n        _reactNative.Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n\n        _reactNative.Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        _reactNative.Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n\n        _reactNative.Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n  return isKeyboardShown;\n}","map":{"version":3,"sources":["D:/Dell/Documents/SCHOOL SHIT/FALL 2020/Software Dev Project/WorkoutApp/node_modules/@react-navigation/bottom-tabs/src/utils/useIsKeyboardShown.tsx"],"names":["useIsKeyboardShown","React","useState","isKeyboardShown","setIsKeyboardShown","useEffect","handleKeyboardShow","handleKeyboardHide","Platform","OS","Keyboard","addListener","removeListener"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEe,SAASA,kBAAT,GAA8B;AAAA,wBACGC,KAAK,CAACC,QAAN,CAAe,KAAf,CADH;AAAA;AAAA,MACpCC,eADoC;AAAA,MACnBC,kBADmB;;AAG3CH,EAAAA,KAAK,CAACI,SAAN,CAAgB,YAAM;AACpB,QAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,aAAMF,kBAAkB,CAAC,IAAD,CAAxB;AAAA,KAA3B;;AACA,QAAMG,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,aAAMH,kBAAkB,CAAC,KAAD,CAAxB;AAAA,KAA3B;;AAEA,QAAII,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzBC,4BAASC,WAAT,CAAqB,kBAArB,EAAyCL,kBAAzC;;AACAI,4BAASC,WAAT,CAAqB,kBAArB,EAAyCJ,kBAAzC;AACD,KAHD,MAGO;AACLG,4BAASC,WAAT,CAAqB,iBAArB,EAAwCL,kBAAxC;;AACAI,4BAASC,WAAT,CAAqB,iBAArB,EAAwCJ,kBAAxC;AACD;;AAED,WAAO,YAAM;AACX,UAAIC,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzBC,8BAASE,cAAT,CAAwB,kBAAxB,EAA4CN,kBAA5C;;AACAI,8BAASE,cAAT,CAAwB,kBAAxB,EAA4CL,kBAA5C;AACD,OAHD,MAGO;AACLG,8BAASE,cAAT,CAAwB,iBAAxB,EAA2CN,kBAA3C;;AACAI,8BAASE,cAAT,CAAwB,iBAAxB,EAA2CL,kBAA3C;AACD;AACF,KARD;AASD,GArBD,EAqBG,EArBH;AAuBA,SAAOJ,eAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"script"}