{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runSQLTest = runSQLTest;\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _StartUpSQL = require(\"../StartUpSQL\");\n\nvar _Routine = require(\"../Classes/Routine\");\n\nfunction testGetAllRoutinesWithOutExercises(callback) {\n  console.log(\"sqllog_test_GetAllRoutinesWithOutExercises\", \"the test has begun\");\n  (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n    if (result.length == 1) {\n      console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\", \"testGetAllRoutinesWithOutExercises method passed\");\n    } else {\n      console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\", \"testGetAllRoutinesWithOutExercises method failed resulting array this should match the dummy data array that is 1 long = \" + result.length);\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testGetExercisesFromRoutine1(callback) {\n  (0, _Exercise.getExerciseFromRoutine)(1, function (result) {\n    if (result.length == 3) {\n      console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\", \"testGetExercisesFromRoutine1 method passed\");\n    } else {\n      console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\", \"testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \" + result.length);\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testAddExerciseToRoutine(callback) {\n  console.log(\"sqllog_test_AddExerciseToRoutine\", \"the test has begun\");\n  var data = new _Exercise.ExerciseWithinRoutine(1, 1, 5);\n  console.log(\"sqllog_test_AddExerciseToRoutine\", result);\n  (0, _Exercise.addExerciseToRoutine)(1, data, function () {\n    (0, _Exercise.getExerciseFromRoutine)(1, function (result) {\n      console.log(\"sqllog_test_AddExerciseToRoutine_ressult\", result);\n\n      if (result[result.length - 1] == data) {\n        console.log(\"sqllog_test_AddExerciseToRoutine_ressult\", \"testAddExerciseToRoutine method passed\");\n      } else {\n        console.log(\"sqllog_test_AddExerciseToRoutine_ressult\", \"testAddExerciseToRoutine method failed the new data doesnt match the added data\");\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testGetAllExercises(callback) {\n  (0, _Exercise.getAllExercises)(function (result) {\n    if (result.length == 3) {\n      console.log(\"sqllog_test_testGetAllExercises_results\", \"testGetAllExercises method passed\");\n    } else {\n      console.log(\"sqllog_test_testGetAllExercises_results\", \"testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \" + result.length);\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testCreateNewExerciseFromExercise(callback) {\n  (0, _Exercise.createNewExerciseFromExercise)(new _Exercise.Exercise(1, \"test exercise\", \"this is a test val\", false), function () {\n    (0, _Exercise.getAllExercises)(function (result) {\n      if (result[result.length - 1].name = \"test exercise\") {\n        console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\", \"CreateNewExerciseFromExercise method passed\");\n      } else {\n        console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\", \"CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \" + result.length);\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testDeleteExerciseById(callback) {\n  var temp = null;\n  (0, _Exercise.getAllExercises)(function (result) {\n    temp = result.length;\n    (0, _Exercise.deleteExerciseById)(result.length - 1, function () {\n      (0, _Exercise.getAllExercises)(function (result) {\n        if (result.length == temp - 1) {\n          console.log(\"sqllog_test_DeleteExerciseById_results\", \"testDeleteExerciseById method passed\");\n        } else {\n          console.log(\"sqllog_test_DeleteExerciseById_results\", \"testDeleteExerciseById method failed length init = \" + temp + \" after call = \" + result.length + \" should be one less than init\");\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction exerciseTests(callback) {\n  testGetAllExercises(function () {\n    testCreateNewExerciseFromExercise(function () {\n      testDeleteExerciseById(function () {\n        callback();\n      });\n    });\n  });\n}\n\nfunction routineTests() {\n  testGetAllRoutinesWithOutExercises(function () {\n    testGetExercisesFromRoutine1(function () {\n      testAddExerciseToRoutine(function () {});\n    });\n  });\n}\n\nfunction runSQLTest() {\n  (0, _StartUpSQL.createDummyData)(function () {\n    exerciseTests(function () {\n      routineTests();\n    });\n  });\n}","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/test/SQLTesting.js"],"names":["testGetAllRoutinesWithOutExercises","callback","console","log","result","length","testGetExercisesFromRoutine1","testAddExerciseToRoutine","data","ExerciseWithinRoutine","testGetAllExercises","testCreateNewExerciseFromExercise","Exercise","name","testDeleteExerciseById","temp","exerciseTests","routineTests","runSQLTest"],"mappings":"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","sourcesContent":["\r\n\r\nimport {\r\n    addExerciseToRoutine,\r\n    createNewExerciseFromExercise,\r\n    deleteExerciseById,\r\n    Exercise, ExerciseWithinRoutine,\r\n    getAllExercises,\r\n    getExerciseFromRoutine\r\n} from \"../Classes/Exercise\";\r\nimport {createDummyData} from \"../StartUpSQL\";\r\nimport {getAllRoutinesWithOutExercises} from \"../Classes/Routine\";\r\n\r\n/*\r\nall of the test for routines\r\n\r\n */\r\nfunction testGetAllRoutinesWithOutExercises(callback){\r\n    console.log(\"sqllog_test_GetAllRoutinesWithOutExercises\",\"the test has begun\")\r\n    getAllRoutinesWithOutExercises(function(result){\r\n        //console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\", result)\r\n\r\n        if(result.length == 1){\r\n            console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\",\"testGetAllRoutinesWithOutExercises method passed\")\r\n        }else{\r\n            console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\",\"testGetAllRoutinesWithOutExercises method failed resulting array this should match the dummy data array that is 1 long = \"+result.length)\r\n        }\r\n\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction testGetExercisesFromRoutine1(callback){\r\n    //console.log(\"sqllog_test_gettingExercisesFromRoutine1\",\"the test has begun\")\r\n    getExerciseFromRoutine(1, function(result) {\r\n       // console.log(\"test_gettingExercisesFromRoutine1_result\",result)\r\n\r\n        if(result.length == 3){\r\n            console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\",\"testGetExercisesFromRoutine1 method passed\")\r\n        }else{\r\n            console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\",\"testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \"+result.length)\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testAddExerciseToRoutine(callback){\r\n    console.log(\"sqllog_test_AddExerciseToRoutine\",\"the test has begun\")\r\n    const data= new ExerciseWithinRoutine(1,1,5)\r\n\r\n\r\n        console.log(\"sqllog_test_AddExerciseToRoutine\",result)\r\n        addExerciseToRoutine(1,data, function(){\r\n         //   console.log(\"sqllog_test_AddExerciseToRoutine\",\"add exercise\")\r\n            getExerciseFromRoutine(1, function (result){\r\n                console.log(\"sqllog_test_AddExerciseToRoutine_ressult\",result)\r\n\r\n\r\n                if(result[result.length-1] == data){\r\n                    console.log(\"sqllog_test_AddExerciseToRoutine_ressult\",\"testAddExerciseToRoutine method passed\")\r\n                }else{\r\n                    console.log(\"sqllog_test_AddExerciseToRoutine_ressult\",\"testAddExerciseToRoutine method failed the new data doesnt match the added data\")\r\n                }\r\n\r\n\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    \r\n\r\n}\r\n\r\n\r\n/*\r\nall the test for exercises\r\n\r\n */\r\n\r\nfunction testGetAllExercises(callback){\r\n    //console.log(\"sqllog_test_GetAllExercises\",\"the testGetAllExercises test has begun\")\r\n    getAllExercises(function (result){\r\n        //console.log(\"sqllog_test_testGetAllExercises_results\",result)\r\n\r\n        if(result.length == 3){\r\n            console.log(\"sqllog_test_testGetAllExercises_results\",\"testGetAllExercises method passed\")\r\n        }else{\r\n            console.log(\"sqllog_test_testGetAllExercises_results\",\"testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \"+result.length)\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testCreateNewExerciseFromExercise(callback){\r\n    //console.log(\"sqllog_test_CreateNewExerciseFromExercise\",\"the testGetAllExercises test has begun\")\r\n    createNewExerciseFromExercise(new Exercise(1,\"test exercise\",\"this is a test val\", false), function (){\r\n        getAllExercises(function (result){\r\n            //console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",result[result.length-1])\r\n\r\n            if(result[result.length-1].name = \"test exercise\"){\r\n                console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",\"CreateNewExerciseFromExercise method passed\")\r\n            }else{\r\n                console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",\"CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \"+result.length)\r\n            }\r\n\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n\r\nfunction testDeleteExerciseById(callback){\r\n   // console.log(\"sqllog_test_DeleteExerciseById\",\"the testDeleteExerciseById test has begun\")\r\n    let temp = null\r\n\r\n    getAllExercises(function (result){\r\n        temp = result.length\r\n        deleteExerciseById(result.length-1,function (){\r\n\r\n            getAllExercises(function (result){\r\n\r\n                if(result.length == temp-1){\r\n                    console.log(\"sqllog_test_DeleteExerciseById_results\",\"testDeleteExerciseById method passed\")\r\n                }else{\r\n                    console.log(\"sqllog_test_DeleteExerciseById_results\",\"testDeleteExerciseById method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\")\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n\r\n            })\r\n        })\r\n    })\r\n\r\n}\r\n\r\n\r\n//actuall testing\r\n\r\nfunction exerciseTests(callback){\r\n    testGetAllExercises(function (){\r\n        testCreateNewExerciseFromExercise( function (){\r\n            testDeleteExerciseById(function (){\r\n                callback()\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction routineTests(){\r\n    testGetAllRoutinesWithOutExercises(function(){\r\n        testGetExercisesFromRoutine1(function () {\r\n            testAddExerciseToRoutine(function (){\r\n            })\r\n        })\r\n    })\r\n\r\n}\r\n\r\n\r\nexport function runSQLTest(){\r\n    createDummyData(function (){\r\n        exerciseTests(function (){\r\n            routineTests()\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}