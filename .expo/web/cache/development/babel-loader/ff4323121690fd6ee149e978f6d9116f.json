{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runSQLTest = runSQLTest;\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _StartUpSQL = require(\"../StartUpSQL\");\n\nvar _Routine = require(\"../Classes/Routine\");\n\nvar _Workout = require(\"../Classes/Workout\");\n\nfunction testAddNewRoutine(callback) {\n  console.log(\"sqllog_test_AddNewRoutine\", \"the test has begun\");\n  var tE = [new _Exercise.ExerciseWithinRoutine(1, 1, 1, 1), new _Exercise.ExerciseWithinRoutine(2, 1, 2, 5)];\n  var tR = new _Routine.Routine(null, 'test adding new routine', 4, tE);\n  (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n    var originalRoutineList = result;\n    (0, _Exercise.getAllExercisesWithinRoutines)(function (re) {\n      var originalExercises = re;\n      (0, _Routine.addNewRoutine)(tR, function () {\n        (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n          var testRoutines = result;\n          (0, _Exercise.getAllExercisesWithinRoutines)(function (finalExercises) {\n            if (originalRoutineList.length + 1 == testRoutines.length) {\n              colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine routine list length test passed\", 'green');\n            } else {\n              colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine routine list length test failed length expected = \" + originalRoutineList.length + \"result = \" + testRoutines.length, 'red');\n            }\n\n            if (originalExercises.length + 2 == finalExercises.length) {\n              colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine exercise list length test passed\", 'green');\n            } else {\n              colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine exercise list length test faied length expected = \" + originalExercises.length + 2 + \"result = \" + finalExercises.length, 'red');\n            }\n\n            if (callback != null) {\n              callback();\n            }\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction testGetAllRoutinesWithOutExercises(callback) {\n  console.log(\"sqllog_test_GetAllRoutinesWithOutExercises\", \"the test has begun\");\n  (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n    if (result.length == 1) {\n      var msg = \"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method passed\";\n      colorTrace(msg, 'green');\n    } else {\n      colorTrace(\"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method failed resulting array this should match the dummy data array that is 1 long = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testGetExercisesFromRoutine1(callback) {\n  console.log(\"sqllog_test_gettingExercisesFromRoutine1\", \"the test has begun\");\n  (0, _Exercise.getExerciseFromRoutine)(1, function (result) {\n    if (result.length == 3) {\n      colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testAddExerciseToRoutine(callback) {\n  console.log(\"sqllog_test_AddExerciseToRoutine\", \"the test has begun\");\n  var data = new _Exercise.ExerciseWithinRoutine(1, 4, 1, 5);\n  (0, _Exercise.addExerciseToRoutine)(1, data, function () {\n    (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n      if (result.length == 4) {\n        colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\", 'red');\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testAddMultipleExercisesToRoutine(callback) {\n  console.log(\"sqllog_test_AddMultipleExercisesToRoutine\", \"the test has begun\");\n  var data = [new _Exercise.ExerciseWithinRoutine(1, 4, 2, 5), new _Exercise.ExerciseWithinRoutine(1, 1, 2, 5)];\n  (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n    var temp = result;\n    (0, _Exercise.addMultipleExercisesToRoutine)(2, data, function () {\n      (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n        if (result.length == temp.length + 2) {\n          colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\", 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testDeleteExerciseFromRoutine(callback) {\n  console.log(\"sqllog_test_DeleteExerciseFromRoutine\", \"the test has begun\");\n  (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n    var temp = result.length;\n    (0, _Exercise.deleteExerciseFromRoutine)(result[1], function () {\n      (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n        if (result.length == temp - 1) {\n          colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method failed length init = \" + temp + \" after call = \" + result.length + \" should be one less than init\", 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testDeleteExercisesFromSpecificRoutine(callback) {\n  console.log(\"sqllog_test_DeleteEcercisesFromSpecificRoutine\", \"the test has begun\");\n  (0, _Routine.getAllRoutinesWithOutExercises)(function (res) {\n    var routineIdToDelete = res[0].id;\n    routineIdToDelete.name = \"test updating\";\n    console.log(\"sqllog_test_DeleteEcercisesFromSpecificRoutine_result\", res[0].id);\n    (0, _Exercise.deleteExercisesUnderARoutine)(routineIdToDelete, function () {\n      (0, _Exercise.getExerciseFromRoutine)(routineIdToDelete, function (finalList) {\n        console.log(\"sqllog_test_DeleteEcercisesFromSpecificRoutine_result\", finalList);\n\n        if (finalList.length == 0) {\n          colorTrace(\"sqllog_test_DeleteEcercisesFromSpecificRoutine testDeleteEcercisesFromSpecificRoutine method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_DeleteEcercisesFromSpecificRoutine testDeleteEcercisesFromSpecificRoutine method failed list returned was not empty its length was = \" + finalList.length, 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testUpdatingRoutine(callback) {\n  console.log(\"sqllog_test_UpdatingRoutine\", \"test has begun\");\n  (0, _StartUpSQL.createDummyData)(function () {\n    var tE = [new _Exercise.ExerciseWithinRoutine(1, 1, 1, 1), new _Exercise.ExerciseWithinRoutine(2, 1, 1, 1)];\n    (0, _Routine.getAllRoutinesWithOutExercises)(function (res) {\n      var routine = res[0];\n      routine.exercises = tE;\n      routine.placeInOrder = 45;\n      routine.name = \"testing updating routine\";\n      (0, _Routine.updateRoutine)(routine, function () {\n        (0, _Exercise.getExerciseFromRoutine)(routine.id, function (finalListOfExercises) {\n          console.log(\"sqllog_test_UpdatingRoutine_result\", finalListOfExercises);\n          var fLOE = finalListOfExercises;\n          (0, _Routine.getAllRoutinesWithOutExercises)(function (fLOR) {\n            console.log(\"sqllog_test_UpdatingRoutine_result\", fLOR);\n\n            if (fLOR[0].name == \"testing updating routine\") {\n              colorTrace(\"ssqllog_test_UpdatingRoutine_result testUpdatingRoutine routine name test passed\", 'green');\n            } else {\n              colorTrace(\"ssqllog_test_UpdatingRoutine_result testUpdatingRoutine method failed expected routine name =  testing updating routine fount = \" + fLOR[0].name, 'red');\n            }\n\n            if (fLOE.length == 2) {\n              colorTrace(\"ssqllog_test_UpdatingRoutine_result testUpdatingRoutine exercise length passed\", 'green');\n            } else {\n              colorTrace(\"ssqllog_test_UpdatingRoutine_result testUpdatingRoutine exercise length failed\", 'green');\n            }\n\n            if (callback != null) {\n              callback();\n            }\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction testGetSpecificRoutine(callback) {\n  console.log(\"sqllog_test_GetSpecificRoutine\", \"test has begun\");\n  (0, _StartUpSQL.createDummyData)(function () {\n    (0, _Routine.getSpecificRoutine)(1, function (routine) {\n      console.log(\"sqllog_test_GetSpecificRoutine_result\", routine);\n\n      if (routine.name == \"main routine\" && routine.exercises.length == 3) {\n        colorTrace(\"sqllog_test_GetSpecificRoutine_restult geting routine name and exercuse lenght test passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_GetSpecificRoutine_restult geting routine name and exercuse lenght test failed\", 'red');\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testGetAllExercises(callback) {\n  console.log(\"sqllog_test_GetAllExercises\", \"the testGetAllExercises test has begun\");\n  (0, _Exercise.getAllExercises)(function (result) {\n    if (result.length == 3) {\n      colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testCreateNewExerciseFromExercise(callback) {\n  console.log(\"sqllog_test_CreateNewExerciseFromExercise\", \"the testGetAllExercises test has begun\");\n  (0, _Exercise.createNewExerciseFromExercise)(new _Exercise.Exercise(1, \"test exercise\", \"this is a test val\", false), function () {\n    (0, _Exercise.getAllExercises)(function (result) {\n      if (result[result.length - 1].name = \"test exercise\") {\n        colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \" + result.length, 'red');\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testDeleteExerciseById(callback) {\n  console.log(\"sqllog_test_DeleteExerciseById\", \"the testDeleteExerciseById test has begun\");\n  var temp = null;\n  (0, _Exercise.getAllExercises)(function (result) {\n    temp = result.length;\n    (0, _Exercise.deleteExerciseById)(result.length - 1, function () {\n      (0, _Exercise.getAllExercises)(function (result) {\n        if (result.length == temp - 1) {\n          colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method failed length init = \" + temp + \" after call = \" + result.length + \" should be one less than init\", 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testGetListOfWorkoutsWithoutExercises(callback) {\n  console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises\", \"the testGetListOfWorkoutsWithoutExercises test has begun\");\n  (0, _Workout.getMapOfCompleteWorkoutIDsToDates)(function (result) {\n    if (result.size == 2) {\n      colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method length test passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method failed length should be 2 is = \" + result.size, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testGetCompleteWorkoutsWithoutExercises(callback) {\n  console.log(\"sqllog_test_GetCompleteWorkoutsWithoutExercises\", \" test has begun\");\n  (0, _StartUpSQL.createDummyData)(function () {\n    (0, _Workout.getAllCompleteWorkoutsWithoutExercises)(function (res) {\n      if (res.length == 2) {\n        colorTrace(\"sqllog_test_GetCompleteWorkoutsWithoutExercises_result method length test passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_GetCompleteWorkoutsWithoutExercises_result method length test failed\", 'red');\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testGetCompletedExercisesForWorkout(callback) {\n  console.log(\"sqllog_test_GetCompletedExercisesForWorkout\", \" test has begun\");\n  (0, _StartUpSQL.createDummyData)(function () {\n    (0, _Exercise.getCompletedExercisesForWorkout)(1, function (res) {\n      console.log(\"sqllog_test_GetCompletedExercisesForWorkout_result\", res);\n\n      if (res.length == 4) {\n        colorTrace(\"sqllog_test_GetCompletedExercisesForWorkout_result method length test passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_GetCompletedExercisesForWorkout_result method length test failed\", 'red');\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testGetCompleteWorkout(callback) {\n  console.log(\"sqllog_test_GetCompleteWorkout\", \" test has begun\");\n  (0, _StartUpSQL.createDummyData)(function () {\n    (0, _Workout.getCompleteWorkout)(1, function (response) {\n      if (response.date == \"2020-10-20\") {\n        colorTrace(\"sqllog_test_GetCompleteWorkout_response method date test passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_GetCompleteWorkout_response method date test failed\", 'red');\n      }\n\n      if (response.completedExercises.length == 4) {\n        colorTrace(\"sqllog_test_GetCompleteWorkout_response method exercise list length test passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_GetCompleteWorkout_response method exercise list length test failed\", 'red');\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testDeleteWorkout(callback) {\n  console.log(\"sqllog_test_DeleteWorkout\", \" test has begun\");\n  (0, _StartUpSQL.createDummyData)(function () {\n    (0, _Routine.deleteRoutine)(new _Routine.Routine(1), function () {\n      (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n        var routinList = result;\n        (0, _Exercise.getExerciseFromRoutine)(1, function (exerciseList) {\n          if (routinList.length == 0) {\n            colorTrace(\"sqllog_test_DeleteWorkout_result method routine list length test passed\", 'green');\n          } else {\n            colorTrace(\"sqllog_test_DeleteWorkout_result method routine list length test failed\", 'red');\n          }\n\n          if (exerciseList.length == 0) {\n            colorTrace(\"sqllog_test_DeleteWorkout_result method exercise list length test passed\", 'green');\n          } else {\n            colorTrace(\"sqllog_test_DeleteWorkout_result method exercise list length test failed\", 'red');\n          }\n\n          if (callback != null) {\n            callback();\n          }\n        });\n      });\n    });\n  });\n}\n\nfunction testSaveExerciseFromCompletedExercises(callback) {\n  console.log(\"sqllog_test_SaveExerciseFromCompletedExercises\", \" test has begun\");\n  (0, _StartUpSQL.createDummyData)(function () {\n    (0, _Exercise.saveExerciseFromCompletedExercises)(new _Exercise.CompleteExercise(1, 1, 3, 1, 1, 1, \"2020-01-01\"), function () {\n      (0, _Exercise.getCompletedExercisesForWorkout)(3, function (result) {\n        console.log(\"sqllog_test_SaveExerciseFromCompletedExercises_result\", result);\n\n        if (result.length == 1) {\n          colorTrace(\"sqllog_test_SaveExerciseFromCompletedExercises_result method exercise list length test passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_SaveExerciseFromCompletedExercises_result method exercise list length test passed\", 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testAddMultipleCompleteExercisesToCompleteWorkout(callback) {\n  console.log(\"sqllog_test_AddMultipleCompleteExercisesToCompleteWorkout\", \" test has begun\");\n  (0, _Exercise.addMultipleCompleteExercisesToCompleteWorkout)(new _Workout.CompletedWorkout(4, \"\", [new _Exercise.CompleteExercise(1, 1, 1, 1, 1, 1, \"\"), new _Exercise.CompleteExercise(1, 2, 2, 2, 1, 1, \"\")]), function () {\n    (0, _Exercise.getCompletedExercisesForWorkout)(4, function (result) {\n      if (result.length == 2) {\n        colorTrace(\"sqllog_test_AddMultipleCompleteExercisesToCompleteWorkout_result method exercise list length test passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_AddMultipleCompleteExercisesToCompleteWorkout_result method exercise list length test passed\", 'red');\n      }\n\n      if (callback != null) {\n        (0, _StartUpSQL.createDummyData)(callback);\n      }\n    });\n  });\n}\n\nfunction testGetAllCompleteExerciseBySpecificExerciseID(callback) {\n  console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID\", \"the test has begun\");\n  (0, _Exercise.getAllCompleteExerciseBySpecificExerciseID)(1, function (result) {\n    if (result.length == 3) {\n      colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result  method  length test passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result  method failed length should be 3 is = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction exerciseTests(callback) {\n  testGetAllExercises(function () {\n    testCreateNewExerciseFromExercise(function () {\n      testDeleteExerciseById(function () {\n        (0, _StartUpSQL.createDummyData)(callback);\n      });\n    });\n  });\n}\n\nfunction routineTests(callback) {\n  testGetAllRoutinesWithOutExercises(function () {\n    testGetExercisesFromRoutine1(function () {\n      testAddExerciseToRoutine(function () {\n        testDeleteExerciseFromRoutine(function () {\n          testAddMultipleExercisesToRoutine(function () {\n            testAddNewRoutine(function () {\n              testDeleteExercisesFromSpecificRoutine(function () {\n                testUpdatingRoutine(function () {\n                  testGetSpecificRoutine(function () {\n                    (0, _StartUpSQL.createDummyData)(function () {\n                      testDeleteWorkout(callback);\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction completeWorkoutsTest(callback) {\n  testGetListOfWorkoutsWithoutExercises(function () {\n    testGetCompleteWorkoutsWithoutExercises(function () {\n      testGetCompletedExercisesForWorkout(function () {\n        testGetCompleteWorkout(function () {\n          testAddMultipleCompleteExercisesToCompleteWorkout(callback);\n        });\n      });\n    });\n  });\n}\n\nfunction completeExerciseTest(callback) {\n  testGetAllCompleteExerciseBySpecificExerciseID(function () {\n    testSaveExerciseFromCompletedExercises(callback);\n  });\n}\n\nfunction runSQLTest() {\n  (0, _StartUpSQL.createDummyData)(function () {\n    exerciseTests(function () {\n      routineTests(function () {\n        completeWorkoutsTest(function () {\n          completeExerciseTest();\n        });\n      });\n    });\n  });\n}\n\nfunction colorTrace(msg, color) {\n  console.log(\"%c\" + msg, \"color:\" + color + \";font-weight:bold;\");\n}","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/test/SQLTesting.js"],"names":["testAddNewRoutine","callback","console","log","tE","ExerciseWithinRoutine","tR","Routine","result","originalRoutineList","re","originalExercises","testRoutines","finalExercises","length","colorTrace","testGetAllRoutinesWithOutExercises","msg","testGetExercisesFromRoutine1","testAddExerciseToRoutine","data","testAddMultipleExercisesToRoutine","temp","testDeleteExerciseFromRoutine","testDeleteExercisesFromSpecificRoutine","res","routineIdToDelete","id","name","finalList","testUpdatingRoutine","routine","exercises","placeInOrder","finalListOfExercises","fLOE","fLOR","testGetSpecificRoutine","testGetAllExercises","testCreateNewExerciseFromExercise","Exercise","testDeleteExerciseById","testGetListOfWorkoutsWithoutExercises","size","testGetCompleteWorkoutsWithoutExercises","testGetCompletedExercisesForWorkout","testGetCompleteWorkout","response","date","completedExercises","testDeleteWorkout","routinList","exerciseList","testSaveExerciseFromCompletedExercises","CompleteExercise","testAddMultipleCompleteExercisesToCompleteWorkout","CompletedWorkout","testGetAllCompleteExerciseBySpecificExerciseID","exerciseTests","routineTests","completeWorkoutsTest","completeExerciseTest","runSQLTest","color"],"mappings":"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","sourcesContent":["\r\n\r\nimport {\r\n    addExerciseToRoutine,\r\n    addMultipleCompleteExercisesToCompleteWorkout,\r\n    addMultipleExercisesToRoutine,\r\n    CompleteExercise,\r\n    createNewExerciseFromExercise,\r\n    deleteExerciseById,\r\n    deleteExerciseFromRoutine,\r\n    deleteExercisesUnderARoutine,\r\n    Exercise,\r\n    ExerciseWithinRoutine,\r\n    getAllCompleteExerciseBySpecificExerciseID,\r\n    getAllExercises,\r\n    getAllExercisesWithinRoutines,\r\n    getCompletedExercisesForWorkout,\r\n    getExerciseFromRoutine,\r\n    saveExerciseFromCompletedExercises\r\n} from \"../Classes/Exercise\";\r\nimport {createDummyData} from \"../StartUpSQL\";\r\nimport {\r\n    addNewRoutine, deleteRoutine,\r\n    getAllRoutinesWithOutExercises, getSpecificRoutine,\r\n    Routine,\r\n    updateRoutine\r\n} from \"../Classes/Routine\";\r\nimport {\r\n    CompletedWorkout,\r\n    getAllCompleteWorkoutsWithoutExercises, getCompleteWorkout,\r\n    getMapOfCompleteWorkoutIDsToDates\r\n} from \"../Classes/Workout\";\r\n\r\n/*\r\nall of the test for routines\r\n\r\n */\r\n\r\nfunction testAddNewRoutine(callback){\r\n    console.log(\"sqllog_test_AddNewRoutine\",\"the test has begun\")\r\n    let tE = [new ExerciseWithinRoutine(1,1,1,1),new ExerciseWithinRoutine(2,1,2,5)]\r\n    let tR =new Routine(null,'test adding new routine',4,tE)\r\n\r\n    getAllRoutinesWithOutExercises(function (result){\r\n        let originalRoutineList = result\r\n        getAllExercisesWithinRoutines(function (re){\r\n            let originalExercises = re\r\n            addNewRoutine(tR,function (){\r\n                getAllRoutinesWithOutExercises(function (result){\r\n                    let testRoutines = result\r\n                    //console.log(\"sqllog_test_AddNewRoutine_result\",result)\r\n                    getAllExercisesWithinRoutines( function (finalExercises){\r\n                        //console.log(\"sqllog_test_AddNewRoutine_result\",result2)\r\n\r\n                        if(originalRoutineList.length+1 == testRoutines.length){\r\n                            colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine routine list length test passed\",'green')\r\n                        }else{\r\n                            colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine routine list length test failed length expected = \"+originalRoutineList.length +\"result = \"+testRoutines.length,'red')\r\n                        }\r\n\r\n                        if(originalExercises.length+2 == finalExercises.length){\r\n                            colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine exercise list length test passed\",'green')\r\n                        }else{\r\n                            colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine exercise list length test faied length expected = \"+originalExercises.length+2 +\"result = \"+finalExercises.length,'red')\r\n                        }\r\n\r\n\r\n                            if(callback != null){\r\n                                callback()\r\n                            }\r\n                    })\r\n                })\r\n            })\r\n\r\n        })\r\n    })\r\n\r\n}\r\n\r\nfunction testGetAllRoutinesWithOutExercises(callback){\r\n    console.log(\"sqllog_test_GetAllRoutinesWithOutExercises\",\"the test has begun\")\r\n    getAllRoutinesWithOutExercises(function(result){\r\n        //console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\", result)\r\n\r\n        if(result.length == 1){\r\n            let msg = \"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method passed\"\r\n            colorTrace(msg,'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method failed resulting array this should match the dummy data array that is 1 long = \"+result.length,'red')\r\n        }\r\n\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testGetExercisesFromRoutine1(callback){\r\n    console.log(\"sqllog_test_gettingExercisesFromRoutine1\",\"the test has begun\")\r\n    getExerciseFromRoutine(1, function(result) {\r\n        //console.log(\"test_gettingExercisesFromRoutine1_result\",result)\r\n\r\n        if(result.length == 3){\r\n            colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \"+result.length,'red')\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testAddExerciseToRoutine(callback){\r\n    console.log(\"sqllog_test_AddExerciseToRoutine\",\"the test has begun\")\r\n    let data = new ExerciseWithinRoutine(1,4,1,5)\r\n        addExerciseToRoutine(1,data, function(){\r\n         //   console.log(\"sqllog_test_AddExerciseToRoutine\",\"add exercise\")\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_AddExerciseToRoutine_ressult\",result)\r\n                if(result.length == 4){\r\n                    colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\",'red')\r\n                }\r\n\r\n\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n}\r\n\r\nfunction testAddMultipleExercisesToRoutine(callback){\r\n    console.log(\"sqllog_test_AddMultipleExercisesToRoutine\",\"the test has begun\")\r\n    let data = [new ExerciseWithinRoutine(1,4,2,5),new ExerciseWithinRoutine(1,1,2,5)]\r\n\r\n\r\n    getAllExercisesWithinRoutines(function (result){\r\n\r\n        let temp = result\r\n        addMultipleExercisesToRoutine(2,data, function(){\r\n               //console.log(\"sqllog_test_AddMultipleExercisesToRoutine\",\"add exercise\")\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_AddMultipleExercisesToRoutine_ressult\",temp.length)\r\n\r\n\r\n                if(result.length == temp.length+2){\r\n                    colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\",'red')\r\n                }\r\n\r\n\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction testDeleteExerciseFromRoutine(callback){\r\n    console.log(\"sqllog_test_DeleteExerciseFromRoutine\",\"the test has begun\")\r\n    getAllExercisesWithinRoutines(function (result){\r\n        let temp = result.length\r\n        //console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\",result)\r\n        deleteExerciseFromRoutine(result[1],function (){\r\n\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\",result)\r\n                if(result.length == temp-1){\r\n                    colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\",'red')\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction testDeleteExercisesFromSpecificRoutine(callback){\r\n    console.log(\"sqllog_test_DeleteEcercisesFromSpecificRoutine\",\"the test has begun\")\r\n    getAllRoutinesWithOutExercises(function (res){\r\n        let routineIdToDelete = res[0].id\r\n        routineIdToDelete.name = \"test updating\"\r\n        console.log(\"sqllog_test_DeleteEcercisesFromSpecificRoutine_result\",res[0].id)\r\n        deleteExercisesUnderARoutine(routineIdToDelete,function (){\r\n            getExerciseFromRoutine(routineIdToDelete, function (finalList){\r\n                console.log(\"sqllog_test_DeleteEcercisesFromSpecificRoutine_result\",finalList)\r\n                if(finalList.length == 0){\r\n                    colorTrace(\"sqllog_test_DeleteEcercisesFromSpecificRoutine testDeleteEcercisesFromSpecificRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_DeleteEcercisesFromSpecificRoutine testDeleteEcercisesFromSpecificRoutine method failed list returned was not empty its length was = \"+finalList.length,'red')\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction testUpdatingRoutine(callback){\r\n    console.log(\"sqllog_test_UpdatingRoutine\",\"test has begun\")\r\n    createDummyData(function (){\r\n        let tE = [new ExerciseWithinRoutine(1,1,1,1),new ExerciseWithinRoutine(2,1,1,1)]\r\n        getAllRoutinesWithOutExercises(function (res){\r\n            let routine =res[0]\r\n            routine.exercises = tE\r\n            routine.placeInOrder = 45\r\n            routine.name = \"testing updating routine\"\r\n            updateRoutine(routine, function (){\r\n                getExerciseFromRoutine(routine.id,function (finalListOfExercises){\r\n                    console.log(\"sqllog_test_UpdatingRoutine_result\",finalListOfExercises)\r\n                    let fLOE= finalListOfExercises\r\n                    getAllRoutinesWithOutExercises(function (fLOR){\r\n                        console.log(\"sqllog_test_UpdatingRoutine_result\",fLOR)\r\n\r\n\r\n\r\n                        if(fLOR[0].name == \"testing updating routine\"){\r\n                            colorTrace(\"ssqllog_test_UpdatingRoutine_result testUpdatingRoutine routine name test passed\",'green')\r\n                        }else{\r\n                            colorTrace(\"ssqllog_test_UpdatingRoutine_result testUpdatingRoutine method failed expected routine name =  testing updating routine fount = \"+fLOR[0].name,'red')\r\n                        }\r\n\r\n                        if(fLOE.length == 2){\r\n                            colorTrace(\"ssqllog_test_UpdatingRoutine_result testUpdatingRoutine exercise length passed\",'green')\r\n                        }else{\r\n                            colorTrace(\"ssqllog_test_UpdatingRoutine_result testUpdatingRoutine exercise length failed\",'green')\r\n                        }\r\n\r\n\r\n                        if(callback != null){\r\n                            callback()\r\n                        }\r\n\r\n                    })\r\n\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction testGetSpecificRoutine(callback){\r\n    console.log(\"sqllog_test_GetSpecificRoutine\",\"test has begun\")\r\n    createDummyData(function (){\r\n        getSpecificRoutine(1, function (routine:Routine){\r\n            console.log(\"sqllog_test_GetSpecificRoutine_result\",routine)\r\n\r\n            if(routine.name == \"main routine\" && routine.exercises.length == 3){\r\n                colorTrace(\"sqllog_test_GetSpecificRoutine_restult geting routine name and exercuse lenght test passed\",'green')\r\n            }else{\r\n                colorTrace(\"sqllog_test_GetSpecificRoutine_restult geting routine name and exercuse lenght test failed\",'red')\r\n            }\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\nall the test for exercises\r\n\r\n */\r\n\r\nfunction testGetAllExercises(callback){\r\n    console.log(\"sqllog_test_GetAllExercises\",\"the testGetAllExercises test has begun\")\r\n    getAllExercises(function (result){\r\n        //console.log(\"sqllog_test_testGetAllExercises_results\",result)\r\n\r\n        if(result.length == 3){\r\n            colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \"+result.length,'red')\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testCreateNewExerciseFromExercise(callback){\r\n    console.log(\"sqllog_test_CreateNewExerciseFromExercise\",\"the testGetAllExercises test has begun\")\r\n    createNewExerciseFromExercise(new Exercise(1,\"test exercise\",\"this is a test val\", false), function (){\r\n        getAllExercises(function (result){\r\n            //console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",result[result.length-1])\r\n\r\n            if(result[result.length-1].name = \"test exercise\"){\r\n                colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method passed\",'green')\r\n            }else{\r\n                colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \"+result.length,'red')\r\n            }\r\n\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nfunction testDeleteExerciseById(callback){\r\n   console.log(\"sqllog_test_DeleteExerciseById\",\"the testDeleteExerciseById test has begun\")\r\n    let temp = null\r\n\r\n    getAllExercises(function (result){\r\n        temp = result.length\r\n        deleteExerciseById(result.length-1,function (){\r\n\r\n            getAllExercises(function (result){\r\n\r\n                if(result.length == temp-1){\r\n                    colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\",'red')\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\ncompleted workout test\r\n */\r\n\r\nfunction testGetListOfWorkoutsWithoutExercises(callback){\r\n    console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises\",\"the testGetListOfWorkoutsWithoutExercises test has begun\")\r\n    getMapOfCompleteWorkoutIDsToDates(function (result ){\r\n        //console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises_result\",result)\r\n\r\n        if(result.size == 2){\r\n            colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method length test passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method failed length should be 2 is = \"+ result.size,'red')\r\n        }\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testGetCompleteWorkoutsWithoutExercises(callback){\r\n    console.log(\"sqllog_test_GetCompleteWorkoutsWithoutExercises\",\" test has begun\")\r\n    createDummyData(function (){\r\n        getAllCompleteWorkoutsWithoutExercises(function (res){\r\n            //console.log(\"sqllog_test_GetCompleteWorkoutsWithoutExercises_result\",res)\r\n\r\n            if(res.length ==2){\r\n                colorTrace(\"sqllog_test_GetCompleteWorkoutsWithoutExercises_result method length test passed\",'green')\r\n            }else {\r\n                colorTrace(\"sqllog_test_GetCompleteWorkoutsWithoutExercises_result method length test failed\",'red')\r\n            }\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n\r\n        })\r\n    })\r\n}\r\n\r\nfunction testGetCompletedExercisesForWorkout(callback){\r\n    console.log(\"sqllog_test_GetCompletedExercisesForWorkout\",\" test has begun\")\r\n    createDummyData(function (){\r\n        getCompletedExercisesForWorkout(1,function (res){\r\n            console.log(\"sqllog_test_GetCompletedExercisesForWorkout_result\",res)\r\n\r\n            if(res.length ==4){\r\n                colorTrace(\"sqllog_test_GetCompletedExercisesForWorkout_result method length test passed\",'green')\r\n            }else {\r\n                colorTrace(\"sqllog_test_GetCompletedExercisesForWorkout_result method length test failed\",'red')\r\n            }\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n\r\n        })\r\n    })\r\n}\r\n\r\nfunction testGetCompleteWorkout(callback){\r\n    console.log(\"sqllog_test_GetCompleteWorkout\",\" test has begun\")\r\n    createDummyData(function (){\r\n        getCompleteWorkout(1,function (response){\r\n            //console.log(\"sqllog_test_GetCompleteWorkout_response\",response)\r\n\r\n            if(response.date == \"2020-10-20\"){\r\n                colorTrace(\"sqllog_test_GetCompleteWorkout_response method date test passed\",'green')\r\n            }else{\r\n                colorTrace(\"sqllog_test_GetCompleteWorkout_response method date test failed\",'red')\r\n            }\r\n\r\n            if(response.completedExercises.length == 4){\r\n                colorTrace(\"sqllog_test_GetCompleteWorkout_response method exercise list length test passed\",'green')\r\n            }else{\r\n                colorTrace(\"sqllog_test_GetCompleteWorkout_response method exercise list length test failed\",'red')\r\n            }\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nfunction testDeleteWorkout(callback){\r\n    console.log(\"sqllog_test_DeleteWorkout\",\" test has begun\")\r\n    createDummyData(function (){\r\n        deleteRoutine(new Routine(1), function () {\r\n            getAllRoutinesWithOutExercises(function (result) {\r\n                let routinList = result\r\n                getExerciseFromRoutine(1,function (exerciseList){\r\n                    //console.log(\"sqllog_test_DeleteWorkout_result\",result)\r\n                    if(routinList.length ==0 ){\r\n                        colorTrace(\"sqllog_test_DeleteWorkout_result method routine list length test passed\",'green')\r\n                    }else{\r\n                        colorTrace(\"sqllog_test_DeleteWorkout_result method routine list length test failed\",'red')\r\n                    }\r\n\r\n                    if(exerciseList.length ==0 ){\r\n                        colorTrace(\"sqllog_test_DeleteWorkout_result method exercise list length test passed\",'green')\r\n                    }else{\r\n                        colorTrace(\"sqllog_test_DeleteWorkout_result method exercise list length test failed\",'red')\r\n                    }\r\n                    if(callback != null){\r\n                        callback()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction testSaveExerciseFromCompletedExercises(callback){\r\n    console.log(\"sqllog_test_SaveExerciseFromCompletedExercises\",\" test has begun\")\r\n    createDummyData(function () {\r\n        saveExerciseFromCompletedExercises(new CompleteExercise(1,1,3,1,1,1,\"2020-01-01\"),function () {\r\n            //console.log(\"sqllog_test_SaveExerciseFromCompletedExercises\")\r\n            getCompletedExercisesForWorkout(3, function (result) {\r\n                console.log(\"sqllog_test_SaveExerciseFromCompletedExercises_result\",result)\r\n\r\n                if(result.length == 1){\r\n                    colorTrace(\"sqllog_test_SaveExerciseFromCompletedExercises_result method exercise list length test passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_SaveExerciseFromCompletedExercises_result method exercise list length test passed\",'red')\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction testAddMultipleCompleteExercisesToCompleteWorkout(callback){\r\n    console.log(\"sqllog_test_AddMultipleCompleteExercisesToCompleteWorkout\",\" test has begun\")\r\n    addMultipleCompleteExercisesToCompleteWorkout(new CompletedWorkout(4, \"\", [new CompleteExercise(1,1,1,1,1,1,\"\"),new CompleteExercise(1,2,2,2,1,1,\"\")]),function () {\r\n        getCompletedExercisesForWorkout(4 ,function (result) {\r\n           // console.log(\"sqllog_test_AddMultipleCompleteExercisesToCompleteWorkout_result\",result)\r\n\r\n            if(result.length == 2){\r\n                colorTrace(\"sqllog_test_AddMultipleCompleteExercisesToCompleteWorkout_result method exercise list length test passed\",'green')\r\n            }else{\r\n                colorTrace(\"sqllog_test_AddMultipleCompleteExercisesToCompleteWorkout_result method exercise list length test passed\",'red')\r\n            }\r\n            if(callback != null){\r\n                createDummyData(callback)\r\n            }\r\n\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\n/*\r\ncomplete exercise test\r\n */\r\n\r\nfunction testGetAllCompleteExerciseBySpecificExerciseID(callback){\r\n    console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID\",\"the test has begun\")\r\n\r\n    getAllCompleteExerciseBySpecificExerciseID(1 , function (result) {\r\n        //console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result\",result)\r\n\r\n\r\n        if(result.length == 3){\r\n            colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result  method  length test passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result  method failed length should be 3 is = \"+ result.length,'red')\r\n        }\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n\r\n    })\r\n}\r\n\r\n//actuall testing\r\n/*\r\ntest 1-3\r\n */\r\n\r\nfunction exerciseTests(callback){\r\n    testGetAllExercises(function (){\r\n        testCreateNewExerciseFromExercise( function (){\r\n            testDeleteExerciseById(function (){\r\n                createDummyData(callback)\r\n                //callback()\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction routineTests(callback){\r\n    testGetAllRoutinesWithOutExercises(function(){\r\n        testGetExercisesFromRoutine1(function () {\r\n            testAddExerciseToRoutine(function (){\r\n                testDeleteExerciseFromRoutine(function (){\r\n                    testAddMultipleExercisesToRoutine(function (){\r\n                         testAddNewRoutine(function (){\r\n                             testDeleteExercisesFromSpecificRoutine(function (){\r\n                                 testUpdatingRoutine(function (){\r\n                                     testGetSpecificRoutine(function (){\r\n                                         createDummyData(function (){\r\n                                             testDeleteWorkout(callback)\r\n                                         })\r\n                                       //  callback()\r\n                                     })\r\n                                 })\r\n                             })\r\n                         })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction completeWorkoutsTest(callback){\r\n    testGetListOfWorkoutsWithoutExercises(function (){\r\n        testGetCompleteWorkoutsWithoutExercises(function (){\r\n            testGetCompletedExercisesForWorkout(function (){\r\n                testGetCompleteWorkout(function (){\r\n                    testAddMultipleCompleteExercisesToCompleteWorkout(callback)\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction completeExerciseTest(callback) {\r\n    testGetAllCompleteExerciseBySpecificExerciseID(function (){\r\n        testSaveExerciseFromCompletedExercises(callback)\r\n    })\r\n}\r\n\r\n\r\n\r\nexport function runSQLTest(){\r\n    createDummyData(function (){\r\n        exerciseTests(function (){\r\n            routineTests(function (){\r\n                completeWorkoutsTest(function (){\r\n                    completeExerciseTest()\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction colorTrace(msg, color) {\r\n    console.log(\"%c\" + msg, \"color:\" + color + \";font-weight:bold;\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}