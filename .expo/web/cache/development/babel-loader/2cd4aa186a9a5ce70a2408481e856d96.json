{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runSQLTest = runSQLTest;\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _StartUpSQL = require(\"../StartUpSQL\");\n\nvar _Routine = require(\"../Classes/Routine\");\n\nvar _Workout = require(\"../Classes/Workout\");\n\nfunction testAddNewRoutine(callback) {\n  console.log(\"sqllog_test_AddNewRoutine\", \"the test has begun\");\n  var tE = [new _Exercise.ExerciseWithinRoutine(1, 1, 1), new _Exercise.ExerciseWithinRoutine(2, 1, 2)];\n  var tR = new _Routine.Routine(null, 'test adding new routine', 4, tE);\n  (0, _Routine.addNewRoutine)(tR, function () {\n    (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n      console.log(\"sqllog_test_AddNewRoutine_result\", result);\n      (0, _Exercise.getAllExercisesWithinRoutines)(function (result2) {\n        console.log(\"sqllog_test_AddNewRoutine_result\", result2);\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testGetAllRoutinesWithOutExercises(callback) {\n  console.log(\"sqllog_test_GetAllRoutinesWithOutExercises\", \"the test has begun\");\n  (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n    if (result.length == 1) {\n      var msg = \"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method passed\";\n      colorTrace(msg, 'green');\n    } else {\n      colorTrace(\"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method failed resulting array this should match the dummy data array that is 1 long = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testGetExercisesFromRoutine1(callback) {\n  console.log(\"sqllog_test_gettingExercisesFromRoutine1\", \"the test has begun\");\n  (0, _Exercise.getExerciseFromRoutine)(1, function (result) {\n    if (result.length == 3) {\n      colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testAddExerciseToRoutine(callback) {\n  console.log(\"sqllog_test_AddExerciseToRoutine\", \"the test has begun\");\n  var data = new _Exercise.ExerciseWithinRoutine(1, 4, 1, 5);\n  (0, _Exercise.addExerciseToRoutine)(1, data, function () {\n    (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n      if (result.length == 4) {\n        colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\", 'red');\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testAddMultipleExercisesToRoutine(callback) {\n  console.log(\"sqllog_test_AddMultipleExercisesToRoutine\", \"the test has begun\");\n  var data = [new _Exercise.ExerciseWithinRoutine(1, 4, 2, 5), new _Exercise.ExerciseWithinRoutine(1, 1, 2, 5)];\n  (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n    var temp = result;\n    (0, _Exercise.addMultipleExercisesToRoutine)(2, data, function () {\n      (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n        if (result.length == temp.length + 2) {\n          colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\", 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testDeleteExerciseFromRoutine(callback) {\n  console.log(\"sqllog_test_DeleteExerciseFromRoutine\", \"the test has begun\");\n  (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n    var temp = result.length;\n    (0, _Exercise.deleteExerciseFromRoutine)(result[1], function () {\n      (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n        if (result.length == temp - 1) {\n          colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method failed length init = \" + temp + \" after call = \" + result.length + \" should be one less than init\", 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testGetAllExercises(callback) {\n  console.log(\"sqllog_test_GetAllExercises\", \"the testGetAllExercises test has begun\");\n  (0, _Exercise.getAllExercises)(function (result) {\n    if (result.length == 3) {\n      colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testCreateNewExerciseFromExercise(callback) {\n  console.log(\"sqllog_test_CreateNewExerciseFromExercise\", \"the testGetAllExercises test has begun\");\n  (0, _Exercise.createNewExerciseFromExercise)(new _Exercise.Exercise(1, \"test exercise\", \"this is a test val\", false), function () {\n    (0, _Exercise.getAllExercises)(function (result) {\n      if (result[result.length - 1].name = \"test exercise\") {\n        colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \" + result.length, 'red');\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testDeleteExerciseById(callback) {\n  console.log(\"sqllog_test_DeleteExerciseById\", \"the testDeleteExerciseById test has begun\");\n  var temp = null;\n  (0, _Exercise.getAllExercises)(function (result) {\n    temp = result.length;\n    (0, _Exercise.deleteExerciseById)(result.length - 1, function () {\n      (0, _Exercise.getAllExercises)(function (result) {\n        if (result.length == temp - 1) {\n          colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method failed length init = \" + temp + \" after call = \" + result.length + \" should be one less than init\", 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testGetListOfWorkoutsWithoutExercises(callback) {\n  console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises\", \"the testGetListOfWorkoutsWithoutExercises test has begun\");\n  (0, _Workout.getMapOfCompleteWorkoutIDsToDates)(function (result) {\n    if (result.size == 2) {\n      colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method length test passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method failed length should be 2 is = \" + result.size, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testGetAllCompleteExerciseBySpecificExerciseID(callback) {\n  console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID\", \"the testGetAllCompleteExerciseBySpecificExerciseID test has begun\");\n  (0, _Exercise.getAllCompleteExerciseBySpecificExerciseID)(1, function (result) {\n    if (result.length == 3) {\n      colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result testGetAllCompleteExerciseBySpecificExerciseID method  length test passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result testGetAllCompleteExerciseBySpecificExerciseID method failed length should be 3 is = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction exerciseTests(callback) {\n  testGetAllExercises(function () {\n    testCreateNewExerciseFromExercise(function () {\n      testDeleteExerciseById(function () {\n        callback();\n      });\n    });\n  });\n}\n\nfunction routineTests(callback) {\n  testGetAllRoutinesWithOutExercises(function () {\n    testGetExercisesFromRoutine1(function () {\n      testAddExerciseToRoutine(function () {\n        testDeleteExerciseFromRoutine(function () {\n          testAddMultipleExercisesToRoutine(function () {\n            testAddNewRoutine(function () {\n              callback();\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction completeWorkoutsTest(callback) {\n  testGetListOfWorkoutsWithoutExercises(callback);\n}\n\nfunction completeExerciseTest(callback) {\n  testGetAllCompleteExerciseBySpecificExerciseID(callback);\n}\n\nfunction runSQLTest() {\n  (0, _StartUpSQL.createDummyData)(function () {\n    exerciseTests(function () {\n      routineTests(function () {\n        completeWorkoutsTest(function () {\n          completeExerciseTest();\n        });\n      });\n    });\n  });\n}\n\nfunction colorTrace(msg, color) {\n  console.log(\"%c\" + msg, \"color:\" + color + \";font-weight:bold;\");\n}","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/test/SQLTesting.js"],"names":["testAddNewRoutine","callback","console","log","tE","ExerciseWithinRoutine","tR","Routine","result","result2","testGetAllRoutinesWithOutExercises","length","msg","colorTrace","testGetExercisesFromRoutine1","testAddExerciseToRoutine","data","testAddMultipleExercisesToRoutine","temp","testDeleteExerciseFromRoutine","testGetAllExercises","testCreateNewExerciseFromExercise","Exercise","name","testDeleteExerciseById","testGetListOfWorkoutsWithoutExercises","size","testGetAllCompleteExerciseBySpecificExerciseID","exerciseTests","routineTests","completeWorkoutsTest","completeExerciseTest","runSQLTest","color"],"mappings":"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","sourcesContent":["\r\n\r\nimport {\r\n    addExerciseToRoutine, addMultipleExercisesToRoutine,\r\n    createNewExerciseFromExercise,\r\n    deleteExerciseById, deleteExerciseFromRoutine,\r\n    Exercise, ExerciseWithinRoutine, getAllCompleteExerciseBySpecificExerciseID,\r\n    getAllExercises, getAllExercisesWithinRoutines,\r\n    getExerciseFromRoutine\r\n} from \"../Classes/Exercise\";\r\nimport {createDummyData} from \"../StartUpSQL\";\r\nimport {addNewRoutine, getAllRoutinesWithOutExercises, Routine} from \"../Classes/Routine\";\r\nimport {\r\n    getMapOfCompleteWorkoutIDsToDates\r\n} from \"../Classes/Workout\";\r\n\r\n/*\r\nall of the test for routines\r\n\r\n */\r\n\r\nfunction testAddNewRoutine(callback){\r\n    console.log(\"sqllog_test_AddNewRoutine\",\"the test has begun\")\r\n    let tE = [new ExerciseWithinRoutine(1,1,1),new ExerciseWithinRoutine(2,1,2)]\r\n    let tR =new Routine(null,'test adding new routine',4,tE)\r\n    addNewRoutine(tR,function (){\r\n        getAllRoutinesWithOutExercises(function (result){\r\n            console.log(\"sqllog_test_AddNewRoutine_result\",result)\r\n            getAllExercisesWithinRoutines( function (result2){\r\n                console.log(\"sqllog_test_AddNewRoutine_result\",result2)\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\nfunction testGetAllRoutinesWithOutExercises(callback){\r\n    console.log(\"sqllog_test_GetAllRoutinesWithOutExercises\",\"the test has begun\")\r\n    getAllRoutinesWithOutExercises(function(result){\r\n        //console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\", result)\r\n\r\n        if(result.length == 1){\r\n            let msg = \"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method passed\"\r\n            colorTrace(msg,'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method failed resulting array this should match the dummy data array that is 1 long = \"+result.length,'red')\r\n        }\r\n\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction testGetExercisesFromRoutine1(callback){\r\n    console.log(\"sqllog_test_gettingExercisesFromRoutine1\",\"the test has begun\")\r\n    getExerciseFromRoutine(1, function(result) {\r\n        //console.log(\"test_gettingExercisesFromRoutine1_result\",result)\r\n\r\n        if(result.length == 3){\r\n            colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \"+result.length,'red')\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testAddExerciseToRoutine(callback){\r\n    console.log(\"sqllog_test_AddExerciseToRoutine\",\"the test has begun\")\r\n    let data = new ExerciseWithinRoutine(1,4,1,5)\r\n        addExerciseToRoutine(1,data, function(){\r\n         //   console.log(\"sqllog_test_AddExerciseToRoutine\",\"add exercise\")\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_AddExerciseToRoutine_ressult\",result)\r\n                if(result.length == 4){\r\n                    colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\",'red')\r\n                }\r\n\r\n\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n}\r\n\r\nfunction testAddMultipleExercisesToRoutine(callback){\r\n    console.log(\"sqllog_test_AddMultipleExercisesToRoutine\",\"the test has begun\")\r\n    let data = [new ExerciseWithinRoutine(1,4,2,5),new ExerciseWithinRoutine(1,1,2,5)]\r\n\r\n\r\n    getAllExercisesWithinRoutines(function (result){\r\n\r\n        let temp = result\r\n        addMultipleExercisesToRoutine(2,data, function(){\r\n               //console.log(\"sqllog_test_AddMultipleExercisesToRoutine\",\"add exercise\")\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_AddMultipleExercisesToRoutine_ressult\",temp.length)\r\n\r\n\r\n                if(result.length == temp.length+2){\r\n                    colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\",'red')\r\n                }\r\n\r\n\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction testDeleteExerciseFromRoutine(callback){\r\n    console.log(\"sqllog_test_DeleteExerciseFromRoutine\",\"the test has begun\")\r\n    getAllExercisesWithinRoutines(function (result){\r\n        let temp = result.length\r\n        //console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\",result)\r\n        deleteExerciseFromRoutine(result[1],function (){\r\n\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\",result)\r\n                if(result.length == temp-1){\r\n                    colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\",'red')\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n/*\r\nall the test for exercises\r\n\r\n */\r\n\r\nfunction testGetAllExercises(callback){\r\n    console.log(\"sqllog_test_GetAllExercises\",\"the testGetAllExercises test has begun\")\r\n    getAllExercises(function (result){\r\n        //console.log(\"sqllog_test_testGetAllExercises_results\",result)\r\n\r\n        if(result.length == 3){\r\n            colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \"+result.length,'red')\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testCreateNewExerciseFromExercise(callback){\r\n    console.log(\"sqllog_test_CreateNewExerciseFromExercise\",\"the testGetAllExercises test has begun\")\r\n    createNewExerciseFromExercise(new Exercise(1,\"test exercise\",\"this is a test val\", false), function (){\r\n        getAllExercises(function (result){\r\n            //console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",result[result.length-1])\r\n\r\n            if(result[result.length-1].name = \"test exercise\"){\r\n                colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method passed\",'green')\r\n            }else{\r\n                colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \"+result.length,'red')\r\n            }\r\n\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n\r\nfunction testDeleteExerciseById(callback){\r\n   console.log(\"sqllog_test_DeleteExerciseById\",\"the testDeleteExerciseById test has begun\")\r\n    let temp = null\r\n\r\n    getAllExercises(function (result){\r\n        temp = result.length\r\n        deleteExerciseById(result.length-1,function (){\r\n\r\n            getAllExercises(function (result){\r\n\r\n                if(result.length == temp-1){\r\n                    colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\",'red')\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\ncompleted workout test\r\n\r\n */\r\n\r\nfunction testGetListOfWorkoutsWithoutExercises(callback){\r\n    console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises\",\"the testGetListOfWorkoutsWithoutExercises test has begun\")\r\n    getMapOfCompleteWorkoutIDsToDates(function (result ){\r\n        //console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises_result\",result)\r\n\r\n        if(result.size == 2){\r\n            colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method length test passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method failed length should be 2 is = \"+ result.size,'red')\r\n        }\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\n\r\n/*\r\ncomplete exercise test\r\n */\r\n\r\nfunction testGetAllCompleteExerciseBySpecificExerciseID(callback){\r\n    console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID\",\"the testGetAllCompleteExerciseBySpecificExerciseID test has begun\")\r\n\r\n    getAllCompleteExerciseBySpecificExerciseID(1 , function (result) {\r\n        //console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result\",result)\r\n\r\n\r\n        if(result.length == 3){\r\n            colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result testGetAllCompleteExerciseBySpecificExerciseID method  length test passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result testGetAllCompleteExerciseBySpecificExerciseID method failed length should be 3 is = \"+ result.length,'red')\r\n        }\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n\r\n    })\r\n}\r\n\r\n\r\n//actuall testing\r\n/*\r\ntest 1-3\r\n */\r\n\r\nfunction exerciseTests(callback){\r\n    testGetAllExercises(function (){\r\n        testCreateNewExerciseFromExercise( function (){\r\n            testDeleteExerciseById(function (){\r\n                    callback()\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction routineTests(callback){\r\n    testGetAllRoutinesWithOutExercises(function(){\r\n        testGetExercisesFromRoutine1(function () {\r\n            testAddExerciseToRoutine(function (){\r\n                testDeleteExerciseFromRoutine(function (){\r\n                    testAddMultipleExercisesToRoutine(function (){\r\n                         testAddNewRoutine(function (){\r\n                            callback()\r\n                         })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction completeWorkoutsTest(callback){\r\n    testGetListOfWorkoutsWithoutExercises(callback)\r\n}\r\n\r\nfunction completeExerciseTest(callback) {\r\n    testGetAllCompleteExerciseBySpecificExerciseID(callback)\r\n}\r\n\r\n\r\n\r\nexport function runSQLTest(){\r\n    createDummyData(function (){\r\n        exerciseTests(function (){\r\n            routineTests(function (){\r\n                completeWorkoutsTest(function (){\r\n                    completeExerciseTest()\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction colorTrace(msg, color) {\r\n    console.log(\"%c\" + msg, \"color:\" + color + \";font-weight:bold;\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}