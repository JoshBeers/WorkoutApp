{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar SQLite = _interopRequireWildcard(require(\"expo-sqlite\"));\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _DummyParse = require(\"../DummyData/DummyParse\");\n\nvar _jsxFileName = \"D:\\\\Dell\\\\Documents\\\\SCHOOL SHIT\\\\FALL 2020\\\\Software Dev Project\\\\WorkoutApp\\\\Screens\\\\WorkoutScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar exercises = _DummyParse.dumDumRoutines[0].ex;\n\nvar WorkoutScreen = function (_Component) {\n  (0, _inherits2.default)(WorkoutScreen, _Component);\n\n  var _super = _createSuper(WorkoutScreen);\n\n  function WorkoutScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, WorkoutScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      exercisesWithin: []\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(WorkoutScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      for (var i = 0; i < this.state.exercisesWithin.length; i++) {\n        exercises.push(_DummyParse.dumDumExercise.get(this.state.exercisesWithin[i].exerciseID));\n      }\n    }\n  }, {\n    key: \"getExerciseName\",\n    value: function getExerciseName(exerciseId) {\n      var db = SQLite.openDatabase(\"workoutAppDB.db\");\n      db.transaction(function (tx) {\n        tx.executeSql(\"select name from exercises where Id = \" + exerciseId + \";\", [], function (_, rows) {\n          console.log(\"sqllog_WorkoutScreen_exercises_name\", rows.rows);\n          return rows.rows;\n        });\n      });\n    }\n  }, {\n    key: \"getExerciseInfo\",\n    value: function getExerciseInfo(routine_Id) {\n      var db = SQLite.openDatabase(\"workoutAppDB.db\");\n      db.transaction(function (tx) {\n        tx.executeSql(\"select numberOFReps, numberofSets, weight, placeInOrder, from ExercisesWithinRoutines where routineID = \" + routine_Id + \";\", [], function (_, rows) {\n          console.log(\"sqllog_WorkoutScreen_exercises_info\", rows.rows);\n          return rows.rows;\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.workout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        horizontal: true,\n        data: exercises,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _react.default.createElement(_reactNativeElements.Card, {\n            style: styles.card,\n            title: item.name,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n  return WorkoutScreen;\n}(_react.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  workout: {\n    backgroundColor: _Colors.default.background,\n    flex: 1\n  },\n  card: {\n    marginTop: 50,\n    width: 366,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center'\n  }\n});\n\nmodule.exports = WorkoutScreen;","map":{"version":3,"sources":["D:/Dell/Documents/SCHOOL SHIT/FALL 2020/Software Dev Project/WorkoutApp/Screens/WorkoutScreen.js"],"names":["exercises","dumDumRoutines","ex","WorkoutScreen","props","state","exercisesWithin","i","length","push","dumDumExercise","get","exerciseID","exerciseId","db","SQLite","openDatabase","transaction","tx","executeSql","_","rows","console","log","routine_Id","styles","workout","item","card","name","Component","StyleSheet","create","backgroundColor","Colors","background","flex","marginTop","width","borderWidth","alignSelf","module","exports"],"mappings":";;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAIA,SAAS,GAAGC,2BAAe,CAAf,EAAkBC,EAAlC;;IAEMC,a;;;;;AAKJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;AADiB,UAJnBC,KAImB,GAJX;AACNC,MAAAA,eAAe,EAAE;AADX,KAIW;AAAA;AAElB;;;;wCAEmB;AAClB,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKF,KAAL,CAAWC,eAAX,CAA2BE,MAA9C,EAAsDD,CAAC,EAAvD,EAA0D;AACxDP,QAAAA,SAAS,CAACS,IAAV,CAAeC,2BAAeC,GAAf,CAAmB,KAAKN,KAAL,CAAWC,eAAX,CAA2BC,CAA3B,EAA8BK,UAAjD,CAAf;AACD;AACF;;;oCAEeC,U,EAAW;AACzB,UAAMC,EAAE,GAAGC,MAAM,CAACC,YAAP,CAAoB,iBAApB,CAAX;AAEAF,MAAAA,EAAE,CAACG,WAAH,CAAe,UAAAC,EAAE,EAAG;AAClBA,QAAAA,EAAE,CAACC,UAAH,CAAc,2CAA2CN,UAA3C,GAAwD,GAAtE,EAA0E,EAA1E,EAA6E,UAACO,CAAD,EAAGC,IAAH,EAAW;AAEtFC,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,IAAI,CAACA,IAAxD;AAEA,iBAAOA,IAAI,CAACA,IAAZ;AACD,SALD;AAMD,OAPD;AAQD;;;oCAEeG,U,EAAY;AAC1B,UAAMV,EAAE,GAAGC,MAAM,CAACC,YAAP,CAAoB,iBAApB,CAAX;AAEAF,MAAAA,EAAE,CAACG,WAAH,CAAe,UAAAC,EAAE,EAAG;AAClBA,QAAAA,EAAE,CAACC,UAAH,CAAc,6GAA6GK,UAA7G,GAA0H,GAAxI,EAA4I,EAA5I,EAA+I,UAACJ,CAAD,EAAGC,IAAH,EAAW;AAExJC,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,IAAI,CAACA,IAAxD;AAEA,iBAAOA,IAAI,CAACA,IAAZ;AACD,SALD;AAMD,OAPD;AAQD;;;6BAEQ;AAAA;;AACP,aACA,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAII,MAAM,CAACC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,qBAAD;AACI,QAAA,UAAU,MADd;AAEI,QAAA,IAAI,EAAE1B,SAFV;AAEqB,QAAA,UAAU,EAAE;AAAA,cAAE2B,IAAF,QAAEA,IAAF;AAAA,iBAC7B,6BAAC,yBAAD;AAAM,YAAA,KAAK,EAAIF,MAAM,CAACG,IAAtB;AACE,YAAA,KAAK,EAAID,IAAI,CAACE,IADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD6B;AAAA,SAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA;AAUE;;;EApDsBC,gB;;AAuD5B,IAAML,MAAM,GAAGM,wBAAWC,MAAX,CAAkB;AAC/BN,EAAAA,OAAO,EAAE;AACPO,IAAAA,eAAe,EAAEC,gBAAOC,UADjB;AAEPC,IAAAA,IAAI,EAAE;AAFC,GADsB;AAK/BR,EAAAA,IAAI,EAAE;AACJS,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,KAAK,EAAE,GAFH;AAGJL,IAAAA,eAAe,EAAEC,gBAAON,IAHpB;AAIJW,IAAAA,WAAW,EAAE,CAJT;AAKJC,IAAAA,SAAS,EAAE;AALP;AALyB,CAAlB,CAAf;;AAcAC,MAAM,CAACC,OAAP,GAAiBvC,aAAjB","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React, {Component} from 'react';\r\nimport {StyleSheet, TextInput, Text, View, Button, FlatList} from 'react-native';\r\nimport {Card} from 'react-native-elements';\r\nimport * as SQLite from \"expo-sqlite\";\r\nimport Colors from \"../Themes/Colors\";\r\nimport {dumDumExercise, dumDumRoutines} from \"../DummyData/DummyParse\";\r\n\r\nlet exercises = dumDumRoutines[0].ex\r\n\r\nclass WorkoutScreen extends Component {\r\n  state = {\r\n    exercisesWithin: []\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    for(let i = 0; i < this.state.exercisesWithin.length; i++){\r\n      exercises.push(dumDumExercise.get(this.state.exercisesWithin[i].exerciseID));\r\n    }\r\n  }\r\n\r\n  getExerciseName(exerciseId){\r\n    const db = SQLite.openDatabase(\"workoutAppDB.db\");\r\n\r\n    db.transaction(tx =>{\r\n      tx.executeSql(\"select name from exercises where Id = \" + exerciseId + \";\",[],(_,rows) =>{\r\n\r\n        console.log(\"sqllog_WorkoutScreen_exercises_name\", rows.rows)\r\n\r\n        return rows.rows;\r\n      })\r\n    })\r\n  }\r\n\r\n  getExerciseInfo(routine_Id) {\r\n    const db = SQLite.openDatabase(\"workoutAppDB.db\");\r\n\r\n    db.transaction(tx =>{\r\n      tx.executeSql(\"select numberOFReps, numberofSets, weight, placeInOrder, from ExercisesWithinRoutines where routineID = \" + routine_Id + \";\",[],(_,rows) =>{\r\n\r\n        console.log(\"sqllog_WorkoutScreen_exercises_info\", rows.rows)\r\n\r\n        return rows.rows;\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <View style = {styles.workout}>\r\n      <FlatList\r\n          horizontal\r\n          data={exercises} renderItem={({item}) =>(\r\n          <Card style = {styles.card}\r\n            title = {item.name}>\r\n          </Card>\r\n        )}/>\r\n    </View>\r\n    )}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  workout: {\r\n    backgroundColor: Colors.background,\r\n    flex: 1,\r\n  },\r\n  card: {\r\n    marginTop: 50,\r\n    width: 366,\r\n    backgroundColor: Colors.card,\r\n    borderWidth: 0,\r\n    alignSelf: 'center',\r\n  },\r\n});\r\n\r\nmodule.exports = WorkoutScreen;\r\n"]},"metadata":{},"sourceType":"script"}