{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar SQLite = _interopRequireWildcard(require(\"expo-sqlite\"));\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _DummyParse = require(\"../DummyData/DummyParse\");\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _Workout = require(\"../Classes/Workout\");\n\nvar _Dimensions = _interopRequireDefault(require(\"react-native-web/src/exports/Dimensions\"));\n\nvar _WorkoutCard = require(\"./Components/WorkoutCard.js\");\n\nvar _jsxFileName = \"D:\\\\school\\\\softdev projects\\\\WorkoutApp\\\\Screens\\\\WorkoutScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WorkoutScreen = function (_React$Component) {\n  (0, _inherits2.default)(WorkoutScreen, _React$Component);\n\n  var _super = _createSuper(WorkoutScreen);\n\n  function WorkoutScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, WorkoutScreen);\n    _this = _super.call(this, props);\n\n    _this.finish = function (id, name, inputData) {};\n\n    _this.state = {\n      routine: props.navigation.state.params.routine,\n      today: new Date().getFullYear() + '-' + new Date().getMonth() + '-' + new Date().getDay(),\n      userDone: false,\n      completedExcer: []\n    };\n    console.log(props.navigation.state.params.routine);\n    return _this;\n  }\n\n  (0, _createClass2.default)(WorkoutScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.state.routine.exercises);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.workout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Modal, {\n        animationType: 'slide',\n        visible: this.state.userDone,\n        transparent: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.modalStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.modalText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \"GREAT WORK!\"), _react.default.createElement(_reactNative.Image, {\n        source: require('../img/finish.png'),\n        style: {\n          width: 200,\n          height: 150,\n          margin: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.Button, {\n        title: \"Return\",\n        color: _Colors.default.positive,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('home');\n        },\n        style: {\n          alignSelf: 'center',\n          marginTop: 20,\n          marginBottom: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, \"RETURN\"))))), _react.default.createElement(_reactNative.FlatList, {\n        style: {\n          flexDirection: 'row',\n          flex: 1\n        },\n        horizontal: true,\n        decelerationRate: 0,\n        snapToInterval: 400,\n        snapToAlignment: \"center\",\n        disableIntervalMomentum: true,\n        data: this.state.routine.exercises,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _react.default.createElement(_WorkoutCard.WorkoutCard, {\n            id: item.exerciseID,\n            name: item.name,\n            isWeight: item.doesUseWeight,\n            isCardio: item.isCardio,\n            finishFunction: _this2.finish,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.exerciseID.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n  return WorkoutScreen;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  workout: {\n    backgroundColor: _Colors.default.background,\n    flex: 1,\n    alignItems: 'center'\n  },\n  modalStyle: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.card,\n    alignItems: 'center',\n    marginTop: 100,\n    height: 400\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: _Colors.default.text,\n    alignSelf: 'center'\n  },\n  modalText: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginTop: 40,\n    color: _Colors.default.text\n  },\n  card: {\n    marginTop: 150,\n    width: 370,\n    height: 550,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center'\n  },\n  titleText: {\n    color: _Colors.default.text,\n    fontSize: 27,\n    alignSelf: 'center',\n    margin: 15\n  },\n  textField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 40,\n    width: 75,\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  }\n});\n\nmodule.exports = WorkoutScreen;","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/Screens/WorkoutScreen.js"],"names":["WorkoutScreen","props","finish","id","name","inputData","state","routine","navigation","params","today","Date","getFullYear","getMonth","getDay","userDone","completedExcer","console","log","exercises","styles","workout","modalStyle","modalText","require","width","height","margin","Colors","positive","navigate","alignSelf","marginTop","marginBottom","buttonText","flexDirection","flex","item","exerciseID","doesUseWeight","isCardio","toString","React","Component","StyleSheet","create","backgroundColor","background","alignItems","card","fontWeight","fontSize","color","text","borderWidth","titleText","textField","textFieldBackground","borderColor","module","exports"],"mappings":";;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAIMA,a;;;;;AAEJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;;AADiB,UAgBnBC,MAhBmB,GAgBV,UAACC,EAAD,EAAKC,IAAL,EAAWC,SAAX,EAAyB,CAmDjC,CAnEkB;;AAEjB,UAAKC,KAAL,GAAY;AACVC,MAAAA,OAAO,EAAEN,KAAK,CAACO,UAAN,CAAiBF,KAAjB,CAAuBG,MAAvB,CAA8BF,OAD7B;AAEVG,MAAAA,KAAK,EAAE,IAAIC,IAAJ,GAAWC,WAAX,KAA2B,GAA3B,GAAiC,IAAID,IAAJ,GAAWE,QAAX,EAAjC,GAAyD,GAAzD,GAA+D,IAAIF,IAAJ,GAAWG,MAAX,EAF5D;AAGVC,MAAAA,QAAQ,EAAE,KAHA;AAIVC,MAAAA,cAAc,EAAE;AAJN,KAAZ;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACO,UAAN,CAAiBF,KAAjB,CAAuBG,MAAvB,CAA8BF,OAA1C;AARiB;AASlB;;;;wCAEmB;AAClBU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,OAAX,CAAmBY,SAA/B;AACD;;;6BA0DQ;AAAA;;AAEP,aACI,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,kBAAD;AACE,QAAA,aAAa,EAAE,OADjB;AAEE,QAAA,OAAO,EAAE,KAAKf,KAAL,CAAWS,QAFtB;AAGE,QAAA,WAAW,EAAE,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAIK,MAAM,CAACE,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,6BAAC,kBAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,CAAC,mBAAD,CAAtB;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,GADF;AAELC,UAAAA,MAAM,EAAE,GAFH;AAGLC,UAAAA,MAAM,EAAE;AAHH,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAQE,6BAAC,mBAAD;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,KAAK,EAAEC,gBAAOC,QAFhB;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC5B,KAAL,CAAWO,UAAX,CAAsBsB,QAAtB,CAA+B,MAA/B,CAAN;AAAA,SAHX;AAIE,QAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE,QADN;AAELC,UAAAA,SAAS,EAAE,EAFN;AAGLC,UAAAA,YAAY,EAAE;AAHT,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACc,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CARF,CALF,CADF,CADF,EA6BE,6BAAC,qBAAD;AACI,QAAA,KAAK,EAAE;AACLC,UAAAA,aAAa,EAAE,KADV;AAELC,UAAAA,IAAI,EAAE;AAFD,SADX;AAKI,QAAA,UAAU,MALd;AAMI,QAAA,gBAAgB,EAAE,CANtB;AAOI,QAAA,cAAc,EAAE,GAPpB;AAQI,QAAA,eAAe,EAAE,QARrB;AASI,QAAA,uBAAuB,EAAG,IAT9B;AAUI,QAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWC,OAAX,CAAmBY,SAV7B;AAUwC,QAAA,UAAU,EAAE;AAAA,cAAEkB,IAAF,QAAEA,IAAF;AAAA,iBAChD,6BAAC,wBAAD;AACI,YAAA,EAAE,EAAEA,IAAI,CAACC,UADb;AAEI,YAAA,IAAI,EAAED,IAAI,CAACjC,IAFf;AAGI,YAAA,QAAQ,EAAEiC,IAAI,CAACE,aAHnB;AAII,YAAA,QAAQ,EAAEF,IAAI,CAACG,QAJnB;AAKI,YAAA,cAAc,EAAE,MAAI,CAACtC,MALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADgD;AAAA,SAVpD;AAmBG,QAAA,YAAY,EAAE,sBAACmC,IAAD;AAAA,iBAAUA,IAAI,CAACC,UAAL,CAAgBG,QAAhB,EAAV;AAAA,SAnBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF,CADJ;AAoDD;;;EA/HyBC,eAAMC,S;;AAkIlC,IAAMvB,MAAM,GAAGwB,wBAAWC,MAAX,CAAkB;AAC/BxB,EAAAA,OAAO,EAAE;AACPyB,IAAAA,eAAe,EAAElB,gBAAOmB,UADjB;AAEPX,IAAAA,IAAI,EAAE,CAFC;AAGPY,IAAAA,UAAU,EAAE;AAHL,GADsB;AAM/B1B,EAAAA,UAAU,EAAE;AACVS,IAAAA,SAAS,EAAE,QADD;AAEVe,IAAAA,eAAe,EAAElB,gBAAOqB,IAFd;AAGVD,IAAAA,UAAU,EAAE,QAHF;AAIVhB,IAAAA,SAAS,EAAE,GAJD;AAKVN,IAAAA,MAAM,EAAE;AALE,GANmB;AAa/BQ,EAAAA,UAAU,EAAE;AACVgB,IAAAA,UAAU,EAAE,MADF;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,KAAK,EAAExB,gBAAOyB,IAHJ;AAIVtB,IAAAA,SAAS,EAAE;AAJD,GAbmB;AAmB/BR,EAAAA,SAAS,EAAE;AACT2B,IAAAA,UAAU,EAAE,MADH;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTnB,IAAAA,SAAS,EAAE,EAHF;AAIToB,IAAAA,KAAK,EAAExB,gBAAOyB;AAJL,GAnBoB;AAyB/BJ,EAAAA,IAAI,EAAE;AACJjB,IAAAA,SAAS,EAAE,GADP;AAEJP,IAAAA,KAAK,EAAE,GAFH;AAGJC,IAAAA,MAAM,EAAE,GAHJ;AAIJoB,IAAAA,eAAe,EAAElB,gBAAOqB,IAJpB;AAKJK,IAAAA,WAAW,EAAE,CALT;AAMJvB,IAAAA,SAAS,EAAE;AANP,GAzByB;AAiC/BwB,EAAAA,SAAS,EAAE;AACTH,IAAAA,KAAK,EAAExB,gBAAOyB,IADL;AAETF,IAAAA,QAAQ,EAAE,EAFD;AAGTpB,IAAAA,SAAS,EAAE,QAHF;AAITJ,IAAAA,MAAM,EAAE;AAJC,GAjCoB;AAuC/B6B,EAAAA,SAAS,EAAE;AACTzB,IAAAA,SAAS,EAAE,QADF;AAETe,IAAAA,eAAe,EAAElB,gBAAO6B,mBAFf;AAGTL,IAAAA,KAAK,EAAExB,gBAAOqB,IAHL;AAITvB,IAAAA,MAAM,EAAE,EAJC;AAKTD,IAAAA,KAAK,EAAE,EALE;AAMTO,IAAAA,SAAS,EAAE,CANF;AAOTC,IAAAA,YAAY,EAAE,CAPL;AAQTqB,IAAAA,WAAW,EAAE,CARJ;AASTI,IAAAA,WAAW,EAAE9B,gBAAOqB;AATX;AAvCoB,CAAlB,CAAf;;AAoDAU,MAAM,CAACC,OAAP,GAAiB5D,aAAjB","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React from 'react';\r\nimport {StyleSheet, TextInput, Text, View, Button, FlatList, Modal, Image} from 'react-native';\r\nimport {Card} from 'react-native-elements';\r\nimport * as SQLite from \"expo-sqlite\";\r\nimport Colors from \"../Themes/Colors\";\r\nimport {dumDumExercise, dumDumRoutines} from \"../DummyData/DummyParse\";\r\nimport {Exercise, CompleteExercise, saveExerciseFromCompletedExercises} from \"../Classes/Exercise\";\r\nimport {CompletedWorkout, saveCompleteWorkout} from \"../Classes/Workout\";\r\nimport Dimensions from \"react-native-web/src/exports/Dimensions\";\r\nimport {WorkoutCard} from \"./Components/WorkoutCard.js\";\r\n\r\n// let exerciseWithin = dumDumRoutines[0].exercises;\r\n\r\nclass WorkoutScreen extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      routine: props.navigation.state.params.routine,\r\n      today: new Date().getFullYear() + '-' + new Date().getMonth() + '-' + new Date().getDay(),\r\n      userDone: false,\r\n      completedExcer: [],\r\n    };\r\n    console.log(props.navigation.state.params.routine)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.routine.exercises);\r\n  }\r\n\r\n  // Takes finished exercise id, name, and input data, removes the the exercise from the array\r\n  finish = (id, name, inputData) => {\r\n\r\n    /*\r\n    console.log(id,\" \", name,\"  \", inputData)\r\n    let tempArray = this.state.routine.exercises;\r\n    let index = 0;\r\n    let tempExer;\r\n    let numReps = 0;\r\n    let weight = 0;\r\n    let tempFinish = this.state.completedExcer;\r\n\r\n    for(let i = 0; i < tempArray.length; i++){\r\n      if(tempArray[i].exerciseID === id) {\r\n        tempExer = tempArray[i];\r\n        index = i;\r\n      }\r\n    }\r\n    console.log(tempExer.name);\r\n    tempArray.splice(index, 1);\r\n    this.setState({\r\n      exercise: tempArray});\r\n\r\n    for(let i = 0; i < inputData.length; i++){\r\n      if(inputData[i].rep)\r\n        numReps = numReps + inputData[i].rep;\r\n      else\r\n        numReps = numReps + inputData[i].time;\r\n\r\n      if(inputData[i].weight)\r\n        weight = weight + inputData[i].weight;\r\n    }\r\n\r\n    let finExercise = new CompleteExercise(0, tempExer.exerciseID, 0, numReps, inputData[inputData.length - 1].set, (weight/(inputData[inputData.length - 1].set)), this.state.today);\r\n    console.log(finExercise.exerciseId)\r\n    console.log(this.state.exercises);\r\n\r\n    tempFinish.push(finExercise);\r\n\r\n\r\n    if(this.state.routine.exercises.length === 0){\r\n\r\n      let compl = new CompletedWorkout(0, this.state.today, tempFinish);\r\n      saveCompleteWorkout(compl, (result) =>{\r\n        console.log(result,\"asdfasfsdfas d fsdrf \");\r\n      });\r\n\r\n\r\n      this.setState({userDone: true})\r\n    }\r\n     \r\n     */\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n        <View style={styles.workout}>\r\n          <View>\r\n            <Modal\r\n              animationType={'slide'}\r\n              visible={this.state.userDone}\r\n              transparent={true}\r\n              >\r\n              <View style = {styles.modalStyle}>\r\n                <Text style={styles.modalText}>GREAT WORK!</Text>\r\n                <Image source={require('../img/finish.png')}\r\n                  style={{\r\n                    width: 200,\r\n                    height: 150,\r\n                    margin: 50,\r\n                  }}/>\r\n                <Button\r\n                  title=\"Return\"\r\n                  color={Colors.positive}\r\n                  onPress={() => this.props.navigation.navigate('home')}\r\n                  style={{\r\n                    alignSelf: 'center',\r\n                    marginTop: 20,\r\n                    marginBottom: 40,\r\n                  }}>\r\n                  <Text style={styles.buttonText}>RETURN</Text>\r\n                </Button>\r\n              </View>\r\n            </Modal>\r\n          </View>\r\n          <FlatList\r\n              style={{\r\n                flexDirection: 'row',\r\n                flex: 1,\r\n              }}\r\n              horizontal\r\n              decelerationRate={0}\r\n              snapToInterval={400}\r\n              snapToAlignment={\"center\"}\r\n              disableIntervalMomentum={ true }\r\n              data={this.state.routine.exercises} renderItem={({item}) => (\r\n              <WorkoutCard\r\n                  id={item.exerciseID}\r\n                  name={item.name}\r\n                  isWeight={item.doesUseWeight}\r\n                  isCardio={item.isCardio}\r\n                  finishFunction={this.finish}\r\n              />\r\n\r\n          )} keyExtractor={(item) => item.exerciseID.toString()}/>\r\n        </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  workout: {\r\n    backgroundColor: Colors.background,\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  modalStyle: {\r\n    alignSelf: 'center',\r\n    backgroundColor: Colors.card,\r\n    alignItems: 'center',\r\n    marginTop: 100,\r\n    height: 400,\r\n  },\r\n  buttonText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    color: Colors.text,\r\n    alignSelf: 'center'\r\n  },\r\n  modalText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 30,\r\n    marginTop: 40,\r\n    color: Colors.text,\r\n  },\r\n  card: {\r\n    marginTop: 150,\r\n    width: 370,\r\n    height: 550,\r\n    backgroundColor: Colors.card,\r\n    borderWidth: 0,\r\n    alignSelf: 'center',\r\n  },\r\n  titleText: {\r\n    color: Colors.text,\r\n    fontSize: 27,\r\n    alignSelf: 'center',\r\n    margin: 15,\r\n  },\r\n  textField: {\r\n    alignSelf: 'center',\r\n    backgroundColor: Colors.textFieldBackground,\r\n    color: Colors.card,\r\n    height: 40,\r\n    width: 75,\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    borderWidth: 2,\r\n    borderColor: Colors.card,\r\n  },\r\n});\r\n\r\nmodule.exports = WorkoutScreen;\r\n"]},"metadata":{},"sourceType":"script"}