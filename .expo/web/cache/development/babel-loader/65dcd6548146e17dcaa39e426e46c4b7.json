{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSvg = require(\"react-native-svg\");\n\nvar _reactNativeSvgCharts = require(\"react-native-svg-charts\");\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _jsxFileName = \"/Users/Anne/WebstormProjects/WorkoutApp/Screens/GradientLineChart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar GradientLineChart = function (_PureComponent) {\n  (0, _inherits2.default)(GradientLineChart, _PureComponent);\n\n  var _super = _createSuper(GradientLineChart);\n\n  function GradientLineChart() {\n    (0, _classCallCheck2.default)(this, GradientLineChart);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(GradientLineChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var data = [85, 50, 10, 40, 95, -4, -24];\n      var xAxisDay = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\n      var xAxisMonth = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      var yAxis = [];\n      var contentInset = {\n        top: 20,\n        bottom: 20\n      };\n\n      var Gradient = function Gradient() {\n        return _react.default.createElement(_reactNativeSvg.Defs, {\n          key: 'gradient',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }\n        }, _react.default.createElement(_reactNativeSvg.LinearGradient, {\n          id: 'gradient',\n          x1: '0',\n          y: '0%',\n          x2: '100%',\n          y2: '0%',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }\n        }, _react.default.createElement(_reactNativeSvg.Stop, {\n          offset: '0%',\n          stopColor: 'rgb(134, 65, 244)',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }\n        }), _react.default.createElement(_reactNativeSvg.Stop, {\n          offset: '100%',\n          stopColor: 'rgb(66, 194, 244)',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        })));\n      };\n\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          marginVertical: 43,\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeSvgCharts.YAxis, {\n        data: data,\n        contentInset: contentInset,\n        svg: {\n          fontSize: 10,\n          fill: 'white'\n        },\n        numberOfTicks: 7,\n        formatLabel: function formatLabel(value) {\n          return value + \"\\xBAC\";\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNativeSvgCharts.LineChart, {\n        style: {\n          height: 200,\n          flex: 1\n        },\n        data: data,\n        contentInset: contentInset,\n        svg: {\n          strokeWidth: 2,\n          stroke: 'url(#gradient)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeSvgCharts.Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(Gradient, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      })), _react.default.createElement(_reactNativeSvgCharts.XAxis, {\n        data: data,\n        style: {\n          marginHorizontal: -10\n        },\n        contentInset: contentInset,\n        svg: {\n          fontSize: 10,\n          fill: 'white'\n        },\n        formatLabel: function formatLabel(value) {\n          return xAxisDay[value];\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return GradientLineChart;\n}(_react.PureComponent);\n\nexports.default = GradientLineChart;","map":{"version":3,"sources":["/Users/Anne/WebstormProjects/WorkoutApp/Screens/GradientLineChart.js"],"names":["GradientLineChart","data","xAxisDay","xAxisMonth","yAxis","contentInset","top","bottom","Gradient","marginVertical","flexDirection","fontSize","fill","value","height","flex","strokeWidth","stroke","marginHorizontal","PureComponent"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport {View} from 'react-native';\nimport {Defs, LinearGradient, Stop} from 'react-native-svg';\nimport {Grid, LineChart, XAxis, YAxis} from 'react-native-svg-charts';\nimport Colors from '../Themes/Colors';\n\nexport default class GradientLineChart extends PureComponent {\n  render() {\n    const data = [85, 50, 10, 40, 95, -4, -24];\n    const xAxisDay = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\n    const xAxisMonth = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n    const yAxis = [];\n    const contentInset = {top: 20, bottom: 20};\n\n    const Gradient = () => (\n      <Defs key={'gradient'}>\n        <LinearGradient id={'gradient'} x1={'0'} y={'0%'} x2={'100%'} y2={'0%'}>\n          <Stop offset={'0%'} stopColor={'rgb(134, 65, 244)'} />\n          <Stop offset={'100%'} stopColor={'rgb(66, 194, 244)'} />\n        </LinearGradient>\n      </Defs>\n    );\n\n    return (\n      <View style={{marginVertical: 43, flexDirection: 'row'}}>\n        <YAxis\n          data={data}\n          contentInset={contentInset}\n          svg={{fontSize: 10, fill: 'white'}}\n          numberOfTicks={7}\n          formatLabel={(value) => `${value}ºC`}\n        />\n        <LineChart\n          style={{height: 200, flex: 1}}\n          data={data}\n          contentInset={contentInset}\n          svg={{\n            strokeWidth: 2,\n            stroke: 'url(#gradient)',\n          }}>\n          <Grid />\n          <Gradient />\n        </LineChart>\n        <XAxis\n          data={data}\n          style={{marginHorizontal: -10}}\n          contentInset={contentInset}\n          svg={{fontSize: 10, fill: 'white'}}\n          formatLabel={(value) => xAxisDay[value]}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}