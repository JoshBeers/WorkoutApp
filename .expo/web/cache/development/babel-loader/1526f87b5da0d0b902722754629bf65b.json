{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _checkbox = _interopRequireDefault(require(\"@react-native-community/checkbox\"));\n\nvar SQLite = _interopRequireWildcard(require(\"expo-sqlite\"));\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _jsxFileName = \"/Users/Anne/WebstormProjects/WorkoutApp/Screens/CreateNewExerciseScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar CreateNewExerciseScreen = function (_React$Component) {\n  (0, _inherits2.default)(CreateNewExerciseScreen, _React$Component);\n\n  var _super = _createSuper(CreateNewExerciseScreen);\n\n  function CreateNewExerciseScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CreateNewExerciseScreen);\n    _this = _super.call(this);\n    _this.state = {\n      exerciseName: '',\n      exerciseDescription: '',\n      isWeighed: false,\n      isCardio: false,\n      isDone: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CreateNewExerciseScreen, [{\n    key: \"finish\",\n    value: function finish() {\n      var temp = new _Exercise.Exercise(0, this.state.exerciseName, this.state.exerciseDescription, this.state.isWeighed, this.state.isCardio);\n      console.log(temp);\n      (0, _Exercise.createNewExerciseFromExercise)(temp, function () {\n        (0, _Exercise.getAllExercises)(function (result) {\n          console.log(result);\n        });\n      });\n      this.setState({\n        isDone: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, \"Create A New Exercise\"), _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNativeElements.Card, {\n        containerStyle: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.textField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        placeholder: \"NAME\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            exerciseName: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.lgTextField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        placeholder: \"DESCRIPTION\",\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            exerciseDescription: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.checkRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_checkbox.default, {\n        disabled: false,\n        value: this.state.isWeighed,\n        onValueChange: function onValueChange(val) {\n          return _this2.setState({\n            isWeighed: val\n          });\n        },\n        tintColors: this.state.isWeighted ? _Colors.default.positive : _Colors.default.negative,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: styles.checkLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, \"Does this use weights?\")), _react.default.createElement(_reactNative.View, {\n        style: styles.checkRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_checkbox.default, {\n        disabled: false,\n        value: this.state.isCardio,\n        onValueChange: function onValueChange(val) {\n          return _this2.setState({\n            isCardio: val\n          });\n        },\n        tintColors: this.state.isCardio ? _Colors.default.positive : _Colors.default.negative,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: styles.checkLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, \"Is this cardio?\")), _react.default.createElement(_reactNative.View, {\n        style: styles.buttonView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        title: \"Finish\",\n        color: _Colors.default.btn,\n        onPress: function onPress() {\n          return _this2.finish();\n        },\n        disabled: this.state.exerciseName.length === 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }\n      }, \"FINISH\"))))));\n    }\n  }]);\n  return CreateNewExerciseScreen;\n}(_react.default.Component);\n\nexports.default = CreateNewExerciseScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  titleText: {\n    color: _Colors.default.text,\n    fontSize: 27,\n    marginTop: 30\n  },\n  screen: {\n    backgroundColor: _Colors.default.background,\n    flex: 1,\n    alignItems: 'center'\n  },\n  buttonView: {\n    width: 100,\n    marginTop: 20,\n    alignSelf: 'center'\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: _Colors.default.text\n  },\n  card: {\n    marginTop: 20,\n    width: 370,\n    height: 450,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center',\n    alignItems: 'center'\n  },\n  textField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 40,\n    width: 300,\n    marginTop: 20,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  },\n  lgTextField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 200,\n    width: 300,\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  },\n  checkRow: {\n    flexDirection: 'row',\n    margin: 5\n  },\n  checkLabel: {\n    color: _Colors.default.text,\n    marginTop: 7\n  }\n});","map":{"version":3,"sources":["/Users/Anne/WebstormProjects/WorkoutApp/Screens/CreateNewExerciseScreen.js"],"names":["CreateNewExerciseScreen","state","exerciseName","exerciseDescription","isWeighed","isCardio","isDone","temp","Exercise","console","log","result","setState","styles","screen","titleText","card","textField","text","lgTextField","checkRow","val","isWeighted","Colors","positive","negative","checkLabel","buttonView","btn","finish","length","buttonText","React","Component","StyleSheet","create","color","fontSize","marginTop","backgroundColor","background","flex","alignItems","width","alignSelf","fontWeight","height","borderWidth","textFieldBackground","marginBottom","borderColor","flexDirection","margin"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\nimport React from 'react';\nimport {StyleSheet, TextInput, Text, View, Button, FlatList, Modal, Image} from 'react-native';\nimport {Card} from 'react-native-elements';\nimport Checkbox from '@react-native-community/checkbox';\n// import { Checkbox } from 'react-native-paper';\n\nimport * as SQLite from \"expo-sqlite\";\nimport Colors from \"../Themes/Colors\";\nimport {Exercise, createNewExerciseFromExercise, getAllExercises} from \"../Classes/Exercise\";\nexport default class CreateNewExerciseScreen extends React.Component {\n\n    constructor(){\n        super()\n        this.state={\n            exerciseName: '',\n            exerciseDescription: '',\n            isWeighed: false,\n            isCardio: false,\n            isDone: false,\n        }\n    }\n\n    finish(){\n        let temp = new Exercise(0, this.state.exerciseName, this.state.exerciseDescription, this.state.isWeighed, this.state.isCardio);\n        console.log(temp);\n        createNewExerciseFromExercise(temp, function () {\n            getAllExercises(function (result){\n                console.log(result)\n            })\n        });\n        this.setState({\n            isDone: true,\n        })\n\n    }\n\n    render(){\n        return(\n            <View style={styles.screen}>\n                <Text style={styles.titleText}>Create A New Exercise</Text>\n                <View >\n                    <Card containerStyle={styles.card}>\n                        <View style={styles.textField}>\n                            <TextInput\n                                placeholder=\"NAME\"\n                                onChangeText={(text) => this.setState({exerciseName: text})}\n                            />\n                        </View>\n                        <View style={styles.lgTextField}>\n                            <TextInput\n                                placeholder=\"DESCRIPTION\"\n                                multiline={true}\n                                onChangeText={(text) => this.setState({exerciseDescription: text})}\n                            />\n                        </View>\n                        <View style={styles.checkRow}>\n                        <Checkbox\n                            disabled={false}\n                            value={this.state.isWeighed}\n                            onValueChange={(val) => this.setState({isWeighed: val})}\n                            tintColors={this.state.isWeighted ? Colors.positive : Colors.negative}/>\n                        <Text style ={styles.checkLabel}>Does this use weights?</Text>\n                        </View>\n                        <View style={styles.checkRow}>\n                            <Checkbox\n                                disabled={false}\n                                value={this.state.isCardio}\n                                onValueChange={(val) => this.setState({isCardio: val})}\n                                tintColors={this.state.isCardio ? Colors.positive : Colors.negative}\n                                />\n                            <Text style ={styles.checkLabel}>Is this cardio?</Text>\n                        </View>\n                        <View style={styles.buttonView}>\n                            <Button\n                                title='Finish'\n                                color={Colors.btn}\n                                onPress={() => this.finish()}\n                                disabled={this.state.exerciseName.length === 0}>\n                                <Text style={styles.buttonText}>FINISH</Text>\n                            </Button>\n                        </View>\n                    </Card>\n                </View>\n            </View>\n        )\n    }\n}\nconst styles = StyleSheet.create({\n    titleText: {\n        color: Colors.text,\n        fontSize: 27,\n        marginTop: 30,\n    },\n    screen: {\n        backgroundColor: Colors.background,\n        flex: 1,\n        alignItems: 'center',\n    },\n    buttonView: {\n        width: 100,\n        marginTop: 20,\n        alignSelf: 'center'\n    },\n    buttonText: {\n        fontWeight: 'bold',\n        fontSize: 18,\n        color: Colors.text,\n    },\n    card: {\n        marginTop: 20,\n        width: 370,\n        height: 450,\n        backgroundColor: Colors.card,\n        borderWidth: 0,\n        alignSelf: 'center',\n        alignItems: 'center',\n    },\n    textField: {\n        alignSelf: 'center',\n        backgroundColor: Colors.textFieldBackground,\n        color: Colors.card,\n        height: 40,\n        width: 300,\n        marginTop: 20,\n        marginBottom: 5,\n        borderWidth: 2,\n        borderColor: Colors.card,\n    },\n    lgTextField: {\n        alignSelf: 'center',\n        backgroundColor: Colors.textFieldBackground,\n        color: Colors.card,\n        height: 200,\n        width: 300,\n        marginTop: 5,\n        marginBottom: 5,\n        borderWidth: 2,\n        borderColor: Colors.card,\n    },\n    checkRow:{\n        flexDirection: 'row',\n        margin: 5\n    },\n    checkLabel: {\n        color: Colors.text,\n        marginTop: 7,\n    }\n})\n\n"]},"metadata":{},"sourceType":"script"}