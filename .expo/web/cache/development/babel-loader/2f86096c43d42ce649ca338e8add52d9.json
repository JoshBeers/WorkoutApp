{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runSQLTest = runSQLTest;\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _StartUpSQL = require(\"../StartUpSQL\");\n\nfunction testGetExercisesFromRoutine1(callback) {\n  console.log(\"sqllog_test_gettingExercisesFromRoutine1\", \"the test has begun\");\n  (0, _Exercise.getExerciseFromRoutine)(1, function (result) {\n    if (result.length == 3) {\n      console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\", \"testGetExercisesFromRoutine1 method passed\");\n    } else {\n      console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\", \"testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \" + result.length);\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testGetAllExercises(callback) {\n  console.log(\"sqllog_test_GetAllExercises\", \"the testGetAllExercises test has begun\");\n  (0, _Exercise.getAllExercises)(function (result) {\n    if (result.length == 3) {\n      console.log(\"sqllog_test_testGetAllExercises_results\", \"testGetAllExercises method passed\");\n    } else {\n      console.log(\"sqllog_test_testGetAllExercises_results\", \"testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \" + result.length);\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testCreateNewExerciseFromExercise(callback) {\n  console.log(\"sqllog_test_CreateNewExerciseFromExercise\", \"the testGetAllExercises test has begun\");\n  (0, _Exercise.createNewExerciseFromExercise)(new _Exercise.Exercise(1, \"test exercise\", \"this is a test val\", false), function () {\n    (0, _Exercise.getAllExercises)(function (result) {\n      if (result[result.length - 1].name = \"test exercise\") {\n        console.log(\"sqllog_test_testGetAllExercises_results\", \"testGetAllExercises method passed\");\n      } else {\n        console.log(\"sqllog_test_testGetAllExercises_results\", \"testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \" + result.length);\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testDeleteExerciseById(callback) {\n  console.log(\"sqllog_test_DeleteExerciseById\", \"the testDeleteExerciseById test has begun\");\n  var temp = null;\n  (0, _Exercise.getAllExercises)(function (result) {\n    temp = result.length;\n    (0, _Exercise.deleteExerciseById)(result.length - 1, function () {\n      (0, _Exercise.getAllExercises)(function (result) {\n        if (result.length == temp - 1) {\n          console.log(\"sqllog_test_DeleteExerciseById_results\", \"testDeleteExerciseById method passed\");\n        } else {\n          console.log(\"sqllog_test_DeleteExerciseById_results\", \"testDeleteExerciseById method failed length init = \" + temp + \" after call = \" + result.length + \" should be one less than init\");\n        }\n      });\n    });\n  });\n}\n\nfunction runSQLTest() {\n  (0, _StartUpSQL.createDummyData)(function () {\n    testGetExercisesFromRoutine1(function () {\n      testGetAllExercises(function () {\n        testCreateNewExerciseFromExercise(function () {\n          testDeleteExerciseById();\n        });\n      });\n    });\n  });\n}","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/test/SQLTesting.js"],"names":["testGetExercisesFromRoutine1","callback","console","log","result","length","testGetAllExercises","testCreateNewExerciseFromExercise","Exercise","name","testDeleteExerciseById","temp","runSQLTest"],"mappings":"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","sourcesContent":["\r\n\r\nimport {\r\n    createNewExerciseFromExercise,\r\n    deleteExerciseById,\r\n    Exercise,\r\n    getAllExercises,\r\n    getExerciseFromRoutine\r\n} from \"../Classes/Exercise\";\r\nimport {createDummyData} from \"../StartUpSQL\";\r\n\r\nfunction testGetExercisesFromRoutine1(callback){\r\n    console.log(\"sqllog_test_gettingExercisesFromRoutine1\",\"the test has begun\")\r\n    getExerciseFromRoutine(1, function(result) {\r\n        //console.log(\"test_gettingExercisesFromRoutine1_result\",result)\r\n\r\n        if(result.length == 3){\r\n            console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\",\"testGetExercisesFromRoutine1 method passed\")\r\n        }else{\r\n            console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\",\"testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \"+result.length)\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testGetAllExercises(callback){\r\n    console.log(\"sqllog_test_GetAllExercises\",\"the testGetAllExercises test has begun\")\r\n    getAllExercises(function (result){\r\n        //console.log(\"sqllog_test_testGetAllExercises_results\",result)\r\n\r\n        if(result.length == 3){\r\n            console.log(\"sqllog_test_testGetAllExercises_results\",\"testGetAllExercises method passed\")\r\n        }else{\r\n            console.log(\"sqllog_test_testGetAllExercises_results\",\"testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \"+result.length)\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testCreateNewExerciseFromExercise(callback){\r\n    console.log(\"sqllog_test_CreateNewExerciseFromExercise\",\"the testGetAllExercises test has begun\")\r\n    createNewExerciseFromExercise(new Exercise(1,\"test exercise\",\"this is a test val\", false), function (){\r\n        getAllExercises(function (result){\r\n            //console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",result[result.length-1])\r\n\r\n            if(result[result.length-1].name = \"test exercise\"){\r\n                console.log(\"sqllog_test_testGetAllExercises_results\",\"testGetAllExercises method passed\")\r\n            }else{\r\n                console.log(\"sqllog_test_testGetAllExercises_results\",\"testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \"+result.length)\r\n            }\r\n\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n\r\nfunction testDeleteExerciseById(callback){\r\n    console.log(\"sqllog_test_DeleteExerciseById\",\"the testDeleteExerciseById test has begun\")\r\n    let temp = null\r\n\r\n    getAllExercises(function (result){\r\n        temp = result.length\r\n        deleteExerciseById(result.length-1,function (){\r\n\r\n            getAllExercises(function (result){\r\n\r\n                if(result.length == temp-1){\r\n                    console.log(\"sqllog_test_DeleteExerciseById_results\",\"testDeleteExerciseById method passed\")\r\n                }else{\r\n                    console.log(\"sqllog_test_DeleteExerciseById_results\",\"testDeleteExerciseById method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\")\r\n                }\r\n            })\r\n        })\r\n    })\r\n\r\n\r\n    /*\r\n    deleteExerciseById(getAllExercises(function (result){\r\n        temp = result.length\r\n        return result.length-1\r\n    }), function (){\r\n\r\n        getAllExercises(function (result){\r\n\r\n            if(result.length-1 == temp){\r\n                console.log(\"sqllog_test_DeleteExerciseById_results\",\"testDeleteExerciseById method passed\")\r\n            }else{\r\n                console.log(\"sqllog_test_DeleteExerciseById_results\",\"testDeleteExerciseById method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\")\r\n            }\r\n\r\n\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n\r\n        })\r\n\r\n     */\r\n\r\n\r\n}\r\n\r\n\r\nexport function runSQLTest(){\r\n    createDummyData(function (){\r\n        testGetExercisesFromRoutine1(function () {\r\n            testGetAllExercises(function (){\r\n                testCreateNewExerciseFromExercise( function (){\r\n                    testDeleteExerciseById()\r\n                })\r\n            })\r\n        })\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}