{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar SQLite = _interopRequireWildcard(require(\"expo-sqlite\"));\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _DummyParse = require(\"../DummyData/DummyParse\");\n\nvar _Dimensions = _interopRequireDefault(require(\"react-native-web/src/exports/Dimensions\"));\n\nvar _Routine = require(\"../Classes/Routine\");\n\nvar firebase = _interopRequireWildcard(require(\"firebase\"));\n\nvar _jsxFileName = \"D:\\\\school\\\\softdev projects\\\\WorkoutApp\\\\Screens\\\\WorkoutScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar exercises = [];\nvar exerciseWithin = _DummyParse.dumDumRoutines[0].exercises;\n\nvar WorkoutScreen = function (_React$Component) {\n  (0, _inherits2.default)(WorkoutScreen, _React$Component);\n\n  var _super = _createSuper(WorkoutScreen);\n\n  function WorkoutScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, WorkoutScreen);\n    _this = _super.call(this, props);\n\n    _this.fillArray();\n\n    _this.state = {\n      workoutRoutines: []\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(WorkoutScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      (0, _Routine.getAllRoutinesWithOutExercises)(function () {\n        console.log(\"dataLog_WorkoutScreen_AfterGettingWorkouts\", _this2.state);\n      });\n    }\n  }, {\n    key: \"getRoutines\",\n    value: function getRoutines(callback) {\n      var _this3 = this;\n\n      (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n        _this3.setState({\n          workoutRoutines: result\n        });\n      });\n\n      if (callback) {\n        callback();\n      }\n    }\n  }, {\n    key: \"fillArray\",\n    value: function fillArray() {\n      var _loop = function _loop(i) {\n        var tempExer = _DummyParse.dumDumExercise.find(function (temp) {\n          return temp.exerciseID === exerciseWithin[i].exerciseID;\n        });\n\n        console.log(tempExer.name);\n        exercises.push(tempExer);\n      };\n\n      for (var i = 0; i < exerciseWithin.length; i++) {\n        _loop(i);\n      }\n    }\n  }, {\n    key: \"createInputLine\",\n    value: function createInputLine(excerID) {\n      var anothertemp = exercises.find(function (id) {\n        return id.exerciseID === excerID;\n      });\n\n      if (anothertemp.doesUseWeight === true) {\n        return _react.default.createElement(_reactNative.View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"SET\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"REP\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"WEIGHT\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        })));\n      } else {\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"SET\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"getExerciseName\",\n    value: function getExerciseName(exerciseId) {\n      var db = SQLite.openDatabase(\"workoutAppDB.db\");\n      db.transaction(function (tx) {\n        tx.executeSql(\"select name from exercises where Id = \" + exerciseId + \";\", [], function (_, rows) {\n          console.log(\"sqllog_WorkoutScreen_exercises_name\", rows.rows);\n          return rows.rows;\n        });\n      });\n    }\n  }, {\n    key: \"getExerciseInfo\",\n    value: function getExerciseInfo(routine_Id) {\n      var db = SQLite.openDatabase(\"workoutAppDB.db\");\n      db.transaction(function (tx) {\n        tx.executeSql(\"select numberOFReps, numberofSets, weight, placeInOrder, from ExercisesWithinRoutines where routineID = \" + routine_Id + \";\", [], function (_, rows) {\n          console.log(\"sqllog_WorkoutScreen_exercises_info\", rows.rows);\n          return rows.rows;\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.workout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 5\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        horizontal: true,\n        data: exercises,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _react.default.createElement(_reactNativeElements.Card, {\n            containerStyle: styles.card,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            style: styles.titleText,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }\n          }, item.name));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n  return WorkoutScreen;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  workout: {\n    backgroundColor: _Colors.default.background,\n    flex: 1,\n    alignItems: 'center'\n  },\n  card: {\n    marginTop: 10,\n    width: 370,\n    height: 550,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center'\n  },\n  titleText: {\n    color: _Colors.default.text,\n    fontSize: 27,\n    alignSelf: 'center',\n    margin: 15\n  },\n  textField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 40,\n    width: 75,\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  }\n});\n\nmodule.exports = WorkoutScreen;","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/Screens/WorkoutScreen.js"],"names":["exercises","exerciseWithin","dumDumRoutines","WorkoutScreen","props","fillArray","state","workoutRoutines","console","log","callback","result","setState","i","tempExer","dumDumExercise","find","temp","exerciseID","name","push","length","excerID","anothertemp","id","doesUseWeight","styles","textField","exerciseId","db","SQLite","openDatabase","transaction","tx","executeSql","_","rows","routine_Id","workout","item","card","titleText","React","Component","StyleSheet","create","backgroundColor","Colors","background","flex","alignItems","marginTop","width","height","borderWidth","alignSelf","color","text","fontSize","margin","textFieldBackground","marginBottom","borderColor","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React, {Component} from 'react';\r\nimport {StyleSheet, TextInput, Text, View, Button, FlatList} from 'react-native';\r\nimport {Card} from 'react-native-elements';\r\nimport * as SQLite from \"expo-sqlite\";\r\nimport Colors from \"../Themes/Colors\";\r\nimport {Exercise} from \"../Classes/Exercise\";\r\n\r\nimport {dumDumExercise, dumDumRoutines} from \"../DummyData/DummyParse\";\r\nimport Dimensions from \"react-native-web/src/exports/Dimensions\";\r\nimport {getAllRoutinesWithOutExercises, Routine} from \"../Classes/Routine\";\r\nimport * as firebase from \"firebase\";\r\n\r\nlet exercises = [];\r\nlet exerciseWithin = dumDumRoutines[0].exercises; // Some temp bullshit\r\n\r\nclass WorkoutScreen extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.fillArray();\r\n    this.state= {\r\n      workoutRoutines : []\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    getAllRoutinesWithOutExercises(()=>{\r\n      console.log(\"dataLog_WorkoutScreen_AfterGettingWorkouts\",this.state)\r\n    })\r\n  }\r\n\r\n\r\n  getRoutines(callback){\r\n    getAllRoutinesWithOutExercises((result)=>{\r\n      this.setState({\r\n        workoutRoutines: result\r\n      })\r\n    })\r\n    if(callback){\r\n      callback()\r\n    }\r\n  }\r\n\r\n\r\n  // Fills the exercise array with exercise objects current just pulling form json object\r\n  fillArray() {\r\n    for(let i = 0; i < exerciseWithin.length; i++){\r\n      let tempExer = dumDumExercise.find(temp => temp.exerciseID === exerciseWithin[i].exerciseID);\r\n      console.log(tempExer.name);\r\n      exercises.push(tempExer);\r\n    }\r\n  }\r\n\r\n  // Gets id to know which input lines to create, also currently pulling from JSON. Ill change it later\r\n  // Apparently i need to use states. *cries*\r\n  createInputLine(excerID){\r\n    let anothertemp = exercises.find(id => id.exerciseID === excerID);\r\n    if(anothertemp.doesUseWeight === true){\r\n      return(\r\n          <View>\r\n            <View style={styles.textField}>\r\n              <TextInput\r\n                placeholder=\"SET\"\r\n              />\r\n            </View>\r\n            <View style={styles.textField}>\r\n              <TextInput\r\n                placeholder=\"REP\"\r\n              />\r\n            </View>\r\n            <View style={styles.textField}>\r\n              <TextInput\r\n                placeholder=\"WEIGHT\"\r\n              />\r\n            </View>\r\n          </View>\r\n      );\r\n    }\r\n    else{\r\n      return(\r\n          <View style={styles.textField}>\r\n            <TextInput\r\n                placeholder=\"SET\"\r\n            />\r\n          </View>\r\n      );\r\n    }\r\n  }\r\n\r\n  getExerciseName(exerciseId){\r\n    const db = SQLite.openDatabase(\"workoutAppDB.db\");\r\n\r\n    db.transaction(tx =>{\r\n      tx.executeSql(\"select name from exercises where Id = \" + exerciseId + \";\",[],(_,rows) =>{\r\n\r\n        console.log(\"sqllog_WorkoutScreen_exercises_name\", rows.rows)\r\n\r\n        return rows.rows;\r\n      })\r\n    })\r\n  }\r\n\r\n  getExerciseInfo(routine_Id) {\r\n    const db = SQLite.openDatabase(\"workoutAppDB.db\");\r\n\r\n    db.transaction(tx =>{\r\n      tx.executeSql(\"select numberOFReps, numberofSets, weight, placeInOrder, from ExercisesWithinRoutines where routineID = \" + routine_Id + \";\",[],(_,rows) =>{\r\n\r\n        console.log(\"sqllog_WorkoutScreen_exercises_info\", rows.rows)\r\n\r\n        return rows.rows;\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <View style = {styles.workout}>\r\n      <FlatList\r\n          horizontal\r\n          data={exercises} renderItem={({item}) =>(\r\n          <Card containerStyle = {styles.card}>\r\n            <Text style = {styles.titleText}>{item.name}</Text>\r\n          </Card>\r\n        )}/>\r\n    </View>\r\n    )}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  workout: {\r\n    backgroundColor: Colors.background,\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  card: {\r\n    marginTop: 10,\r\n    width: 370,\r\n    height: 550,\r\n    backgroundColor: Colors.card,\r\n    borderWidth: 0,\r\n    alignSelf: 'center',\r\n  },\r\n  titleText: {\r\n    color: Colors.text,\r\n    fontSize: 27,\r\n    alignSelf: 'center',\r\n    margin: 15,\r\n  },\r\n  textField: {\r\n    alignSelf: 'center',\r\n    backgroundColor: Colors.textFieldBackground,\r\n    color: Colors.card,\r\n    height: 40,\r\n    width: 75,\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    borderWidth: 2,\r\n    borderColor: Colors.card,\r\n  },\r\n});\r\n\r\nmodule.exports = WorkoutScreen;\r\n"]},"metadata":{},"sourceType":"script"}