{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkoutCard = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _Colors = _interopRequireDefault(require(\"../../Themes/Colors\"));\n\nvar _jsxFileName = \"D:\\\\school\\\\softdev projects\\\\WorkoutApp\\\\Screens\\\\Components\\\\WorkoutCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WorkoutCard = function (_Component) {\n  (0, _inherits2.default)(WorkoutCard, _Component);\n\n  var _super = _createSuper(WorkoutCard);\n\n  function WorkoutCard(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, WorkoutCard);\n    _this = _super.call(this, props);\n\n    _this.addInput = function () {\n      var textInput = _this.state.textInput;\n      var rep = 0;\n      var set = _this.state.count;\n      var weight = 0;\n      var setInfo = [];\n\n      if (_this.state.isWeighted && !_this.state.isCardio) {\n        _this.state.textInput.push(_react.default.createElement(_reactNative.View, {\n          containerStyle: styles.textLine,\n          key: _this.state.count,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, _this.state.count)), _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"REP\",\n          onChangeText: function onChangeText(text) {\n            _this.state.inputMap.get(set).rep = 0 + text;\n            console.log();\n          },\n          value: rep,\n          keyboardType: \"number-pad\",\n          style: {\n            flex: 1\n          },\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"WEIGHT\",\n          onChangeText: function onChangeText(text) {\n            weight = 0 + text;\n          },\n          keyboardType: \"number-pad\",\n          style: {\n            flex: 1\n          },\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }\n        }))));\n\n        setInfo.push({\n          'set': set,\n          'rep': rep,\n          'weight': weight\n        });\n      } else if (!_this.state.isWeighted && !_this.state.isCardio) {\n        _this.state.textInput.push(_react.default.createElement(_reactNative.View, {\n          containerStyle: styles.textLine,\n          key: _this.state.count,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }\n        }, _this.state.count)), _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"REP\",\n          onChangeText: function onChangeText(text) {\n            rep = 0 + text;\n            _this.state.inputMap.get(set).rep = rep;\n            console.log(_this.state.inputMap.get(set));\n          },\n          keyboardType: \"number-pad\",\n          style: {\n            flex: 1\n          },\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        }))));\n\n        setInfo.push({\n          'set': _this.state.count,\n          'rep': rep\n        });\n\n        _this.setState({\n          inputMap: _this.state.inputMap.set(_this.state.count, {\n            rep: rep\n          })\n        });\n      }\n\n      _this.updateCount(1);\n\n      _this.setState({\n        textInput: textInput\n      });\n\n      _this.addToArray(setInfo, _this.state.count);\n    };\n\n    _this.addToArray = function (input, count) {\n      var array = _this.state.inputData;\n      var isThere = false;\n\n      if (array !== 0) {\n        array.forEach(function (aSet) {\n          if (aSet.set === count) {\n            if (aSet.containsKey('rep')) {\n              aSet.rep = input.rep;\n              aSet.weight = input.weight;\n            } else {\n              aSet.set = set;\n            }\n\n            isThere = true;\n          }\n        });\n      }\n\n      if (isThere) {\n        _this.setState({\n          inputData: array\n        });\n      } else {\n        array.push(input);\n\n        _this.setState({\n          inputData: array\n        });\n      }\n    };\n\n    _this.removeInput = function () {\n      var textInput = _this.state.textInput;\n      var inputData = _this.state.inputData;\n      textInput.pop();\n      inputData.pop();\n\n      _this.updateCount(-1);\n\n      _this.setState({\n        textInput: textInput,\n        inputData: inputData\n      });\n    };\n\n    _this.finish = function () {\n      console.log(\"asdafd\", _this.state.textInput);\n\n      _this.setState({\n        isDone: true\n      });\n\n      _this.props.finishFunction(_this.state.id, _this.state.name, _this.state.inputData);\n    };\n\n    _this.state = {\n      id: '',\n      name: '',\n      isWeighted: false,\n      isCardio: false,\n      textInput: [],\n      inputData: [],\n      count: 1,\n      inputMap: new Map()\n    };\n    _this.state.id = props.id;\n    _this.state.name = props.name;\n    _this.state.isWeighted = props.isWeight;\n    _this.state.isCardio = props.isCardio;\n    return _this;\n  }\n\n  (0, _createClass2.default)(WorkoutCard, [{\n    key: \"updateCount\",\n    value: function updateCount(val) {\n      this.setState({\n        count: this.state.count + val\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNativeElements.Card, {\n        containerStyle: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, this.state.name), _react.default.createElement(_reactNative.ScrollView, {\n        contentContainerStyle: {\n          flexGrow: 1\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.exerciseID.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }\n      }, this.state.textInput.map(function (value) {\n        return value;\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.buttonView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          margin: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        title: \"-\",\n        color: _Colors.default.negative,\n        onPress: function onPress() {\n          return _this2.removeInput();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 33\n        }\n      }, \"-\"))), _react.default.createElement(_reactNative.View, {\n        style: {\n          margin: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        title: \"Finish\",\n        color: _Colors.default.btn,\n        onPress: function onPress() {\n          return _this2.finish();\n        },\n        disabled: this.state.inputData.length === 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }\n      }, \"FINISH\"))), _react.default.createElement(_reactNative.View, {\n        style: {\n          margin: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        title: \"+\",\n        color: _Colors.default.positive,\n        onPress: function onPress() {\n          return _this2.addInput();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }\n      }, \"+\"))))));\n    }\n  }]);\n  return WorkoutCard;\n}(_react.Component);\n\nexports.WorkoutCard = WorkoutCard;\n\nvar styles = _reactNative.StyleSheet.create({\n  card: {\n    marginTop: 50,\n    width: 370,\n    height: 600,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center',\n    alignItems: 'center'\n  },\n  titleText: {\n    color: _Colors.default.text,\n    fontSize: 27,\n    alignSelf: 'center',\n    margin: 15\n  },\n  textLine: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'space-around',\n    width: 300\n  },\n  textField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 40,\n    width: 70,\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: _Colors.default.text\n  },\n  buttonView: {\n    flexDirection: 'row',\n    marginTop: 40,\n    marginBottom: 15,\n    alignItems: 'center',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/Screens/Components/WorkoutCard.js"],"names":["WorkoutCard","props","addInput","textInput","state","rep","set","count","weight","setInfo","isWeighted","isCardio","push","styles","textLine","textField","text","inputMap","get","console","log","flex","setState","updateCount","addToArray","input","array","inputData","isThere","forEach","aSet","containsKey","removeInput","pop","finish","isDone","finishFunction","id","name","Map","isWeight","val","card","titleText","flexGrow","item","exerciseID","toString","map","value","buttonView","margin","Colors","negative","buttonText","btn","length","positive","Component","StyleSheet","create","marginTop","width","height","backgroundColor","borderWidth","alignSelf","alignItems","color","fontSize","flexDirection","justifyContent","textFieldBackground","marginBottom","borderColor","fontWeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {StyleSheet, TextInput, Text, View, Button, ScrollView} from 'react-native';\r\nimport {Card} from 'react-native-elements';\r\nimport Colors from \"../../Themes/Colors\";\r\n\r\nexport class WorkoutCard extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            isWeighted: false,\r\n            isCardio: false,\r\n            textInput: [],\r\n            inputData: [],\r\n            count: 1,\r\n            inputMap:new Map()\r\n        }\r\n        this.state.id = props.id;\r\n        this.state.name = props.name;\r\n        this.state.isWeighted = props.isWeight;\r\n        this.state.isCardio = props.isCardio;\r\n    }\r\n\r\n    updateCount(val){\r\n        this.setState({\r\n            count: this.state.count + val\r\n        })\r\n    }\r\n\r\n    addInput = () => {\r\n\r\n\r\n\r\n        let textInput = this.state.textInput;\r\n        // let inputData = this.state.inputData;\r\n        let rep = 0;\r\n        let set = this.state.count\r\n        let weight = 0;\r\n        let setInfo = [];\r\n        if (this.state.isWeighted && !this.state.isCardio) {\r\n            this.state.textInput.push(\r\n                <View containerStyle = {styles.textLine}\r\n                      key={this.state.count}>\r\n                    <View style={styles.textField}>\r\n                        <Text>{this.state.count}</Text>\r\n                    </View>\r\n                    <View style={styles.textField}>\r\n                        <TextInput\r\n                            placeholder=\"REP\"\r\n                            onChangeText={(text) => {\r\n                                this.state.inputMap.get(set).rep = 0+text\r\n                                console.log()\r\n                            }}\r\n                            value={rep}\r\n                            keyboardType={\"number-pad\"}\r\n                            style = {{flex: 1}}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.textField}>\r\n                        <TextInput\r\n                            placeholder=\"WEIGHT\"\r\n                            onChangeText={(text) => {\r\n\r\n\r\n\r\n                                weight = 0+text\r\n                            }}\r\n                            keyboardType={\"number-pad\"}\r\n                            style = {{flex: 1}}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            );\r\n            setInfo.push({'set': set, 'rep': rep, 'weight': weight});\r\n\r\n        }\r\n        else if (!this.state.isWeighted && !this.state.isCardio) {\r\n            this.state.textInput.push(\r\n                <View containerStyle = {styles.textLine}\r\n                      key={this.state.count}>\r\n                    <View style={styles.textField}>\r\n                        <Text>{this.state.count}</Text>\r\n                    </View>\r\n                    <View style={styles.textField}>\r\n                        <TextInput\r\n                            placeholder=\"REP\"\r\n                            onChangeText={(text) =>{\r\n                                rep = (0+text)\r\n                                this.state.inputMap.get(set).rep = rep\r\n                                console.log(this.state.inputMap.get(set))\r\n                            }}\r\n                            keyboardType={\"number-pad\"}\r\n                            style = {{flex: 1}}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            );\r\n            setInfo.push({'set': this.state.count, 'rep': rep});\r\n            this.setState({\r\n                inputMap:  this.state.inputMap.set(this.state.count,{\r\n                    rep: rep\r\n                })\r\n            })\r\n        }\r\n        this.updateCount(1);\r\n        this.setState({\r\n            textInput: textInput});\r\n        this.addToArray(setInfo, this.state.count);\r\n    }\r\n\r\n    addToArray = (input, count) => {\r\n        let array = this.state.inputData;\r\n        let isThere = false;\r\n\r\n        if(array !== 0){\r\n            array.forEach(aSet => {\r\n                if(aSet.set === count){\r\n                    if(aSet.containsKey('rep')){\r\n                        aSet.rep = input.rep;\r\n                        aSet.weight = input.weight;\r\n                    }\r\n                    else {\r\n                        aSet.set = set;\r\n                    }\r\n                    isThere = true\r\n                }\r\n            });\r\n        }\r\n        if(isThere){\r\n            this.setState({\r\n                inputData: array\r\n            });\r\n        }\r\n        else {\r\n            array.push(input);\r\n            this.setState({\r\n                inputData: array\r\n            });\r\n        }\r\n    }\r\n\r\n    removeInput = () => {\r\n        let textInput = this.state.textInput;\r\n        let inputData = this.state.inputData;\r\n\r\n        textInput.pop();\r\n        inputData.pop();\r\n        this.updateCount(- 1);\r\n\r\n        this.setState({textInput, inputData});\r\n    }\r\n\r\n    finish = () => {\r\n        console.log(\"asdafd\",this.state.textInput)\r\n        this.setState({isDone : true});\r\n        this.props.finishFunction(this.state.id, this.state.name, this.state.inputData);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View>\r\n                <Card containerStyle={styles.card}>\r\n                    <Text style = {styles.titleText}>{this.state.name}</Text>\r\n                        <ScrollView\r\n                            contentContainerStyle={{flexGrow: 1}}\r\n                            keyExtractor={(item) => item.exerciseID.toString()}>\r\n                            {this.state.textInput.map((value) => {\r\n                                return value\r\n                            })}\r\n\r\n                        </ScrollView>\r\n                    <View style={styles.buttonView}>\r\n                        <View style={{margin: 5}}>\r\n                            <Button\r\n                                title = '-'\r\n                                color={Colors.negative}\r\n                                onPress={() => this.removeInput()}>\r\n                                <Text style={styles.buttonText}>-</Text>\r\n                            </Button>\r\n                        </View>\r\n                        <View style={{margin: 5}}>\r\n                            <Button\r\n                                title = 'Finish'\r\n                                color = {Colors.btn}\r\n                                onPress={() => this.finish()}\r\n                                disabled={this.state.inputData.length === 0}>\r\n\r\n                                <Text style={styles.buttonText}>FINISH</Text>\r\n                            </Button>\r\n                        </View>\r\n                        <View style={{margin: 5}}>\r\n                            <Button\r\n                                title = '+'\r\n                                color = {Colors.positive}\r\n                                onPress={() => this.addInput()}>\r\n                                <Text style={styles.buttonText}>+</Text>\r\n                            </Button>\r\n                        </View>\r\n                    </View>\r\n                </Card>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        marginTop: 50,\r\n        width: 370,\r\n        height: 600,\r\n        backgroundColor: Colors.card,\r\n        borderWidth: 0,\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    titleText: {\r\n        color: Colors.text,\r\n        fontSize: 27,\r\n        alignSelf: 'center',\r\n        margin: 15,\r\n    },\r\n    textLine:{\r\n        flexDirection: 'row',\r\n        flex: 1,\r\n        justifyContent: 'space-around',\r\n        width: 300,\r\n    },\r\n    textField: {\r\n        alignSelf: 'center',\r\n        backgroundColor: Colors.textFieldBackground,\r\n        color: Colors.card,\r\n        height: 40,\r\n        width: 70,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        borderWidth: 2,\r\n        borderColor: Colors.card,\r\n    },\r\n    buttonText: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n        color: Colors.text,\r\n    },\r\n    buttonView: {\r\n        flexDirection: 'row',\r\n        marginTop: 40,\r\n        marginBottom: 15,\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"script"}