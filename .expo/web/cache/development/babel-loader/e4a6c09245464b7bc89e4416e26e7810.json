{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar SQLite = _interopRequireWildcard(require(\"expo-sqlite\"));\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _DummyParse = require(\"../DummyData/DummyParse\");\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _Dimensions = _interopRequireDefault(require(\"react-native-web/src/exports/Dimensions\"));\n\nvar _WorkoutCard = require(\"./Components/WorkoutCard.js\");\n\nvar _jsxFileName = \"/Users/Anne/WebstormProjects/WorkoutApp/Screens/WorkoutScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar exercises = [];\nvar exerciseWithin = _DummyParse.dumDumRoutines[1].exercises;\n\nvar WorkoutScreen = function (_React$Component) {\n  (0, _inherits2.default)(WorkoutScreen, _React$Component);\n\n  var _super = _createSuper(WorkoutScreen);\n\n  function WorkoutScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, WorkoutScreen);\n    _this = _super.call(this, props);\n\n    _this.fillArray();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(WorkoutScreen, [{\n    key: \"fillArray\",\n    value: function fillArray() {\n      var _loop = function _loop(i) {\n        var tempExer = _DummyParse.dumDumExercise.find(function (temp) {\n          return temp.exerciseID === exerciseWithin[i].exerciseID;\n        });\n\n        console.log(tempExer.name);\n        exercises.push(tempExer);\n      };\n\n      for (var i = 0; i < exerciseWithin.length; i++) {\n        _loop(i);\n      }\n    }\n  }, {\n    key: \"getExerciseName\",\n    value: function getExerciseName(exerciseId) {\n      var db = SQLite.openDatabase(\"workoutAppDB.db\");\n      db.transaction(function (tx) {\n        tx.executeSql(\"select name from exercises where Id = \" + exerciseId + \";\", [], function (_, rows) {\n          console.log(\"sqllog_WorkoutScreen_exercises_name\", rows.rows);\n          return rows.rows;\n        });\n      });\n    }\n  }, {\n    key: \"getExerciseInfo\",\n    value: function getExerciseInfo(routine_Id) {\n      var db = SQLite.openDatabase(\"workoutAppDB.db\");\n      db.transaction(function (tx) {\n        tx.executeSql(\"select numberOFReps, numberofSets, weight, placeInOrder, from ExercisesWithinRoutines where routineID = \" + routine_Id + \";\", [], function (_, rows) {\n          console.log(\"sqllog_WorkoutScreen_exercises_info\", rows.rows);\n          return rows.rows;\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.workout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        horizontal: true,\n        data: exercises,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _react.default.createElement(_WorkoutCard.WorkoutCard, {\n            id: item.exerciseID,\n            name: item.name,\n            isWeight: item.doesUseWeight,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n  return WorkoutScreen;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  workout: {\n    backgroundColor: _Colors.default.background,\n    flex: 1,\n    alignItems: 'center'\n  },\n  card: {\n    marginTop: 10,\n    width: 370,\n    height: 550,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center'\n  },\n  titleText: {\n    color: _Colors.default.text,\n    fontSize: 27,\n    alignSelf: 'center',\n    margin: 15\n  },\n  textField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 40,\n    width: 75,\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  }\n});\n\nmodule.exports = WorkoutScreen;","map":{"version":3,"sources":["/Users/Anne/WebstormProjects/WorkoutApp/Screens/WorkoutScreen.js"],"names":["exercises","exerciseWithin","dumDumRoutines","WorkoutScreen","props","fillArray","i","tempExer","dumDumExercise","find","temp","exerciseID","console","log","name","push","length","exerciseId","db","SQLite","openDatabase","transaction","tx","executeSql","_","rows","routine_Id","styles","workout","item","doesUseWeight","React","Component","StyleSheet","create","backgroundColor","Colors","background","flex","alignItems","card","marginTop","width","height","borderWidth","alignSelf","titleText","color","text","fontSize","margin","textField","textFieldBackground","marginBottom","borderColor","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\nimport React, {Component} from 'react';\nimport {StyleSheet, TextInput, Text, View, Button, FlatList} from 'react-native';\nimport {Card} from 'react-native-elements';\nimport * as SQLite from \"expo-sqlite\";\nimport Colors from \"../Themes/Colors\";\nimport {dumDumExercise, dumDumRoutines} from \"../DummyData/DummyParse\";\nimport {Exercise} from \"../Classes/Exercise\";\nimport Dimensions from \"react-native-web/src/exports/Dimensions\";\nimport {WorkoutCard} from \"./Components/WorkoutCard.js\";\n\nlet exercises = [];\nlet exerciseWithin = dumDumRoutines[1].exercises; // Some temp bullshit\n\nclass WorkoutScreen extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.fillArray();\n  }\n\n  // Fills the exercise array with exercise objects current just pulling form json object\n  fillArray() {\n    for(let i = 0; i < exerciseWithin.length; i++){\n      let tempExer = dumDumExercise.find(temp => temp.exerciseID === exerciseWithin[i].exerciseID);\n      console.log(tempExer.name);\n      exercises.push(tempExer);\n    }\n  }\n\n  getExerciseName(exerciseId){\n    const db = SQLite.openDatabase(\"workoutAppDB.db\");\n\n    db.transaction(tx =>{\n      tx.executeSql(\"select name from exercises where Id = \" + exerciseId + \";\",[],(_,rows) =>{\n\n        console.log(\"sqllog_WorkoutScreen_exercises_name\", rows.rows)\n\n        return rows.rows;\n      })\n    })\n  }\n\n  getExerciseInfo(routine_Id) {\n    const db = SQLite.openDatabase(\"workoutAppDB.db\");\n\n    db.transaction(tx =>{\n      tx.executeSql(\"select numberOFReps, numberofSets, weight, placeInOrder, from ExercisesWithinRoutines where routineID = \" + routine_Id + \";\",[],(_,rows) =>{\n\n        console.log(\"sqllog_WorkoutScreen_exercises_info\", rows.rows)\n\n        return rows.rows;\n      })\n    })\n  }\n\n  render() {\n    return(\n    <View style = {styles.workout}>\n      <FlatList\n          horizontal\n          data={exercises} renderItem={({item}) =>(\n            <WorkoutCard\n                id = {item.exerciseID}\n                name = {item.name}\n                isWeight = {item.doesUseWeight}\n            />\n\n        )}/>\n    </View>\n    )}\n}\n\nconst styles = StyleSheet.create({\n  workout: {\n    backgroundColor: Colors.background,\n    flex: 1,\n    alignItems: 'center',\n  },\n  card: {\n    marginTop: 10,\n    width: 370,\n    height: 550,\n    backgroundColor: Colors.card,\n    borderWidth: 0,\n    alignSelf: 'center',\n  },\n  titleText: {\n    color: Colors.text,\n    fontSize: 27,\n    alignSelf: 'center',\n    margin: 15,\n  },\n  textField: {\n    alignSelf: 'center',\n    backgroundColor: Colors.textFieldBackground,\n    color: Colors.card,\n    height: 40,\n    width: 75,\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: Colors.card,\n  },\n});\n\nmodule.exports = WorkoutScreen;\n"]},"metadata":{},"sourceType":"script"}