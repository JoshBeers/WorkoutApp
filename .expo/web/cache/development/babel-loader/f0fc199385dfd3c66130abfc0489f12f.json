{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SafeAreaProviderCompat;\nexports.initialSafeAreaInsets = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _reactNativeIphoneXHelper = require(\"react-native-iphone-x-helper\");\n\nvar _jsxFileName = \"D:\\\\Dell\\\\Documents\\\\SCHOOL SHIT\\\\FALL 2020\\\\Software Dev Project\\\\WorkoutApp\\\\node_modules\\\\@react-navigation\\\\bottom-tabs\\\\src\\\\views\\\\SafeAreaProviderCompat.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialSafeAreaInsets = _objectSpread({\n  top: (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true),\n  bottom: (0, _reactNativeIphoneXHelper.getBottomSpace)(),\n  right: 0,\n  left: 0\n}, _reactNativeSafeAreaContext.initialWindowSafeAreaInsets);\n\nexports.initialSafeAreaInsets = initialSafeAreaInsets;\n\nfunction SafeAreaProviderCompat(_ref) {\n  var _this = this;\n\n  var children = _ref.children;\n  return React.createElement(_reactNativeSafeAreaContext.SafeAreaConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, function (insets) {\n    if (insets) {\n      return children;\n    }\n\n    return React.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {\n      initialSafeAreaInsets: initialSafeAreaInsets,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, children);\n  });\n}","map":{"version":3,"sources":["D:/Dell/Documents/SCHOOL SHIT/FALL 2020/Software Dev Project/WorkoutApp/node_modules/@react-navigation/bottom-tabs/src/views/SafeAreaProviderCompat.tsx"],"names":["initialSafeAreaInsets","top","bottom","right","left","initialWindowSafeAreaInsets","SafeAreaProviderCompat","children","insets"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AAKA;;;;;;;;AAQO,IAAMA,qBAAqB;AAEhCC,EAAAA,GAAG,EAAE,kDAAmB,IAAnB,CAF2B;AAGhCC,EAAAA,MAAM,EAAE,+CAHwB;AAIhCC,EAAAA,KAAK,EAAE,CAJyB;AAKhCC,EAAAA,IAAI,EAAE;AAL0B,GAQ7BC,uDAR6B,CAA3B;;;;AAeQ,SAASC,sBAAT,OAAqD;AAAA;;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAClE,SACE,oBAAC,4CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACC,MAAD,EAAY;AACX,QAAIA,MAAJ,EAAY;AAIV,aAAOD,QAAP;AACD;;AAED,WACE,oBAAC,4CAAD;AAAkB,MAAA,qBAAqB,EAAEP,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,QADH,CADF;AAKD,GAdH,CADF;AAkBD","sourcesContent":["import * as React from 'react';\nimport {\n  SafeAreaProvider,\n  SafeAreaConsumer,\n  initialWindowSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport {\n  getStatusBarHeight,\n  getBottomSpace,\n} from 'react-native-iphone-x-helper';\n\n// The provider component for safe area initializes asynchornously\n// Until the insets are available, there'll be blank screen\n// To avoid the blank screen, we specify some initial values\nexport const initialSafeAreaInsets = {\n  // Approximate values which are good enough for most cases\n  top: getStatusBarHeight(true),\n  bottom: getBottomSpace(),\n  right: 0,\n  left: 0,\n  // If we are on a newer version of the library, we can get the correct window insets\n  // The component might not be filling the window, but this is good enough for most cases\n  ...initialWindowSafeAreaInsets,\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default function SafeAreaProviderCompat({ children }: Props) {\n  return (\n    <SafeAreaConsumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return children;\n        }\n\n        return (\n          <SafeAreaProvider initialSafeAreaInsets={initialSafeAreaInsets}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaConsumer>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}