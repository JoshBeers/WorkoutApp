{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\arack\\\\OneDrive\\\\Desktop\\\\WorkoutApp\\\\Screens\\\\CreateNewExerciseScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar CreateNewExerciseScreen = function (_React$Component) {\n  (0, _inherits2.default)(CreateNewExerciseScreen, _React$Component);\n\n  var _super = _createSuper(CreateNewExerciseScreen);\n\n  function CreateNewExerciseScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CreateNewExerciseScreen);\n    _this = _super.call(this);\n    _this.state = {\n      exerciseName: '',\n      exerciseDescription: '',\n      isWeighed: false,\n      isCardio: false,\n      isDone: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CreateNewExerciseScreen, [{\n    key: \"finish\",\n    value: function finish() {\n      var temp = new _Exercise.Exercise(0, this.state.exerciseName, this.state.exerciseDescription, this.state.isWeighed, this.state.isCardio);\n      console.log(temp);\n      (0, _Exercise.createNewExerciseFromExercise)(temp, function () {\n        (0, _Exercise.getAllExercises)(function (result) {\n          console.log(result);\n        });\n      });\n      this.setState({\n        isDone: true\n      });\n    }\n  }, {\n    key: \"modalClick\",\n    value: function modalClick() {\n      this.setState({\n        exerciseName: '',\n        exerciseDescription: '',\n        isWeighed: false,\n        isCardio: false,\n        isDone: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Modal, {\n        animationType: 'slide',\n        visible: this.state.isDone,\n        transparent: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.modalStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.modalText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, \"AWESOME!\"), _react.default.createElement(_reactNative.Image, {\n        source: require('../img/trophy.png'),\n        style: {\n          width: '50%',\n          height: '50%',\n          margin: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }), _react.default.createElement(_reactNative.Button, {\n        title: \"Return\",\n        color: _Colors.default.positive,\n        onPress: function onPress() {\n          return _this2.modalClick();\n        },\n        style: {\n          alignSelf: 'center',\n          marginTop: 20,\n          marginBottom: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, \"RETURN\"))))), _react.default.createElement(_reactNative.Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, \"Create A New Exercise\"), _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNativeElements.Card, {\n        containerStyle: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.textField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        placeholder: \"NAME\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            exerciseName: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.lgTextField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        placeholder: \"DESCRIPTION\",\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            exerciseDescription: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.checkRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.checkLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }\n      }, \"Does this use weights?\")), _react.default.createElement(_reactNative.View, {\n        style: styles.checkRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.checkLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }, \"Is this cardio?\")), _react.default.createElement(_reactNative.View, {\n        style: styles.buttonView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        title: \"Finish\",\n        color: _Colors.default.btn,\n        onPress: function onPress() {\n          return _this2.finish();\n        },\n        disabled: this.state.exerciseName.length === 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }\n      }, \"FINISH\"))))));\n    }\n  }]);\n  return CreateNewExerciseScreen;\n}(_react.default.Component);\n\nexports.default = CreateNewExerciseScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  titleText: {\n    color: _Colors.default.text,\n    fontSize: 27,\n    marginTop: 30\n  },\n  screen: {\n    backgroundColor: _Colors.default.background,\n    flex: 1,\n    alignItems: 'center'\n  },\n  buttonView: {\n    width: 100,\n    marginTop: 20,\n    alignSelf: 'center'\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: _Colors.default.text\n  },\n  card: {\n    marginTop: 20,\n    width: 370,\n    height: 450,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center',\n    alignItems: 'center'\n  },\n  textField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 40,\n    width: 300,\n    marginTop: 20,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  },\n  lgTextField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 200,\n    width: 300,\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  },\n  checkRow: {\n    flexDirection: 'row',\n    margin: 5\n  },\n  checkLabel: {\n    color: _Colors.default.text,\n    marginTop: 7\n  },\n  modalStyle: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.card,\n    alignItems: 'center',\n    marginTop: 100,\n    height: 400\n  },\n  modalText: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginTop: 40,\n    color: _Colors.default.text\n  }\n});","map":{"version":3,"sources":["C:/Users/arack/OneDrive/Desktop/WorkoutApp/Screens/CreateNewExerciseScreen.js"],"names":["CreateNewExerciseScreen","state","exerciseName","exerciseDescription","isWeighed","isCardio","isDone","temp","Exercise","console","log","result","setState","styles","screen","modalStyle","modalText","require","width","height","margin","Colors","positive","modalClick","alignSelf","marginTop","marginBottom","buttonText","titleText","card","textField","text","lgTextField","checkRow","checkLabel","buttonView","btn","finish","length","React","Component","StyleSheet","create","color","fontSize","backgroundColor","background","flex","alignItems","fontWeight","borderWidth","textFieldBackground","borderColor","flexDirection"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React from 'react';\r\nimport {StyleSheet, TextInput, Text, View, Button, FlatList, Modal, Image} from 'react-native';\r\nimport {Card} from 'react-native-elements';\r\nimport Colors from \"../Themes/Colors\";\r\nimport {Exercise, createNewExerciseFromExercise, getAllExercises} from \"../Classes/Exercise\";\r\n\r\nexport default class CreateNewExerciseScreen extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            exerciseName: '',\r\n            exerciseDescription: '',\r\n            isWeighed: false,\r\n            isCardio: false,\r\n            isDone: false,\r\n        }\r\n    }\r\n\r\n    finish(){\r\n        let temp = new Exercise(0, this.state.exerciseName, this.state.exerciseDescription, this.state.isWeighed, this.state.isCardio);\r\n        console.log(temp);\r\n        createNewExerciseFromExercise(temp, function () {\r\n            getAllExercises(function (result){\r\n                console.log(result)\r\n            })\r\n        });\r\n        this.setState({\r\n            isDone: true,\r\n        })\r\n\r\n    }\r\n\r\n    modalClick(){\r\n        this.setState({\r\n            exerciseName: '',\r\n            exerciseDescription: '',\r\n            isWeighed: false,\r\n            isCardio: false,\r\n            isDone: false,\r\n        })\r\n    }\r\n\r\n    /*\r\n    <Checkbox\r\n                            disabled={false}\r\n                            value={this.state.isWeighed}\r\n                            onValueChange={(val) => this.setState({isWeighed: val})}\r\n                            tintColors={this.state.isWeighted ? Colors.positive : Colors.negative}/>\r\n\r\n\r\n    <Checkbox\r\n                                disabled={false}\r\n                                value={this.state.isCardio}\r\n                                onValueChange={(val) => this.setState({isCardio: val})}\r\n                                tintColors={this.state.isCardio ? Colors.positive : Colors.negative}\r\n                                />\r\n\r\n\r\n     */\r\n    render(){\r\n        return(\r\n            <View style={styles.screen}>\r\n                <View>\r\n                    <Modal\r\n                        animationType={'slide'}\r\n                        visible={this.state.isDone}\r\n                        transparent={true}\r\n                    >\r\n                        <View style = {styles.modalStyle}>\r\n                            <Text style={styles.modalText}>AWESOME!</Text>\r\n                            <Image source={require('../img/trophy.png')}\r\n                                   style={{\r\n                                       width: '50%',\r\n                                       height: '50%',\r\n                                       margin: 50,\r\n                                   }}/>\r\n                            <Button\r\n                                title=\"Return\"\r\n                                color={Colors.positive}\r\n                                onPress={() => this.modalClick()}\r\n                                style={{\r\n                                    alignSelf: 'center',\r\n                                    marginTop: 20,\r\n                                    marginBottom: 40,\r\n                                }}>\r\n                                <Text style={styles.buttonText}>RETURN</Text>\r\n                            </Button>\r\n                        </View>\r\n                    </Modal>\r\n                </View>\r\n                <Text style={styles.titleText}>Create A New Exercise</Text>\r\n                <View >\r\n                    <Card containerStyle={styles.card}>\r\n                        <View style={styles.textField}>\r\n                            <TextInput\r\n                                placeholder=\"NAME\"\r\n                                onChangeText={(text) => this.setState({exerciseName: text})}\r\n                            />\r\n                        </View>\r\n                        <View style={styles.lgTextField}>\r\n                            <TextInput\r\n                                placeholder=\"DESCRIPTION\"\r\n                                multiline={true}\r\n                                onChangeText={(text) => this.setState({exerciseDescription: text})}\r\n                            />\r\n                        </View>\r\n                        <View style={styles.checkRow}>\r\n                            <Text style ={styles.checkLabel}>Does this use weights?</Text>\r\n                        </View>\r\n                        <View style={styles.checkRow}>\r\n\r\n                            <Text style ={styles.checkLabel}>Is this cardio?</Text>\r\n                        </View>\r\n                        <View style={styles.buttonView}>\r\n                            <Button\r\n                                title='Finish'\r\n                                color={Colors.btn}\r\n                                onPress={() => this.finish()}\r\n                                disabled={this.state.exerciseName.length === 0}>\r\n                                <Text style={styles.buttonText}>FINISH</Text>\r\n                            </Button>\r\n                        </View>\r\n                    </Card>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    titleText: {\r\n        color: Colors.text,\r\n        fontSize: 27,\r\n        marginTop: 30,\r\n    },\r\n    screen: {\r\n        backgroundColor: Colors.background,\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    buttonView: {\r\n        width: 100,\r\n        marginTop: 20,\r\n        alignSelf: 'center'\r\n    },\r\n    buttonText: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n        color: Colors.text,\r\n    },\r\n    card: {\r\n        marginTop: 20,\r\n        width: 370,\r\n        height: 450,\r\n        backgroundColor: Colors.card,\r\n        borderWidth: 0,\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    textField: {\r\n        alignSelf: 'center',\r\n        backgroundColor: Colors.textFieldBackground,\r\n        color: Colors.card,\r\n        height: 40,\r\n        width: 300,\r\n        marginTop: 20,\r\n        marginBottom: 5,\r\n        borderWidth: 2,\r\n        borderColor: Colors.card,\r\n    },\r\n    lgTextField: {\r\n        alignSelf: 'center',\r\n        backgroundColor: Colors.textFieldBackground,\r\n        color: Colors.card,\r\n        height: 200,\r\n        width: 300,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        borderWidth: 2,\r\n        borderColor: Colors.card,\r\n    },\r\n    checkRow:{\r\n        flexDirection: 'row',\r\n        margin: 5\r\n    },\r\n    checkLabel: {\r\n        color: Colors.text,\r\n        marginTop: 7,\r\n    },\r\n    modalStyle: {\r\n        alignSelf: 'center',\r\n        backgroundColor: Colors.card,\r\n        alignItems: 'center',\r\n        marginTop: 100,\r\n        height: 400,\r\n    },\r\n    modalText: {\r\n        fontWeight: 'bold',\r\n        fontSize: 30,\r\n        marginTop: 40,\r\n        color: Colors.text,\r\n    },\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"script"}