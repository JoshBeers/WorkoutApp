{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runSQLTest = runSQLTest;\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _StartUpSQL = require(\"../StartUpSQL\");\n\nvar _Routine = require(\"../Classes/Routine\");\n\nvar _Workout = require(\"../Classes/Workout\");\n\nfunction testGetAllRoutinesWithOutExercises(callback) {\n  (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n    if (result.length == 1) {\n      console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\", \"testGetAllRoutinesWithOutExercises method passed\");\n    } else {\n      console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\", \"testGetAllRoutinesWithOutExercises method failed resulting array this should match the dummy data array that is 1 long = \" + result.length);\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testGetExercisesFromRoutine1(callback) {\n  (0, _Exercise.getExerciseFromRoutine)(1, function (result) {\n    if (result.length == 3) {\n      console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\", \"testGetExercisesFromRoutine1 method passed\");\n    } else {\n      console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\", \"testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \" + result.length);\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testAddExerciseToRoutine(callback) {\n  var data = new _Exercise.ExerciseWithinRoutine(4, 1, 5);\n  (0, _Exercise.addExerciseToRoutine)(1, data, function () {\n    (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n      if (result.length == 4) {\n        console.log(\"sqllog_test_AddExerciseToRoutine_ressult\", \"testAddExerciseToRoutine method passed\");\n      } else {\n        console.log(\"sqllog_test_AddExerciseToRoutine_ressult\", \"testAddExerciseToRoutine method failed the new data doesnt match the added data\");\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testDeleteExerciseFromRoutine(callback) {\n  (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n    var temp = result.length;\n    (0, _Exercise.deleteExerciseFromRoutine)(result[1], function () {\n      (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n        if (result.length == temp - 1) {\n          console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\", \"testDeleteExerciseFromRoutine method passed\");\n        } else {\n          console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\", \"testDeleteExerciseFromRoutine method failed length init = \" + temp + \" after call = \" + result.length + \" should be one less than init\");\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testGetAllExercises(callback) {\n  (0, _Exercise.getAllExercises)(function (result) {\n    if (result.length == 3) {\n      console.log(\"sqllog_test_testGetAllExercises_results\", \"testGetAllExercises method passed\");\n    } else {\n      console.log(\"sqllog_test_testGetAllExercises_results\", \"testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \" + result.length);\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testCreateNewExerciseFromExercise(callback) {\n  (0, _Exercise.createNewExerciseFromExercise)(new _Exercise.Exercise(1, \"test exercise\", \"this is a test val\", false), function () {\n    (0, _Exercise.getAllExercises)(function (result) {\n      if (result[result.length - 1].name = \"test exercise\") {\n        console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\", \"CreateNewExerciseFromExercise method passed\");\n      } else {\n        console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\", \"CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \" + result.length);\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testDeleteExerciseById(callback) {\n  var temp = null;\n  (0, _Exercise.getAllExercises)(function (result) {\n    temp = result.length;\n    (0, _Exercise.deleteExerciseById)(result.length - 1, function () {\n      (0, _Exercise.getAllExercises)(function (result) {\n        if (result.length == temp - 1) {\n          console.log(\"sqllog_test_DeleteExerciseById_results\", \"testDeleteExerciseById method passed\");\n        } else {\n          console.log(\"sqllog_test_DeleteExerciseById_results\", \"testDeleteExerciseById method failed length init = \" + temp + \" after call = \" + result.length + \" should be one less than init\");\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testGetListOfWorkoutsWithoutExercises(callback) {\n  (0, _Workout.getListOfWorkoutsWithoutExercises)(function (result) {\n    console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises_result\", result);\n\n    if (result.length == 2) {\n      console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results\", \"testGetListOfWorkoutsWithoutExercises method passed length test\");\n    } else {\n      console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results\", \"testGetListOfWorkoutsWithoutExercises method failed length should be 1 is = \" + result.length);\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testGetAllCompleteExerciseBySpecificExerciseID(callback) {\n  console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID\", \"the testGetAllCompleteExerciseBySpecificExerciseID test has begun\");\n  (0, _Exercise.getAllCompleteExerciseBySpecificExerciseID)(1, function (result) {\n    console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result\", result);\n\n    if (result.length == 2) {\n      console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result\", \"testGetAllCompleteExerciseBySpecificExerciseID method passed length test\");\n    } else {\n      console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result\", \"testGetAllCompleteExerciseBySpecificExerciseID method failed length should be 2 is = \" + result.length);\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction exerciseTests(callback) {\n  testGetAllExercises(function () {\n    testCreateNewExerciseFromExercise(function () {\n      testDeleteExerciseById(function () {\n        callback();\n      });\n    });\n  });\n}\n\nfunction routineTests(callback) {\n  testGetAllRoutinesWithOutExercises(function () {\n    testGetExercisesFromRoutine1(function () {\n      testAddExerciseToRoutine(function () {\n        testDeleteExerciseFromRoutine(callback);\n      });\n    });\n  });\n}\n\nfunction completeWorkoutsTest(callback) {\n  testGetListOfWorkoutsWithoutExercises(callback);\n}\n\nfunction completeExerciseTest(callback) {\n  testGetAllCompleteExerciseBySpecificExerciseID(callback);\n}\n\nfunction runSQLTest() {\n  (0, _StartUpSQL.createDummyData)(function () {\n    exerciseTests(function () {\n      routineTests(function () {\n        completeWorkoutsTest(function () {\n          completeExerciseTest();\n        });\n      });\n    });\n  });\n}","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/test/SQLTesting.js"],"names":["testGetAllRoutinesWithOutExercises","callback","result","length","console","log","testGetExercisesFromRoutine1","testAddExerciseToRoutine","data","ExerciseWithinRoutine","testDeleteExerciseFromRoutine","temp","testGetAllExercises","testCreateNewExerciseFromExercise","Exercise","name","testDeleteExerciseById","testGetListOfWorkoutsWithoutExercises","testGetAllCompleteExerciseBySpecificExerciseID","exerciseTests","routineTests","completeWorkoutsTest","completeExerciseTest","runSQLTest"],"mappings":"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","sourcesContent":["\r\n\r\nimport {\r\n    addExerciseToRoutine,\r\n    createNewExerciseFromExercise,\r\n    deleteExerciseById, deleteExerciseFromRoutine,\r\n    Exercise, ExerciseWithinRoutine, getAllCompleteExerciseBySpecificExerciseID,\r\n    getAllExercises, getAllExercisesWithinRoutines,\r\n    getExerciseFromRoutine\r\n} from \"../Classes/Exercise\";\r\nimport {createDummyData} from \"../StartUpSQL\";\r\nimport {getAllRoutinesWithOutExercises} from \"../Classes/Routine\";\r\nimport {CompletedWorkout, getListOfWorkoutsWithoutExercises} from \"../Classes/Workout\";\r\n\r\n/*\r\nall of the test for routines\r\n\r\n */\r\n\r\n\r\nfunction testGetAllRoutinesWithOutExercises(callback){\r\n    //console.log(\"sqllog_test_GetAllRoutinesWithOutExercises\",\"the test has begun\")\r\n    getAllRoutinesWithOutExercises(function(result){\r\n        //console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\", result)\r\n\r\n        if(result.length == 1){\r\n            console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\",\"testGetAllRoutinesWithOutExercises method passed\")\r\n        }else{\r\n            console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\",\"testGetAllRoutinesWithOutExercises method failed resulting array this should match the dummy data array that is 1 long = \"+result.length)\r\n        }\r\n\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction testGetExercisesFromRoutine1(callback){\r\n    //console.log(\"sqllog_test_gettingExercisesFromRoutine1\",\"the test has begun\")\r\n    getExerciseFromRoutine(1, function(result) {\r\n        //console.log(\"test_gettingExercisesFromRoutine1_result\",result)\r\n\r\n        if(result.length == 3){\r\n            console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\",\"testGetExercisesFromRoutine1 method passed\")\r\n        }else{\r\n            console.log(\"sqllog_test_gettingExercisesFromRoutine1_result\",\"testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \"+result.length)\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testAddExerciseToRoutine(callback){\r\n    //console.log(\"sqllog_test_AddExerciseToRoutine\",\"the test has begun\")\r\n    let data = new ExerciseWithinRoutine(4,1,5)\r\n        addExerciseToRoutine(1,data, function(){\r\n         //   console.log(\"sqllog_test_AddExerciseToRoutine\",\"add exercise\")\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_AddExerciseToRoutine_ressult\",result)\r\n\r\n\r\n                if(result.length == 4){\r\n                    console.log(\"sqllog_test_AddExerciseToRoutine_ressult\",\"testAddExerciseToRoutine method passed\")\r\n                }else{\r\n                    console.log(\"sqllog_test_AddExerciseToRoutine_ressult\",\"testAddExerciseToRoutine method failed the new data doesnt match the added data\")\r\n                }\r\n\r\n\r\n\r\n\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n}\r\n\r\n\r\nfunction testDeleteExerciseFromRoutine(callback){\r\n    //console.log(\"sqllog_test_DeleteExerciseFromRoutine\",\"the test has begun\")\r\n    getAllExercisesWithinRoutines(function (result){\r\n        let temp = result.length\r\n        //console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\",result)\r\n        deleteExerciseFromRoutine(result[1],function (){\r\n\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\",result)\r\n                if(result.length == temp-1){\r\n                    console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\",\"testDeleteExerciseFromRoutine method passed\")\r\n                }else{\r\n                    console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\",\"testDeleteExerciseFromRoutine method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\")\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\n/*\r\nfunction testCreateNewExerciseFromExercise(callback){\r\n    //console.log(\"sqllog_test_CreateNewExerciseFromExercise\",\"the testGetAllExercises test has begun\")\r\n    createNewExerciseFromExercise(new Exercise(1,\"test exercise\",\"this is a test val\", false), function (){\r\n        getAllExercises(function (result){\r\n            console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",result[result.length-1])\r\n\r\n            if(result[result.length-1].name = \"test exercise\"){\r\n                console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",\"CreateNewExerciseFromExercise method passed\")\r\n            }else{\r\n                console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",\"CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \"+result.length)\r\n            }\r\n\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n        })\r\n    })\r\n}\r\n */\r\n\r\n\r\n/*\r\nall the test for exercises\r\n\r\n */\r\n\r\nfunction testGetAllExercises(callback){\r\n    //console.log(\"sqllog_test_GetAllExercises\",\"the testGetAllExercises test has begun\")\r\n    getAllExercises(function (result){\r\n        //console.log(\"sqllog_test_testGetAllExercises_results\",result)\r\n\r\n        if(result.length == 3){\r\n            console.log(\"sqllog_test_testGetAllExercises_results\",\"testGetAllExercises method passed\")\r\n        }else{\r\n            console.log(\"sqllog_test_testGetAllExercises_results\",\"testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \"+result.length)\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testCreateNewExerciseFromExercise(callback){\r\n    //console.log(\"sqllog_test_CreateNewExerciseFromExercise\",\"the testGetAllExercises test has begun\")\r\n    createNewExerciseFromExercise(new Exercise(1,\"test exercise\",\"this is a test val\", false), function (){\r\n        getAllExercises(function (result){\r\n            //console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",result[result.length-1])\r\n\r\n            if(result[result.length-1].name = \"test exercise\"){\r\n                console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",\"CreateNewExerciseFromExercise method passed\")\r\n            }else{\r\n                console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",\"CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \"+result.length)\r\n            }\r\n\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n\r\nfunction testDeleteExerciseById(callback){\r\n   ///console.log(\"sqllog_test_DeleteExerciseById\",\"the testDeleteExerciseById test has begun\")\r\n    let temp = null\r\n\r\n    getAllExercises(function (result){\r\n        temp = result.length\r\n        deleteExerciseById(result.length-1,function (){\r\n\r\n            getAllExercises(function (result){\r\n\r\n                if(result.length == temp-1){\r\n                    console.log(\"sqllog_test_DeleteExerciseById_results\",\"testDeleteExerciseById method passed\")\r\n                }else{\r\n                    console.log(\"sqllog_test_DeleteExerciseById_results\",\"testDeleteExerciseById method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\")\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\ncompleted workout test\r\n\r\n */\r\n\r\nfunction testGetListOfWorkoutsWithoutExercises(callback){\r\n    //console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises\",\"the testGetListOfWorkoutsWithoutExercises test has begun\")\r\n    getListOfWorkoutsWithoutExercises(function (result){\r\n        console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises_result\",result)\r\n\r\n        if(result.length == 2){\r\n            console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results\",\"testGetListOfWorkoutsWithoutExercises method passed length test\")\r\n        }else{\r\n            console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results\",\"testGetListOfWorkoutsWithoutExercises method failed length should be 1 is = \"+ result.length)\r\n        }\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\n\r\n/*\r\ncomplete exercise test\r\n */\r\n\r\nfunction testGetAllCompleteExerciseBySpecificExerciseID(callback){\r\n    console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID\",\"the testGetAllCompleteExerciseBySpecificExerciseID test has begun\")\r\n\r\n    getAllCompleteExerciseBySpecificExerciseID(1 , function (result) {\r\n        console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result\",result)\r\n\r\n\r\n        if(result.length == 2){\r\n            console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result\",\"testGetAllCompleteExerciseBySpecificExerciseID method passed length test\")\r\n        }else{\r\n            console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result\",\"testGetAllCompleteExerciseBySpecificExerciseID method failed length should be 2 is = \"+ result.length)\r\n        }\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n\r\n    })\r\n}\r\n\r\n\r\n//actuall testing\r\n\r\nfunction exerciseTests(callback){\r\n    testGetAllExercises(function (){\r\n        testCreateNewExerciseFromExercise( function (){\r\n            testDeleteExerciseById(function (){\r\n                callback()\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction routineTests(callback){\r\n    testGetAllRoutinesWithOutExercises(function(){\r\n        testGetExercisesFromRoutine1(function () {\r\n            testAddExerciseToRoutine(function (){\r\n                testDeleteExerciseFromRoutine(callback)\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction completeWorkoutsTest(callback){\r\n    testGetListOfWorkoutsWithoutExercises(callback)\r\n}\r\n\r\nfunction completeExerciseTest(callback) {\r\n    testGetAllCompleteExerciseBySpecificExerciseID(callback)\r\n}\r\n\r\n\r\n\r\nexport function runSQLTest(){\r\n    createDummyData(function (){\r\n        exerciseTests(function (){\r\n            routineTests(function (){\r\n                completeWorkoutsTest(function (){\r\n                    completeExerciseTest()\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}