{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar SQLite = _interopRequireWildcard(require(\"expo-sqlite\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _Styles = require(\"../Themes/Styles\");\n\nvar _Routine = require(\"../Classes/Routine\");\n\nvar navigation = _interopRequireWildcard(require(\"react-navigation\"));\n\nvar _ViewAndEditSingleRoutine = _interopRequireDefault(require(\"./ViewAndEditSingleRoutine\"));\n\nvar _createNativeStackNavigator = _interopRequireDefault(require(\"react-native-screens/src/native-stack/navigators/createNativeStackNavigator\"));\n\nvar _jsxFileName = \"D:\\\\school\\\\softdev projects\\\\WorkoutApp\\\\Screens\\\\ChooseAndViewAllRoutinesScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ChooseAndViewAllRoutinesScreen = function (_React$Component) {\n  (0, _inherits2.default)(ChooseAndViewAllRoutinesScreen, _React$Component);\n\n  var _super = _createSuper(ChooseAndViewAllRoutinesScreen);\n\n  function ChooseAndViewAllRoutinesScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ChooseAndViewAllRoutinesScreen);\n    _this = _super.call(this);\n    _this.state = {\n      routineList: [],\n      loadingTrue: true\n    };\n    (0, _Routine.getAllRoutinesWithOutExercises)();\n    console.log('test');\n    return _this;\n  }\n\n  (0, _createClass2.default)(ChooseAndViewAllRoutinesScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('test');\n      (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n        _this2.setState({\n          routineList: result\n        }, function () {\n          console.log(this.state.routineList);\n        });\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(data) {\n      var _this3 = this;\n\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.seeDetails(data.item.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeElements.Card, {\n        containerStyle: _Styles.listStyle.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, data.item.name)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          routineList = _this$state.routineList,\n          loading = _this$state.loading;\n\n      if (!loading) {\n        return _react.default.createElement(_reactNative.View, {\n          style: _Styles.listStyle.screen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _Styles.listStyle.titleText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }\n        }, \"Saved Routines\"), _react.default.createElement(_reactNative.FlatList, {\n          data: this.state.routineList,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _react.default.createElement(_reactNative.TouchableOpacity, {\n              onPress: function onPress() {\n                return _this4.props.navigation.navigate('SingleRoutineScreen', {\n                  routineID: item.id\n                });\n              },\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }\n            }, _react.default.createElement(_reactNativeElements.Card, {\n              containerStyle: styles.card,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }\n            }, _react.default.createElement(_reactNative.Text, {\n              style: styles.text,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }\n            }, item.name)));\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return _react.default.createElement(_reactNative.ActivityIndicator, {\n          size: \"large\",\n          color: _Colors.default.btn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n  return ChooseAndViewAllRoutinesScreen;\n}(_react.default.Component);\n\nexports.default = ChooseAndViewAllRoutinesScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  card: {\n    marginTop: 25,\n    marginBottom: 25,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center',\n    width: 370,\n    height: 75\n  },\n  text: {\n    color: _Colors.default.text,\n    fontSize: 20,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/Screens/ChooseAndViewAllRoutinesScreen.js"],"names":["ChooseAndViewAllRoutinesScreen","state","routineList","loadingTrue","console","log","result","setState","data","seeDetails","item","id","listStyle","name","loading","screen","titleText","props","navigation","navigate","routineID","styles","card","text","toString","Colors","btn","React","Component","StyleSheet","create","marginTop","marginBottom","backgroundColor","borderWidth","alignSelf","width","height","color","fontSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport {Card} from 'react-native-elements';\r\nimport Colors from '../Themes/Colors';\r\nimport {listStyle} from '../Themes/Styles';\r\nimport {getAllRoutinesWithOutExercises} from '../Classes/Routine';\r\nimport * as navigation from 'react-navigation';\r\nimport ViewAndEditSingleRoutine from './ViewAndEditSingleRoutine';\r\nimport NativeStackNavigator from 'react-native-screens/src/native-stack/navigators/createNativeStackNavigator';\r\n\r\nexport default class ChooseAndViewAllRoutinesScreen extends React.Component {\r\n  state = {\r\n    routineList: [],\r\n    // loading state where when data retrieve returns data\r\n    loadingTrue: true,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    getAllRoutinesWithOutExercises();\r\n    console.log('test');\r\n  }\r\n\r\n  //method returns a list of routines\r\n  //has not been tested\r\n  componentDidMount() {\r\n    console.log('test');\r\n    getAllRoutinesWithOutExercises((result) => {\r\n      this.setState(\r\n        {\r\n          routineList: result,\r\n        },\r\n        function () {\r\n          console.log(this.state.routineList);\r\n        },\r\n      );\r\n    });\r\n  }\r\n\r\n  // callback for the flatlist for rendering each item, and pass data as argument\r\n  renderItem(data) {\r\n    return (\r\n      <TouchableOpacity onPress={() => this.seeDetails(data.item.id)}>\r\n        <Card containerStyle={listStyle.item}>\r\n          <Text>{data.item.name}</Text>\r\n        </Card>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {routineList, loading} = this.state;\r\n\r\n    if (!loading) {\r\n      return (\r\n        <View style={listStyle.screen}>\r\n          <Text style={listStyle.titleText}>Saved Routines</Text>\r\n          <FlatList\r\n              data={this.state.routineList}\r\n              renderItem={({item}) => (\r\n                  <TouchableOpacity onPress= {() =>  this.props.navigation.navigate('SingleRoutineScreen',{\r\n                      routineID: item.id,\r\n                  })}>\r\n                      <Card containerStyle={styles.card}>\r\n                        <Text style={styles.text}>{item.name}</Text>\r\n                      </Card>\r\n                  </TouchableOpacity>\r\n              )}\r\n              keyExtractor={item => item.id.toString()}\r\n          />\r\n        </View>\r\n      );\r\n    } else {\r\n      return <ActivityIndicator size=\"large\" color={Colors.btn} />;\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    backgroundColor: Colors.card,\r\n    borderWidth: 0,\r\n    alignSelf: 'center',\r\n    width: 370,\r\n    height: 75,\r\n  },\r\n  text: {\r\n    color: Colors.text,\r\n    fontSize: 20,\r\n    marginTop: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}