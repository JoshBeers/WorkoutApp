{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar SQLite = _interopRequireWildcard(require(\"expo-sqlite\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _Routine = require(\"../Classes/Routine\");\n\nvar navigation = _interopRequireWildcard(require(\"react-navigation\"));\n\nvar _ViewAndEditSingleRoutine = _interopRequireDefault(require(\"./ViewAndEditSingleRoutine\"));\n\nvar _createNativeStackNavigator = _interopRequireDefault(require(\"react-native-screens/src/native-stack/navigators/createNativeStackNavigator\"));\n\nvar _jsxFileName = \"D:\\\\school\\\\softdev projects\\\\WorkoutApp\\\\Screens\\\\ChooseAndViewAllRoutinesScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ChooseAndViewAllRoutinesScreen = function (_React$Component) {\n  (0, _inherits2.default)(ChooseAndViewAllRoutinesScreen, _React$Component);\n\n  var _super = _createSuper(ChooseAndViewAllRoutinesScreen);\n\n  function ChooseAndViewAllRoutinesScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ChooseAndViewAllRoutinesScreen);\n    _this = _super.call(this);\n    _this.state = {\n      routineList: [],\n      loadingTrue: false\n    };\n    console.log('teasdasdast');\n    return _this;\n  }\n\n  (0, _createClass2.default)(ChooseAndViewAllRoutinesScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('as');\n      this.getListOfRoutines();\n    }\n  }, {\n    key: \"getListOfRoutines\",\n    value: function getListOfRoutines() {\n      var _this2 = this;\n\n      (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n        _this2.setState({\n          routineList: result,\n          loadingTrue: false\n        }, function () {\n          console.log(this.state.routineList);\n        });\n      });\n    }\n  }, {\n    key: \"deleteRoutine\",\n    value: function deleteRoutine(routine) {\n      var _this3 = this;\n\n      console.log(routine.id);\n      (0, _Routine.deleteRoutine)(routine, function (results) {\n        console.log(results);\n\n        _this3.getListOfRoutines();\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(data) {\n      var _this4 = this;\n\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _this4.seeDetails(data.item.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeElements.Card, {\n        containerStyle: styles.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, data.item.name)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      if (!this.state.loadingTrue) {\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.screen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.titleText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }\n        }, \"Saved Routines\"), _react.default.createElement(_reactNative.FlatList, {\n          data: this.state.routineList,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _react.default.createElement(_reactNative.View, {\n              style: {\n                flexDirection: 'row'\n              },\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }\n            }, _react.default.createElement(_reactNative.TouchableOpacity, {\n              onPress: function onPress() {\n                return _this5.props.navigation.navigate('SingleRoutineScreen', {\n                  routineID: item.id\n                });\n              },\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }\n            }, _react.default.createElement(_reactNativeElements.Card, {\n              containerStyle: styles.card,\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }\n            }, _react.default.createElement(_reactNative.Text, {\n              style: styles.text,\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 27\n              }\n            }, item.name))), _react.default.createElement(_reactNative.View, {\n              style: styles.dButton,\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 23\n              }\n            }, _react.default.createElement(_reactNative.Button, {\n              title: \"Delete\",\n              color: _Colors.default.btn,\n              onPress: function onPress() {\n                return _this5.deleteRoutine(item);\n              },\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }\n            }, _react.default.createElement(_reactNative.Text, {\n              style: styles.buttonText,\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 27\n              }\n            }, \"Delete\"))));\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        return _react.default.createElement(_reactNative.ActivityIndicator, {\n          size: \"large\",\n          color: _Colors.default.btn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n  return ChooseAndViewAllRoutinesScreen;\n}(_react.default.Component);\n\nexports.default = ChooseAndViewAllRoutinesScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginVertical: 25,\n    marginHorizontal: 25\n  },\n  screen: {\n    backgroundColor: _Colors.default.background,\n    flex: 1,\n    alignItems: 'center'\n  },\n  titleText: {\n    color: _Colors.default.text,\n    fontSize: 27,\n    marginTop: 30\n  },\n  card: {\n    marginTop: 25,\n    marginBottom: 25,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center',\n    width: 275,\n    height: 75\n  },\n  text: {\n    color: _Colors.default.text,\n    fontSize: 20,\n    marginTop: 10\n  },\n  item: {\n    backgroundColor: _Colors.default.card,\n    padding: 35,\n    marginVertical: 20,\n    marginHorizontal: 16\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    fontSize: 8,\n    color: _Colors.default.text\n  },\n  dButton: {\n    width: 69,\n    marginTop: 40\n  }\n});","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/Screens/ChooseAndViewAllRoutinesScreen.js"],"names":["ChooseAndViewAllRoutinesScreen","state","routineList","loadingTrue","console","log","getListOfRoutines","result","setState","routine","id","results","data","seeDetails","item","styles","name","screen","titleText","flexDirection","props","navigation","navigate","routineID","card","text","dButton","Colors","btn","deleteRoutine","buttonText","toString","React","Component","StyleSheet","create","container","marginVertical","marginHorizontal","backgroundColor","background","flex","alignItems","color","fontSize","marginTop","marginBottom","borderWidth","alignSelf","width","height","padding","fontWeight"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React, {Component} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Button,\r\n} from 'react-native';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport {Card} from 'react-native-elements';\r\nimport Colors from '../Themes/Colors';\r\nimport {deleteRoutine, getAllRoutinesWithOutExercises} from '../Classes/Routine';\r\nimport * as navigation from 'react-navigation';\r\nimport ViewAndEditSingleRoutine from './ViewAndEditSingleRoutine';\r\nimport NativeStackNavigator from 'react-native-screens/src/native-stack/navigators/createNativeStackNavigator';\r\n\r\nexport default class ChooseAndViewAllRoutinesScreen extends React.Component {\r\n\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      routineList: [],\r\n      // loading state where when data retrieve returns data\r\n      loadingTrue: false,\r\n    };\r\n    console.log('teasdasdast');\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('as');\r\n    this.getListOfRoutines()\r\n  }\r\n\r\n  getListOfRoutines(){\r\n    // console.log('test');\r\n    getAllRoutinesWithOutExercises((result) => {\r\n      this.setState(\r\n          {\r\n            routineList: result,\r\n            loadingTrue: false\r\n          },\r\n          function () {\r\n            console.log(this.state.routineList);\r\n          },\r\n      );\r\n    });\r\n  }\r\n\r\n  deleteRoutine(routine){\r\n    console.log(routine.id);\r\n    deleteRoutine(routine, (results) =>{\r\n      console.log(results);\r\n      this.getListOfRoutines();\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n  // callback for the flatlist for rendering each item, and pass data as argument\r\n  renderItem(data) {\r\n    return (\r\n        <TouchableOpacity onPress={() => this.seeDetails(data.item.id)}>\r\n          <Card containerStyle={styles.item}>\r\n            <Text>{data.item.name}</Text>\r\n          </Card>\r\n        </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loadingTrue) {\r\n      return (\r\n          <View style={styles.screen}>\r\n            <Text style={styles.titleText}>Saved Routines</Text>\r\n            <FlatList\r\n                data={this.state.routineList}\r\n                renderItem={({item}) => (\r\n                    <View style={{\r\n                      flexDirection: 'row',\r\n                    }}>\r\n                      <TouchableOpacity\r\n                          onPress={() =>\r\n                              this.props.navigation.navigate('SingleRoutineScreen', {\r\n                                routineID: item.id\r\n                              })\r\n                          }>\r\n                        <Card containerStyle={styles.card}>\r\n                          <Text style={styles.text}>{item.name}</Text>\r\n                        </Card>\r\n                      </TouchableOpacity>\r\n                      <View style={styles.dButton}>\r\n                        <Button\r\n                            title='Delete'\r\n                            color={Colors.btn}\r\n                            onPress={() => this.deleteRoutine(item)}>\r\n                          <Text style={styles.buttonText}>Delete</Text>\r\n                        </Button>\r\n                      </View>\r\n                    </View>\r\n                )}\r\n                keyExtractor={(item) => item.id.toString()}\r\n            />\r\n          </View>\r\n      );\r\n    } else {\r\n      return <ActivityIndicator size=\"large\" color={Colors.btn} />;\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 25,\r\n    marginHorizontal: 25,\r\n  },\r\n  screen: {\r\n    backgroundColor: Colors.background,\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  titleText: {\r\n    color: Colors.text,\r\n    fontSize: 27,\r\n    marginTop: 30,\r\n  },\r\n  card: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    backgroundColor: Colors.card,\r\n    borderWidth: 0,\r\n    alignSelf: 'center',\r\n    width: 275,\r\n    height: 75,\r\n  },\r\n  text: {\r\n    color: Colors.text,\r\n    fontSize: 20,\r\n    marginTop: 10,\r\n  },\r\n  item: {\r\n    backgroundColor: Colors.card,\r\n    padding: 35,\r\n    marginVertical: 20,\r\n    marginHorizontal: 16,\r\n  },\r\n  buttonText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 8,\r\n    color: Colors.text,\r\n  },\r\n  dButton: {\r\n    width: 69,\r\n    marginTop: 40,\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}