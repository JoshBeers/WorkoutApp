{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Badge;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _jsxFileName = \"D:\\\\Dell\\\\Documents\\\\SCHOOL SHIT\\\\FALL 2020\\\\Software Dev Project\\\\WorkoutApp\\\\node_modules\\\\@react-navigation\\\\bottom-tabs\\\\src\\\\views\\\\Badge.tsx\";\n\nfunction Badge(_ref) {\n  var _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? true : _ref$visible,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 18 : _ref$size,\n      children = _ref.children,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"visible\", \"size\", \"children\", \"style\"]);\n\n  var _React$useState = React.useState(function () {\n    return new _reactNative.Animated.Value(visible ? 1 : 0);\n  }),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n      opacity = _React$useState2[0];\n\n  var _React$useState3 = React.useState(visible ? true : false),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      rendered = _React$useState4[0],\n      setRendered = _React$useState4[1];\n\n  var theme = (0, _native.useTheme)();\n  React.useEffect(function () {\n    if (!rendered) {\n      return;\n    }\n\n    _reactNative.Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150,\n      useNativeDriver: true\n    }).start(function (_ref2) {\n      var finished = _ref2.finished;\n\n      if (finished && !visible) {\n        setRendered(false);\n      }\n    });\n  }, [opacity, rendered, visible]);\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  if (!visible && !rendered) {\n    return null;\n  }\n\n  var _ref3 = _reactNative.StyleSheet.flatten(style) || {},\n      _ref3$backgroundColor = _ref3.backgroundColor,\n      backgroundColor = _ref3$backgroundColor === void 0 ? theme.colors.notification : _ref3$backgroundColor,\n      restStyle = (0, _objectWithoutProperties2.default)(_ref3, [\"backgroundColor\"]);\n\n  var textColor = (0, _color.default)(backgroundColor).isLight() ? 'black' : 'white';\n  var borderRadius = size / 2;\n  var fontSize = Math.floor(size * 3 / 4);\n  return React.createElement(_reactNative.Animated.Text, (0, _extends2.default)({\n    numberOfLines: 1,\n    style: [{\n      opacity: opacity,\n      transform: [{\n        scale: opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1]\n        })\n      }],\n      backgroundColor: backgroundColor,\n      color: textColor,\n      fontSize: fontSize,\n      lineHeight: size - 1,\n      height: size,\n      minWidth: size,\n      borderRadius: borderRadius\n    }, styles.container, restStyle]\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }), children);\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["D:/Dell/Documents/SCHOOL SHIT/FALL 2020/Software Dev Project/WorkoutApp/node_modules/@react-navigation/bottom-tabs/src/views/Badge.tsx"],"names":["Badge","visible","size","children","style","rest","React","useState","Animated","Value","opacity","rendered","setRendered","theme","useEffect","timing","toValue","duration","useNativeDriver","start","finished","StyleSheet","flatten","backgroundColor","colors","notification","restStyle","textColor","isLight","borderRadius","fontSize","Math","floor","transform","scale","interpolate","inputRange","outputRange","color","lineHeight","height","minWidth","styles","container","create","alignSelf","textAlign","paddingHorizontal","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport { useTheme } from '@react-navigation/native';\n\ntype Props = {\n  /**\n   * Whether the badge is visible\n   */\n  visible: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  /**\n   * Style object for the tab bar container.\n   */\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function Badge({\n  visible = true,\n  size = 18,\n  children,\n  style,\n  ...rest\n}: Props) {\n  const [opacity] = React.useState(() => new Animated.Value(visible ? 1 : 0));\n  const [rendered, setRendered] = React.useState(visible ? true : false);\n\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (!rendered) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished && !visible) {\n        setRendered(false);\n      }\n    });\n  }, [opacity, rendered, visible]);\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  if (!visible && !rendered) {\n    return null;\n  }\n\n  // @ts-expect-error: backgroundColor definitely exists\n  const { backgroundColor = theme.colors.notification, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor = color(backgroundColor).isLight() ? 'black' : 'white';\n\n  const borderRadius = size / 2;\n  const fontSize = Math.floor((size * 3) / 4);\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          transform: [\n            {\n              scale: opacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0.5, 1],\n              }),\n            },\n          ],\n          backgroundColor,\n          color: textColor,\n          fontSize,\n          lineHeight: size - 1,\n          height: size,\n          minWidth: size,\n          borderRadius,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}