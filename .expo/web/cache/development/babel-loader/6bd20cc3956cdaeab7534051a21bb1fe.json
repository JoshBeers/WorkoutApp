{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkoutCard = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _Colors = _interopRequireDefault(require(\"../../Themes/Colors\"));\n\nvar _jsxFileName = \"D:\\\\Dell\\\\Documents\\\\SCHOOL SHIT\\\\FALL 2020\\\\Software Dev Project\\\\WorkoutApp\\\\Screens\\\\Components\\\\WorkoutCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WorkoutCard = function (_Component) {\n  (0, _inherits2.default)(WorkoutCard, _Component);\n\n  var _super = _createSuper(WorkoutCard);\n\n  function WorkoutCard(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, WorkoutCard);\n    _this = _super.call(this, props);\n    _this.state = {\n      id: '',\n      name: '',\n      isWeighted: false,\n      isCardio: false,\n      textInput: [],\n      inputData: [],\n      count: 1\n    };\n\n    _this.addInput = function () {\n      var textInput = _this.state.textInput;\n      var rep = 0;\n      var weight = 0;\n      var time = 0;\n      var setInfo = [];\n\n      if (_this.state.isWeighted && !_this.state.isCardio) {\n        textInput.push(_react.default.createElement(_reactNative.View, {\n          containerStyle: styles.textLine,\n          key: _this.state.count,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        }, _this.state.count)), _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"REP\",\n          onChangeText: function onChangeText(text) {\n            return rep = text;\n          },\n          keyboardType: \"number-pad\",\n          style: {\n            flex: 1\n          },\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"WEIGHT\",\n          onChangeText: function onChangeText(text) {\n            return weight = text;\n          },\n          keyboardType: \"number-pad\",\n          style: {\n            flex: 1\n          },\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }))));\n        setInfo.push({\n          'set': _this.state.count,\n          'rep': rep,\n          'weight': weight\n        });\n      } else if (!_this.state.isWeighted && !_this.state.isCardio) {\n        textInput.push(_react.default.createElement(_reactNative.View, {\n          containerStyle: styles.textLine,\n          key: _this.state.count,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }\n        }, _this.state.count)), _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"REP\",\n          onChangeText: function onChangeText(text) {\n            return rep = text;\n          },\n          keyboardType: \"number-pad\",\n          style: {\n            flex: 1\n          },\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }\n        }))));\n        setInfo.push({\n          'set': _this.state.count,\n          'rep': rep\n        });\n      } else {\n        textInput.push(_react.default.createElement(_reactNative.View, {\n          containerStyle: styles.textLine,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          key: _this.state.count,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }\n        }, _this.state.count)), _react.default.createElement(_reactNative.View, {\n          style: styles.textField,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.TextInput, {\n          placeholder: \"TIME\",\n          onChangeText: function onChangeText(text) {\n            return time = text;\n          },\n          keyboardType: \"number-pad\",\n          style: {\n            flex: 1\n          },\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }\n        }))));\n        setInfo.push({\n          'set': _this.state.count,\n          'time': time\n        });\n      }\n\n      _this.updateCount(1);\n\n      _this.setState({\n        textInput: textInput\n      });\n\n      _this.addToArray(setInfo, _this.state.count);\n    };\n\n    _this.addToArray = function (input, count) {\n      var array = _this.state.inputData;\n      var isThere = false;\n\n      if (array !== 0) {\n        array.forEach(function (aSet) {\n          if (aSet.set === count) {\n            if (aSet.containsKey('rep')) {\n              aSet.rep = input.rep;\n              aSet.weight = input.weight;\n            } else {\n              aSet.set = set;\n            }\n\n            isThere = true;\n          }\n        });\n      }\n\n      if (isThere) {\n        _this.setState({\n          inputData: array\n        });\n      } else {\n        array.push(input);\n\n        _this.setState({\n          inputData: array\n        });\n      }\n    };\n\n    _this.removeInput = function () {\n      var textInput = _this.state.textInput;\n      var inputData = _this.state.inputData;\n      textInput.pop();\n      inputData.pop();\n\n      _this.updateCount(-1);\n\n      _this.setState({\n        textInput: textInput,\n        inputData: inputData\n      });\n    };\n\n    _this.finish = function () {\n      _this.setState({\n        isDone: true\n      });\n\n      _this.props.finishFunction(_this.state.id, _this.state.name, _this.state.inputData);\n    };\n\n    _this.state.id = props.id;\n    _this.state.name = props.name;\n    _this.state.isWeighted = props.isWeight;\n    _this.state.isCardio = props.isCardio;\n    return _this;\n  }\n\n  (0, _createClass2.default)(WorkoutCard, [{\n    key: \"updateCount\",\n    value: function updateCount(val) {\n      this.setState({\n        count: this.state.count + val\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNativeElements.Card, {\n        containerStyle: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, this.state.name), _react.default.createElement(_reactNative.ScrollView, {\n        contentContainerStyle: {\n          flexGrow: 1\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.exerciseID.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, this.state.textInput.map(function (value) {\n        return value;\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.buttonView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          margin: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        title: \"-\",\n        color: _Colors.default.negative,\n        onPress: function onPress() {\n          return _this2.removeInput();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 33\n        }\n      }, \"-\"))), _react.default.createElement(_reactNative.View, {\n        style: {\n          margin: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        title: \"Finish\",\n        color: _Colors.default.btn,\n        onPress: function onPress() {\n          return _this2.finish();\n        },\n        disabled: this.state.inputData.length === 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 33\n        }\n      }, \"FINISH\"))), _react.default.createElement(_reactNative.View, {\n        style: {\n          margin: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        title: \"+\",\n        color: _Colors.default.positive,\n        onPress: function onPress() {\n          return _this2.addInput();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 33\n        }\n      }, \"+\"))))));\n    }\n  }]);\n  return WorkoutCard;\n}(_react.Component);\n\nexports.WorkoutCard = WorkoutCard;\n\nvar styles = _reactNative.StyleSheet.create({\n  card: {\n    marginTop: 50,\n    width: 370,\n    height: 600,\n    backgroundColor: _Colors.default.card,\n    borderWidth: 0,\n    alignSelf: 'center',\n    alignItems: 'center'\n  },\n  titleText: {\n    color: _Colors.default.text,\n    fontSize: 27,\n    alignSelf: 'center',\n    margin: 15\n  },\n  textLine: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'space-around',\n    width: 300\n  },\n  textField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 40,\n    width: 70,\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: _Colors.default.text\n  },\n  buttonView: {\n    flexDirection: 'row',\n    marginTop: 40,\n    marginBottom: 15,\n    alignItems: 'center',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Dell/Documents/SCHOOL SHIT/FALL 2020/Software Dev Project/WorkoutApp/Screens/Components/WorkoutCard.js"],"names":["WorkoutCard","props","state","id","name","isWeighted","isCardio","textInput","inputData","count","addInput","rep","weight","time","setInfo","push","styles","textLine","textField","text","flex","updateCount","setState","addToArray","input","array","isThere","forEach","aSet","set","containsKey","removeInput","pop","finish","isDone","finishFunction","isWeight","val","card","titleText","flexGrow","item","exerciseID","toString","map","value","buttonView","margin","Colors","negative","buttonText","btn","length","positive","Component","StyleSheet","create","marginTop","width","height","backgroundColor","borderWidth","alignSelf","alignItems","color","fontSize","flexDirection","justifyContent","textFieldBackground","marginBottom","borderColor","fontWeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {StyleSheet, TextInput, Text, View, Button, ScrollView} from 'react-native';\r\nimport {Card} from 'react-native-elements';\r\nimport Colors from \"../../Themes/Colors\";\r\n\r\nexport class WorkoutCard extends Component{\r\n    state = {\r\n        id: '',\r\n        name: '',\r\n        isWeighted: false,\r\n        isCardio: false,\r\n        textInput: [],\r\n        inputData: [],\r\n        count: 1,\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state.id = props.id;\r\n        this.state.name = props.name;\r\n        this.state.isWeighted = props.isWeight;\r\n        this.state.isCardio = props.isCardio;\r\n    }\r\n\r\n    updateCount(val){\r\n        this.setState({\r\n            count: this.state.count + val\r\n        })\r\n    }\r\n\r\n    addInput = () => {\r\n        let textInput = this.state.textInput;\r\n        // let inputData = this.state.inputData;\r\n        let rep = 0;\r\n        let weight = 0;\r\n        let time = 0;\r\n        let setInfo = [];\r\n        if (this.state.isWeighted && !this.state.isCardio) {\r\n            textInput.push(\r\n                <View containerStyle = {styles.textLine}\r\n                      key={this.state.count}>\r\n                    <View style={styles.textField}>\r\n                        <Text>{this.state.count}</Text>\r\n                    </View>\r\n                    <View style={styles.textField}>\r\n                        <TextInput\r\n                            placeholder=\"REP\"\r\n                            onChangeText={(text) => rep = text}\r\n                            keyboardType={\"number-pad\"}\r\n                            style = {{flex: 1}}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.textField}>\r\n                        <TextInput\r\n                            placeholder=\"WEIGHT\"\r\n                            onChangeText={(text) => weight = text}\r\n                            keyboardType={\"number-pad\"}\r\n                            style = {{flex: 1}}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            );\r\n            setInfo.push({'set': this.state.count, 'rep': rep, 'weight': weight});\r\n        }\r\n        else if (!this.state.isWeighted && !this.state.isCardio) {\r\n            textInput.push(\r\n                <View containerStyle = {styles.textLine}\r\n                      key={this.state.count}>\r\n                    <View style={styles.textField}>\r\n                        <Text>{this.state.count}</Text>\r\n                    </View>\r\n                    <View style={styles.textField}>\r\n                        <TextInput\r\n                            placeholder=\"REP\"\r\n                            onChangeText={(text) => rep = text}\r\n                            keyboardType={\"number-pad\"}\r\n                            style = {{flex: 1}}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            );\r\n            setInfo.push({'set': this.state.count, 'rep': rep});\r\n        }\r\n        else {\r\n            textInput.push(\r\n                <View containerStyle = {styles.textLine}>\r\n                    <View style={styles.textField}\r\n                          key={this.state.count}>\r\n                        <Text>{this.state.count}</Text>\r\n                    </View>\r\n                    <View style={styles.textField}>\r\n                        <TextInput\r\n                            placeholder=\"TIME\"\r\n                            onChangeText={(text) => time = text}\r\n                            keyboardType={\"number-pad\"}\r\n                            style = {{flex: 1}}\r\n                        />\r\n                    </View>\r\n             </View>\r\n            );\r\n            setInfo.push({'set': this.state.count, 'time': time});\r\n        }\r\n        this.updateCount(1);\r\n        this.setState({textInput});\r\n        this.addToArray(setInfo, this.state.count);\r\n    }\r\n\r\n    addToArray = (input, count) => {\r\n        let array = this.state.inputData;\r\n        let isThere = false;\r\n\r\n        if(array !== 0){\r\n            array.forEach(aSet => {\r\n                if(aSet.set === count){\r\n                    if(aSet.containsKey('rep')){\r\n                        aSet.rep = input.rep;\r\n                        aSet.weight = input.weight;\r\n                    }\r\n                    else {\r\n                        aSet.set = set;\r\n                    }\r\n                    isThere = true\r\n                }\r\n            });\r\n        }\r\n        if(isThere){\r\n            this.setState({\r\n                inputData: array\r\n            });\r\n        }\r\n        else {\r\n            array.push(input);\r\n            this.setState({\r\n                inputData: array\r\n            });\r\n        }\r\n    }\r\n\r\n    removeInput = () => {\r\n        let textInput = this.state.textInput;\r\n        let inputData = this.state.inputData;\r\n\r\n        textInput.pop();\r\n        inputData.pop();\r\n        this.updateCount(- 1);\r\n\r\n        this.setState({textInput, inputData});\r\n    }\r\n\r\n    finish = () => {\r\n        this.setState({isDone : true});\r\n        this.props.finishFunction(this.state.id, this.state.name, this.state.inputData);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View>\r\n                <Card containerStyle={styles.card}>\r\n                    <Text style = {styles.titleText}>{this.state.name}</Text>\r\n                        <ScrollView\r\n                            contentContainerStyle={{flexGrow: 1}}\r\n                            keyExtractor={(item) => item.exerciseID.toString()}>\r\n                            {this.state.textInput.map((value) => {\r\n                                return value\r\n                            })}\r\n\r\n                        </ScrollView>\r\n                    <View style={styles.buttonView}>\r\n                        <View style={{margin: 5}}>\r\n                            <Button\r\n                                title = '-'\r\n                                color={Colors.negative}\r\n                                onPress={() => this.removeInput()}>\r\n                                <Text style={styles.buttonText}>-</Text>\r\n                            </Button>\r\n                        </View>\r\n                        <View style={{margin: 5}}>\r\n                            <Button\r\n                                title = 'Finish'\r\n                                color = {Colors.btn}\r\n                                onPress={() => this.finish()}\r\n                                disabled={this.state.inputData.length === 0}>\r\n\r\n                                <Text style={styles.buttonText}>FINISH</Text>\r\n                            </Button>\r\n                        </View>\r\n                        <View style={{margin: 5}}>\r\n                            <Button\r\n                                title = '+'\r\n                                color = {Colors.positive}\r\n                                onPress={() => this.addInput()}>\r\n                                <Text style={styles.buttonText}>+</Text>\r\n                            </Button>\r\n                        </View>\r\n                    </View>\r\n                </Card>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        marginTop: 50,\r\n        width: 370,\r\n        height: 600,\r\n        backgroundColor: Colors.card,\r\n        borderWidth: 0,\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    titleText: {\r\n        color: Colors.text,\r\n        fontSize: 27,\r\n        alignSelf: 'center',\r\n        margin: 15,\r\n    },\r\n    textLine:{\r\n        flexDirection: 'row',\r\n        flex: 1,\r\n        justifyContent: 'space-around',\r\n        width: 300,\r\n    },\r\n    textField: {\r\n        alignSelf: 'center',\r\n        backgroundColor: Colors.textFieldBackground,\r\n        color: Colors.card,\r\n        height: 40,\r\n        width: 70,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        borderWidth: 2,\r\n        borderColor: Colors.card,\r\n    },\r\n    buttonText: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n        color: Colors.text,\r\n    },\r\n    buttonView: {\r\n        flexDirection: 'row',\r\n        marginTop: 40,\r\n        marginBottom: 15,\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"script"}