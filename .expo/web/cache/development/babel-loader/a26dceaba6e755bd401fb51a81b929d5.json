{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _Colors = _interopRequireDefault(require(\"../Themes/Colors\"));\n\nvar _passwordValidator = _interopRequireDefault(require(\"password-validator\"));\n\nvar _es = _interopRequireDefault(require(\"validator/es\"));\n\nvar firebase = _interopRequireWildcard(require(\"firebase\"));\n\nrequire(\"firebase/firestore\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\arack\\\\OneDrive\\\\Desktop\\\\WorkoutApp\\\\Screens\\\\SignUpScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SignUpScreen = function (_React$Component) {\n  (0, _inherits2.default)(SignUpScreen, _React$Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SignUpScreen);\n    _this = _super.call(this);\n    _this.state = {\n      username: 'aaaa',\n      email: 'a@a.com',\n      password: 'aA1!aaaa',\n      confirmPassword: 'aA1!aaaa',\n      errorMessage: ''\n    };\n    _this.passwordValidator = new _passwordValidator.default();\n    _this.userNameValidator = new _passwordValidator.default();\n\n    _this.validateFields = function () {\n      if (!_this.userNameValidator.validate(_this.state.username)) {\n        var ref = _this.userNameValidator.validate(_this.state.username, {\n          list: true\n        });\n\n        var message = '';\n\n        if (ref.includes('max')) {\n          message = 'Username must be less than 15 characters';\n        } else if (ref.includes('min')) {\n          message = 'Username must be more than 4 characters';\n        } else if (ref.includes('spaces')) {\n          message = 'Username must not have spaces';\n        }\n\n        _this.setState({\n          errorMessage: message\n        });\n\n        return false;\n      }\n\n      if (!_es.default.isEmail(_this.state.email)) {\n        _this.setState({\n          errorMessage: 'Please enter correct email.'\n        });\n\n        return false;\n      }\n\n      if (!_this.passwordValidator.validate(_this.state.password)) {\n        var _ref = _this.passwordValidator.validate(_this.state.password, {\n          list: true\n        });\n\n        var _message = '';\n\n        if (_ref.includes('min')) {\n          _message = 'Password must be 8 or more characters';\n        } else if (_ref.includes('max')) {\n          _message = 'Password cannot be longer than 15 characters';\n        } else if (_ref.includes('lowercase')) {\n          _message = 'Password must contain a lowercase letter';\n        } else if (_ref.includes('uppercase')) {\n          _message = 'Password must contain a uppercase letter';\n        } else if (_ref.includes('digits')) {\n          _message = 'Password must contain a digit';\n        } else if (_ref.includes('symbols')) {\n          _message = 'Password must contain a symbol';\n        } else if (_ref.includes('spaces')) {\n          _message = 'Password must not contain a space';\n        }\n\n        _this.setState({\n          errorMessage: _message\n        });\n\n        return false;\n      }\n\n      if (_this.state.password !== _this.state.confirmPassword) {\n        _this.setState({\n          errorMessage: 'Passwords must match'\n        });\n\n        return false;\n      }\n\n      _this.setState({\n        errorMessage: null\n      });\n\n      return true;\n    };\n\n    _this.handleOnClick = function () {\n      if (_this.validateFields()) {\n        firebase.auth().createUserWithEmailAndPassword(_this.state.email, _this.state.password).then(function (userCredentials) {\n          firebase.firestore().collection('Users').doc(userCredentials.user.uid).set({\n            UID: userCredentials.user.uid,\n            Username: _this.state.username,\n            Email: _this.state.email\n          });\n        }).catch(function (error) {\n          return alert(error);\n        });\n      }\n    };\n\n    _this.passwordValidator.is().min(8);\n\n    _this.passwordValidator.is().max(15);\n\n    _this.passwordValidator.has().lowercase(1);\n\n    _this.passwordValidator.has().uppercase(1);\n\n    _this.passwordValidator.has().digits(1);\n\n    _this.passwordValidator.has().not().spaces(1);\n\n    _this.passwordValidator.has().symbols(1);\n\n    _this.userNameValidator.is().max(15);\n\n    _this.userNameValidator.is().min(4);\n\n    _this.userNameValidator.has().not().spaces();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(SignUpScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.signup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeElements.Card, {\n        containerStyle: styles.signupCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, \"Create a New Account\"), _react.default.createElement(_reactNative.View, {\n        style: styles.textField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        placeholder: \"USERNAME\",\n        style: {\n          marginLeft: 3,\n          marginRight: 3,\n          marginTop: 2\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            username: text\n          });\n        },\n        value: this.state.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.textField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        placeholder: \"EMAIL ADDRESS\",\n        style: {\n          marginLeft: 3,\n          marginRight: 3,\n          marginTop: 2\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.textField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        placeholder: \"PASSWORD\",\n        secureTextEntry: true,\n        style: {\n          marginLeft: 3,\n          marginRight: 3,\n          marginTop: 2\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        value: this.state.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.textField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        secureTextEntry: true,\n        placeholder: \"CONFIRM PASSWORD\",\n        style: {\n          marginLeft: 3,\n          marginRight: 3,\n          marginTop: 2\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            confirmPassword: text\n          });\n        },\n        value: this.state.confirmPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      })), _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, this.state.errorMessage), _react.default.createElement(_reactNative.View, {\n        style: styles.finishButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        style: styles.buttonText,\n        color: \"#066da1\",\n        title: \"FINISH\",\n        onPress: this.handleOnClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n  return SignUpScreen;\n}(_react.default.Component);\n\nexports.default = SignUpScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  signup: {\n    backgroundColor: _Colors.default.background,\n    flex: 1\n  },\n  signupCard: {\n    width: 366,\n    height: 397,\n    backgroundColor: _Colors.default.card,\n    alignItems: 'center',\n    alignSelf: 'center',\n    borderWidth: 0,\n    marginTop: 134\n  },\n  finishButton: {\n    width: 148,\n    height: 35,\n    margin: 51,\n    alignSelf: 'center'\n  },\n  titleText: {\n    color: _Colors.default.text,\n    fontSize: 27,\n    alignSelf: 'center',\n    margin: 15\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: _Colors.default.text\n  },\n  textField: {\n    alignSelf: 'center',\n    backgroundColor: _Colors.default.textFieldBackground,\n    color: _Colors.default.card,\n    height: 40,\n    width: 307,\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderColor: _Colors.default.card\n  }\n});","map":{"version":3,"sources":["C:/Users/arack/OneDrive/Desktop/WorkoutApp/Screens/SignUpScreen.js"],"names":["SignUpScreen","state","username","email","password","confirmPassword","errorMessage","passwordValidator","PasswordValidator","userNameValidator","validateFields","validate","ref","list","message","includes","setState","validator","isEmail","handleOnClick","firebase","auth","createUserWithEmailAndPassword","then","userCredentials","firestore","collection","doc","user","uid","set","UID","Username","Email","catch","error","alert","is","min","max","has","lowercase","uppercase","digits","not","spaces","symbols","styles","signup","signupCard","titleText","textField","marginLeft","marginRight","marginTop","text","finishButton","buttonText","React","Component","StyleSheet","create","backgroundColor","Colors","background","flex","width","height","card","alignItems","alignSelf","borderWidth","margin","color","fontSize","fontWeight","textFieldBackground","marginBottom","borderColor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card} from 'react-native-elements';\r\nimport {View, Text, Button, TextInput} from 'react-native';\r\nimport {StyleSheet} from 'react-native';\r\nimport Colors from '../Themes/Colors';\r\nimport PasswordValidator from 'password-validator';\r\nimport validator from 'validator/es';\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport {firestore} from 'firebase';\r\n\r\nexport default class SignUpScreen extends React.Component {\r\n  state = {\r\n    username: 'aaaa',\r\n    email: 'a@a.com',\r\n    password: 'aA1!aaaa',\r\n    confirmPassword: 'aA1!aaaa',\r\n    errorMessage: '',\r\n  };\r\n\r\n  passwordValidator = new PasswordValidator();\r\n  userNameValidator = new PasswordValidator();\r\n\r\n  constructor() {\r\n    super();\r\n    this.passwordValidator.is().min(8);\r\n    this.passwordValidator.is().max(15);\r\n    this.passwordValidator.has().lowercase(1);\r\n    this.passwordValidator.has().uppercase(1);\r\n    this.passwordValidator.has().digits(1);\r\n    this.passwordValidator.has().not().spaces(1);\r\n    this.passwordValidator.has().symbols(1);\r\n\r\n    this.userNameValidator.is().max(15);\r\n    this.userNameValidator.is().min(4);\r\n    this.userNameValidator.has().not().spaces();\r\n  }\r\n\r\n  validateFields = () => {\r\n    if (!this.userNameValidator.validate(this.state.username)) {\r\n      let ref = this.userNameValidator.validate(this.state.username, {\r\n        list: true,\r\n      });\r\n      var message = '';\r\n      if (ref.includes('max')) {\r\n        message = 'Username must be less than 15 characters';\r\n      } else if (ref.includes('min')) {\r\n        message = 'Username must be more than 4 characters';\r\n      } else if (ref.includes('spaces')) {\r\n        message = 'Username must not have spaces';\r\n      }\r\n      this.setState({\r\n        errorMessage: message,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!validator.isEmail(this.state.email)) {\r\n      this.setState({\r\n        errorMessage: 'Please enter correct email.',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!this.passwordValidator.validate(this.state.password)) {\r\n      let ref = this.passwordValidator.validate(this.state.password, {\r\n        list: true,\r\n      });\r\n      let message = '';\r\n      if (ref.includes('min')) {\r\n        message = 'Password must be 8 or more characters';\r\n      } else if (ref.includes('max')) {\r\n        message = 'Password cannot be longer than 15 characters';\r\n      } else if (ref.includes('lowercase')) {\r\n        message = 'Password must contain a lowercase letter';\r\n      } else if (ref.includes('uppercase')) {\r\n        message = 'Password must contain a uppercase letter';\r\n      } else if (ref.includes('digits')) {\r\n        message = 'Password must contain a digit';\r\n      } else if (ref.includes('symbols')) {\r\n        message = 'Password must contain a symbol';\r\n      } else if (ref.includes('spaces')) {\r\n        message = 'Password must not contain a space';\r\n      }\r\n      this.setState({\r\n        errorMessage: message,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (this.state.password !== this.state.confirmPassword) {\r\n      this.setState({\r\n        errorMessage: 'Passwords must match',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    this.setState({\r\n      errorMessage: null,\r\n    });\r\n    return true;\r\n  };\r\n\r\n  handleOnClick = () => {\r\n    if (this.validateFields()) {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then((userCredentials) => {\r\n          /*\r\n          return userCredentials.user.updateProfile({\r\n            displayName: this.state.name,\r\n          })\r\n           */\r\n          firebase\r\n            .firestore()\r\n            .collection('Users')\r\n            .doc(userCredentials.user.uid)\r\n            .set({\r\n              UID: userCredentials.user.uid,\r\n              Username: this.state.username,\r\n              Email: this.state.email,\r\n            });\r\n        })\r\n        .catch((error) => alert(error));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.signup}>\r\n        <Card containerStyle={styles.signupCard}>\r\n          <Text style={styles.titleText}>Create a New Account</Text>\r\n          <View style={styles.textField}>\r\n            <TextInput\r\n              placeholder=\"USERNAME\"\r\n              style={{marginLeft: 3, marginRight: 3, marginTop: 2}}\r\n              onChangeText={(text) => this.setState({username: text})}\r\n              value={this.state.username}\r\n            />\r\n          </View>\r\n          <View style={styles.textField}>\r\n            <TextInput\r\n              placeholder=\"EMAIL ADDRESS\"\r\n              style={{marginLeft: 3, marginRight: 3, marginTop: 2}}\r\n              onChangeText={(text) => this.setState({email: text})}\r\n              value={this.state.email}\r\n            />\r\n          </View>\r\n          <View style={styles.textField}>\r\n            <TextInput\r\n              placeholder=\"PASSWORD\"\r\n              secureTextEntry={true}\r\n              style={{marginLeft: 3, marginRight: 3, marginTop: 2}}\r\n              onChangeText={(text) => this.setState({password: text})}\r\n              value={this.state.password}\r\n            />\r\n          </View>\r\n          <View style={styles.textField}>\r\n            <TextInput\r\n              secureTextEntry={true}\r\n              placeholder=\"CONFIRM PASSWORD\"\r\n              style={{marginLeft: 3, marginRight: 3, marginTop: 2}}\r\n              onChangeText={(text) => this.setState({confirmPassword: text})}\r\n              value={this.state.confirmPassword}\r\n            />\r\n          </View>\r\n\r\n          {\r\n            //new thing\r\n          }\r\n          <Text>{this.state.errorMessage}</Text>\r\n\r\n          <View style={styles.finishButton}>\r\n            <Button\r\n              style={styles.buttonText}\r\n              color=\"#066da1\"\r\n              title=\"FINISH\"\r\n              onPress={this.handleOnClick}\r\n            />\r\n          </View>\r\n        </Card>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  signup: {\r\n    backgroundColor: Colors.background,\r\n    flex: 1,\r\n  },\r\n  signupCard: {\r\n    width: 366,\r\n    height: 397,\r\n    backgroundColor: Colors.card,\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    borderWidth: 0,\r\n    marginTop: 134,\r\n  },\r\n  finishButton: {\r\n    width: 148,\r\n    height: 35,\r\n    margin: 51,\r\n    alignSelf: 'center',\r\n  },\r\n  titleText: {\r\n    color: Colors.text,\r\n    fontSize: 27,\r\n    alignSelf: 'center',\r\n    margin: 15,\r\n  },\r\n  buttonText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    color: Colors.text,\r\n  },\r\n  textField: {\r\n    alignSelf: 'center',\r\n    backgroundColor: Colors.textFieldBackground,\r\n    color: Colors.card,\r\n    height: 40,\r\n    width: 307,\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    borderWidth: 2,\r\n    borderColor: Colors.card,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}