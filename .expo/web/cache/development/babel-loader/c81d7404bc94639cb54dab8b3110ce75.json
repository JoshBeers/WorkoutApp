{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runSQLTest = runSQLTest;\n\nvar _Exercise = require(\"../Classes/Exercise\");\n\nvar _StartUpSQL = require(\"../StartUpSQL\");\n\nvar _Routine = require(\"../Classes/Routine\");\n\nvar _Workout = require(\"../Classes/Workout\");\n\nfunction testAddNewRoutine(callback) {\n  console.log(\"sqllog_test_AddNewRoutine\", \"the test has begun\");\n  var tE = [new _Exercise.ExerciseWithinRoutine(1, 1, 1, 1), new _Exercise.ExerciseWithinRoutine(2, 1, 2, 5)];\n  var tR = new _Routine.Routine(null, 'test adding new routine', 4, tE);\n  (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n    var originalRoutineList = result;\n    (0, _Exercise.getAllExercisesWithinRoutines)(function (re) {\n      var originalExercises = re;\n      (0, _Routine.addNewRoutine)(tR, function () {\n        (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n          var testRoutines = result;\n          (0, _Exercise.getAllExercisesWithinRoutines)(function (finalExercises) {\n            if (originalRoutineList.length + 1 == testRoutines.length) {\n              colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine routine list length test passed\", 'green');\n            } else {\n              colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine routine list length test failed length expected = \" + originalRoutineList.length + \"result = \" + testRoutines.length, 'red');\n            }\n\n            if (originalExercises.length + 2 == finalExercises.length) {\n              colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine exercise list length test passed\", 'green');\n            } else {\n              colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine exercise list length test faied length expected = \" + originalExercises.length + 2 + \"result = \" + finalExercises.length, 'red');\n            }\n\n            if (callback != null) {\n              callback();\n            }\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction testGetAllRoutinesWithOutExercises(callback) {\n  console.log(\"sqllog_test_GetAllRoutinesWithOutExercises\", \"the test has begun\");\n  (0, _Routine.getAllRoutinesWithOutExercises)(function (result) {\n    if (result.length == 1) {\n      var msg = \"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method passed\";\n      colorTrace(msg, 'green');\n    } else {\n      colorTrace(\"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method failed resulting array this should match the dummy data array that is 1 long = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testGetExercisesFromRoutine1(callback) {\n  console.log(\"sqllog_test_gettingExercisesFromRoutine1\", \"the test has begun\");\n  (0, _Exercise.getExerciseFromRoutine)(1, function (result) {\n    if (result.length == 3) {\n      colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testAddExerciseToRoutine(callback) {\n  console.log(\"sqllog_test_AddExerciseToRoutine\", \"the test has begun\");\n  var data = new _Exercise.ExerciseWithinRoutine(1, 4, 1, 5);\n  (0, _Exercise.addExerciseToRoutine)(1, data, function () {\n    (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n      if (result.length == 4) {\n        colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\", 'red');\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testAddMultipleExercisesToRoutine(callback) {\n  console.log(\"sqllog_test_AddMultipleExercisesToRoutine\", \"the test has begun\");\n  var data = [new _Exercise.ExerciseWithinRoutine(1, 4, 2, 5), new _Exercise.ExerciseWithinRoutine(1, 1, 2, 5)];\n  (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n    var temp = result;\n    (0, _Exercise.addMultipleExercisesToRoutine)(2, data, function () {\n      (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n        if (result.length == temp.length + 2) {\n          colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\", 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testDeleteExerciseFromRoutine(callback) {\n  console.log(\"sqllog_test_DeleteExerciseFromRoutine\", \"the test has begun\");\n  (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n    var temp = result.length;\n    (0, _Exercise.deleteExerciseFromRoutine)(result[1], function () {\n      (0, _Exercise.getAllExercisesWithinRoutines)(function (result) {\n        if (result.length == temp - 1) {\n          colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method failed length init = \" + temp + \" after call = \" + result.length + \" should be one less than init\", 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testDeleteExercisesFromSpecificRoutine(callback) {\n  console.log(\"sqllog_test_DeleteEcercisesFromSpecificRoutine\", \"the test has begun\");\n  (0, _Routine.getAllRoutinesWithOutExercises)(function (res) {\n    var routineIdToDelete = res[0].id;\n    (0, _Exercise.deleteExercisesUnderARoutine)(routineIdToDelete, function () {\n      (0, _Exercise.getExerciseFromRoutine)(routineIdToDelete, function (finalList) {\n        if (finalList.length == 0) {\n          colorTrace(\"sqllog_test_DeleteEcercisesFromSpecificRoutine testDeleteEcercisesFromSpecificRoutine method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_DeleteEcercisesFromSpecificRoutine testDeleteEcercisesFromSpecificRoutine method failed list returned was not empty its length was = \" + finalList.length, 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testGetAllExercises(callback) {\n  console.log(\"sqllog_test_GetAllExercises\", \"the testGetAllExercises test has begun\");\n  (0, _Exercise.getAllExercises)(function (result) {\n    if (result.length == 3) {\n      colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testCreateNewExerciseFromExercise(callback) {\n  console.log(\"sqllog_test_CreateNewExerciseFromExercise\", \"the testGetAllExercises test has begun\");\n  (0, _Exercise.createNewExerciseFromExercise)(new _Exercise.Exercise(1, \"test exercise\", \"this is a test val\", false), function () {\n    (0, _Exercise.getAllExercises)(function (result) {\n      if (result[result.length - 1].name = \"test exercise\") {\n        colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method passed\", 'green');\n      } else {\n        colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \" + result.length, 'red');\n      }\n\n      if (callback != null) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction testDeleteExerciseById(callback) {\n  console.log(\"sqllog_test_DeleteExerciseById\", \"the testDeleteExerciseById test has begun\");\n  var temp = null;\n  (0, _Exercise.getAllExercises)(function (result) {\n    temp = result.length;\n    (0, _Exercise.deleteExerciseById)(result.length - 1, function () {\n      (0, _Exercise.getAllExercises)(function (result) {\n        if (result.length == temp - 1) {\n          colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method passed\", 'green');\n        } else {\n          colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method failed length init = \" + temp + \" after call = \" + result.length + \" should be one less than init\", 'red');\n        }\n\n        if (callback != null) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\nfunction testGetListOfWorkoutsWithoutExercises(callback) {\n  console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises\", \"the testGetListOfWorkoutsWithoutExercises test has begun\");\n  (0, _Workout.getMapOfCompleteWorkoutIDsToDates)(function (result) {\n    if (result.size == 2) {\n      colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method length test passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method failed length should be 2 is = \" + result.size, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction testGetAllCompleteExerciseBySpecificExerciseID(callback) {\n  console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID\", \"the testGetAllCompleteExerciseBySpecificExerciseID test has begun\");\n  (0, _Exercise.getAllCompleteExerciseBySpecificExerciseID)(1, function (result) {\n    if (result.length == 3) {\n      colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result testGetAllCompleteExerciseBySpecificExerciseID method  length test passed\", 'green');\n    } else {\n      colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result testGetAllCompleteExerciseBySpecificExerciseID method failed length should be 3 is = \" + result.length, 'red');\n    }\n\n    if (callback != null) {\n      callback();\n    }\n  });\n}\n\nfunction exerciseTests(callback) {\n  testGetAllExercises(function () {\n    testCreateNewExerciseFromExercise(function () {\n      testDeleteExerciseById(function () {\n        callback();\n      });\n    });\n  });\n}\n\nfunction routineTests(callback) {\n  testGetAllRoutinesWithOutExercises(function () {\n    testGetExercisesFromRoutine1(function () {\n      testAddExerciseToRoutine(function () {\n        testDeleteExerciseFromRoutine(function () {\n          testAddMultipleExercisesToRoutine(function () {\n            testAddNewRoutine(function () {\n              testDeleteExercisesFromSpecificRoutine(function () {\n                callback();\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction completeWorkoutsTest(callback) {\n  testGetListOfWorkoutsWithoutExercises(callback);\n}\n\nfunction completeExerciseTest(callback) {\n  testGetAllCompleteExerciseBySpecificExerciseID(callback);\n}\n\nfunction runSQLTest() {\n  (0, _StartUpSQL.createDummyData)(function () {\n    exerciseTests(function () {\n      routineTests(function () {\n        completeWorkoutsTest(function () {\n          completeExerciseTest();\n        });\n      });\n    });\n  });\n}\n\nfunction colorTrace(msg, color) {\n  console.log(\"%c\" + msg, \"color:\" + color + \";font-weight:bold;\");\n}","map":{"version":3,"sources":["D:/school/softdev projects/WorkoutApp/test/SQLTesting.js"],"names":["testAddNewRoutine","callback","console","log","tE","ExerciseWithinRoutine","tR","Routine","result","originalRoutineList","re","originalExercises","testRoutines","finalExercises","length","colorTrace","testGetAllRoutinesWithOutExercises","msg","testGetExercisesFromRoutine1","testAddExerciseToRoutine","data","testAddMultipleExercisesToRoutine","temp","testDeleteExerciseFromRoutine","testDeleteExercisesFromSpecificRoutine","res","routineIdToDelete","id","finalList","testGetAllExercises","testCreateNewExerciseFromExercise","Exercise","name","testDeleteExerciseById","testGetListOfWorkoutsWithoutExercises","size","testGetAllCompleteExerciseBySpecificExerciseID","exerciseTests","routineTests","completeWorkoutsTest","completeExerciseTest","runSQLTest","color"],"mappings":"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","sourcesContent":["\r\n\r\nimport {\r\n    addExerciseToRoutine, addMultipleExercisesToRoutine,\r\n    createNewExerciseFromExercise,\r\n    deleteExerciseById, deleteExerciseFromRoutine, deleteExercisesUnderARoutine,\r\n    Exercise, ExerciseWithinRoutine, getAllCompleteExerciseBySpecificExerciseID,\r\n    getAllExercises, getAllExercisesWithinRoutines,\r\n    getExerciseFromRoutine\r\n} from \"../Classes/Exercise\";\r\nimport {createDummyData} from \"../StartUpSQL\";\r\nimport {addNewRoutine, getAllRoutinesWithOutExercises, Routine} from \"../Classes/Routine\";\r\nimport {\r\n    getMapOfCompleteWorkoutIDsToDates\r\n} from \"../Classes/Workout\";\r\n\r\n/*\r\nall of the test for routines\r\n\r\n */\r\n\r\nfunction testAddNewRoutine(callback){\r\n    console.log(\"sqllog_test_AddNewRoutine\",\"the test has begun\")\r\n    let tE = [new ExerciseWithinRoutine(1,1,1,1),new ExerciseWithinRoutine(2,1,2,5)]\r\n    let tR =new Routine(null,'test adding new routine',4,tE)\r\n\r\n    getAllRoutinesWithOutExercises(function (result){\r\n        let originalRoutineList = result\r\n        getAllExercisesWithinRoutines(function (re){\r\n            let originalExercises = re\r\n            addNewRoutine(tR,function (){\r\n                getAllRoutinesWithOutExercises(function (result){\r\n                    let testRoutines = result\r\n                    //console.log(\"sqllog_test_AddNewRoutine_result\",result)\r\n                    getAllExercisesWithinRoutines( function (finalExercises){\r\n                        //console.log(\"sqllog_test_AddNewRoutine_result\",result2)\r\n\r\n                        if(originalRoutineList.length+1 == testRoutines.length){\r\n                            colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine routine list length test passed\",'green')\r\n                        }else{\r\n                            colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine routine list length test failed length expected = \"+originalRoutineList.length +\"result = \"+testRoutines.length,'red')\r\n                        }\r\n\r\n                        if(originalExercises.length+2 == finalExercises.length){\r\n                            colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine exercise list length test passed\",'green')\r\n                        }else{\r\n                            colorTrace(\"sqllog_test_AddNewRoutine_result adding new routine exercise list length test faied length expected = \"+originalExercises.length+2 +\"result = \"+finalExercises.length,'red')\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            if(callback != null){\r\n                                callback()\r\n                            }\r\n                    })\r\n                })\r\n            })\r\n\r\n        })\r\n    })\r\n\r\n}\r\n\r\n\r\nfunction testGetAllRoutinesWithOutExercises(callback){\r\n    console.log(\"sqllog_test_GetAllRoutinesWithOutExercises\",\"the test has begun\")\r\n    getAllRoutinesWithOutExercises(function(result){\r\n        //console.log(\"sqllog_test_GetAllRoutinesWithOutExercises_result\", result)\r\n\r\n        if(result.length == 1){\r\n            let msg = \"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method passed\"\r\n            colorTrace(msg,'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_GetAllRoutinesWithOutExercises_result testGetAllRoutinesWithOutExercises method failed resulting array this should match the dummy data array that is 1 long = \"+result.length,'red')\r\n        }\r\n\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction testGetExercisesFromRoutine1(callback){\r\n    console.log(\"sqllog_test_gettingExercisesFromRoutine1\",\"the test has begun\")\r\n    getExerciseFromRoutine(1, function(result) {\r\n        //console.log(\"test_gettingExercisesFromRoutine1_result\",result)\r\n\r\n        if(result.length == 3){\r\n            colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_gettingExercisesFromRoutine1_result testGetExercisesFromRoutine1 method failed resulting array this should match the dummy data array that is 3 long = \"+result.length,'red')\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testAddExerciseToRoutine(callback){\r\n    console.log(\"sqllog_test_AddExerciseToRoutine\",\"the test has begun\")\r\n    let data = new ExerciseWithinRoutine(1,4,1,5)\r\n        addExerciseToRoutine(1,data, function(){\r\n         //   console.log(\"sqllog_test_AddExerciseToRoutine\",\"add exercise\")\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_AddExerciseToRoutine_ressult\",result)\r\n                if(result.length == 4){\r\n                    colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_AddExerciseToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\",'red')\r\n                }\r\n\r\n\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n}\r\n\r\nfunction testAddMultipleExercisesToRoutine(callback){\r\n    console.log(\"sqllog_test_AddMultipleExercisesToRoutine\",\"the test has begun\")\r\n    let data = [new ExerciseWithinRoutine(1,4,2,5),new ExerciseWithinRoutine(1,1,2,5)]\r\n\r\n\r\n    getAllExercisesWithinRoutines(function (result){\r\n\r\n        let temp = result\r\n        addMultipleExercisesToRoutine(2,data, function(){\r\n               //console.log(\"sqllog_test_AddMultipleExercisesToRoutine\",\"add exercise\")\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_AddMultipleExercisesToRoutine_ressult\",temp.length)\r\n\r\n\r\n                if(result.length == temp.length+2){\r\n                    colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_AddMultipleExercisesToRoutine_ressult testAddExerciseToRoutine method failed the new data doesnt match the added data\",'red')\r\n                }\r\n\r\n\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction testDeleteExerciseFromRoutine(callback){\r\n    console.log(\"sqllog_test_DeleteExerciseFromRoutine\",\"the test has begun\")\r\n    getAllExercisesWithinRoutines(function (result){\r\n        let temp = result.length\r\n        //console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\",result)\r\n        deleteExerciseFromRoutine(result[1],function (){\r\n\r\n            getAllExercisesWithinRoutines(function (result){\r\n                //console.log(\"sqllog_test_DeleteExerciseFromRoutine_result\",result)\r\n                if(result.length == temp-1){\r\n                    colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_DeleteExerciseFromRoutine_result testDeleteExerciseFromRoutine method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\",'red')\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\nfunction testDeleteExercisesFromSpecificRoutine(callback){\r\n    console.log(\"sqllog_test_DeleteEcercisesFromSpecificRoutine\",\"the test has begun\")\r\n    getAllRoutinesWithOutExercises(function (res){\r\n        let routineIdToDelete = res[0].id\r\n        deleteExercisesUnderARoutine(routineIdToDelete,function (){\r\n            getExerciseFromRoutine(routineIdToDelete, function (finalList){\r\n\r\n                if(finalList.length == 0){\r\n                    colorTrace(\"sqllog_test_DeleteEcercisesFromSpecificRoutine testDeleteEcercisesFromSpecificRoutine method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_DeleteEcercisesFromSpecificRoutine testDeleteEcercisesFromSpecificRoutine method failed list returned was not empty its length was = \"+finalList.length,'red')\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n\r\n            })\r\n        })\r\n    })\r\n\r\n}\r\n\r\n\r\n/*\r\nall the test for exercises\r\n\r\n */\r\n\r\nfunction testGetAllExercises(callback){\r\n    console.log(\"sqllog_test_GetAllExercises\",\"the testGetAllExercises test has begun\")\r\n    getAllExercises(function (result){\r\n        //console.log(\"sqllog_test_testGetAllExercises_results\",result)\r\n\r\n        if(result.length == 3){\r\n            colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_testGetAllExercises_results testGetAllExercises method failed resulting array this should match the dummy data array that is 3 long = \"+result.length,'red')\r\n        }\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\nfunction testCreateNewExerciseFromExercise(callback){\r\n    console.log(\"sqllog_test_CreateNewExerciseFromExercise\",\"the testGetAllExercises test has begun\")\r\n    createNewExerciseFromExercise(new Exercise(1,\"test exercise\",\"this is a test val\", false), function (){\r\n        getAllExercises(function (result){\r\n            //console.log(\"sqllog_test_CreateNewExerciseFromExercise_results\",result[result.length-1])\r\n\r\n            if(result[result.length-1].name = \"test exercise\"){\r\n                colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method passed\",'green')\r\n            }else{\r\n                colorTrace(\"sqllog_test_CreateNewExerciseFromExercise_results CreateNewExerciseFromExercise method failed resulting array this should match the dummy data array that is 3 long = \"+result.length,'red')\r\n            }\r\n\r\n            if(callback != null){\r\n                callback()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n\r\nfunction testDeleteExerciseById(callback){\r\n   console.log(\"sqllog_test_DeleteExerciseById\",\"the testDeleteExerciseById test has begun\")\r\n    let temp = null\r\n\r\n    getAllExercises(function (result){\r\n        temp = result.length\r\n        deleteExerciseById(result.length-1,function (){\r\n\r\n            getAllExercises(function (result){\r\n\r\n                if(result.length == temp-1){\r\n                    colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method passed\",'green')\r\n                }else{\r\n                    colorTrace(\"sqllog_test_DeleteExerciseById_results testDeleteExerciseById method failed length init = \"+temp+\" after call = \"+ result.length+\" should be one less than init\",'red')\r\n                }\r\n                if(callback != null){\r\n                    callback()\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\ncompleted workout test\r\n\r\n */\r\n\r\nfunction testGetListOfWorkoutsWithoutExercises(callback){\r\n    console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises\",\"the testGetListOfWorkoutsWithoutExercises test has begun\")\r\n    getMapOfCompleteWorkoutIDsToDates(function (result ){\r\n        //console.log(\"sqllog_test_GetListOfWorkoutsWithoutExercises_result\",result)\r\n\r\n        if(result.size == 2){\r\n            colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method length test passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_GetListOfWorkoutsWithoutExercises_results testGetListOfWorkoutsWithoutExercises method failed length should be 2 is = \"+ result.size,'red')\r\n        }\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n    })\r\n}\r\n\r\n\r\n/*\r\ncomplete exercise test\r\n */\r\n\r\nfunction testGetAllCompleteExerciseBySpecificExerciseID(callback){\r\n    console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID\",\"the testGetAllCompleteExerciseBySpecificExerciseID test has begun\")\r\n\r\n    getAllCompleteExerciseBySpecificExerciseID(1 , function (result) {\r\n        //console.log(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result\",result)\r\n\r\n\r\n        if(result.length == 3){\r\n            colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result testGetAllCompleteExerciseBySpecificExerciseID method  length test passed\",'green')\r\n        }else{\r\n            colorTrace(\"sqllog_test_GetAllCompleteExerciseBySpecificExerciseID_result testGetAllCompleteExerciseBySpecificExerciseID method failed length should be 3 is = \"+ result.length,'red')\r\n        }\r\n\r\n        if(callback != null){\r\n            callback()\r\n        }\r\n\r\n    })\r\n}\r\n\r\n\r\n//actuall testing\r\n/*\r\ntest 1-3\r\n */\r\n\r\nfunction exerciseTests(callback){\r\n    testGetAllExercises(function (){\r\n        testCreateNewExerciseFromExercise( function (){\r\n            testDeleteExerciseById(function (){\r\n                    callback()\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction routineTests(callback){\r\n    testGetAllRoutinesWithOutExercises(function(){\r\n        testGetExercisesFromRoutine1(function () {\r\n            testAddExerciseToRoutine(function (){\r\n                testDeleteExerciseFromRoutine(function (){\r\n                    testAddMultipleExercisesToRoutine(function (){\r\n                         testAddNewRoutine(function (){\r\n                             testDeleteExercisesFromSpecificRoutine(function (){\r\n                                 callback()\r\n                             })\r\n                         })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction completeWorkoutsTest(callback){\r\n    testGetListOfWorkoutsWithoutExercises(callback)\r\n}\r\n\r\nfunction completeExerciseTest(callback) {\r\n    testGetAllCompleteExerciseBySpecificExerciseID(callback)\r\n}\r\n\r\n\r\n\r\nexport function runSQLTest(){\r\n    createDummyData(function (){\r\n        exerciseTests(function (){\r\n            routineTests(function (){\r\n                completeWorkoutsTest(function (){\r\n                    completeExerciseTest()\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction colorTrace(msg, color) {\r\n    console.log(\"%c\" + msg, \"color:\" + color + \";font-weight:bold;\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}